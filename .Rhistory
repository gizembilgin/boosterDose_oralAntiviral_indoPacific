labs(color = 'beta modifier')+
facet_grid(shift ~ .)
#find range under reporting
find_underreporting = data.frame()
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(0.9, 0.95, 1, 1.05, 1.1, 1.15)) {
this_incidence_log = workshop_incidence_log_tracker %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
for (this_underreporting in c(60,65,70,75,80,85,90)){
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * this_underreporting,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(this_incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 )
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
under_reporting_est = this_underreporting)
find_underreporting = rbind(find_underreporting,fit_statistic)
}
}
}
View(find_underreporting)
#find range under reporting
find_underreporting = data.frame()
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(0.9, 0.95, 1, 1.05, 1.1, 1.15)) {
this_incidence_log = workshop_incidence_log_tracker %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
for (this_underreporting in c(55:90)){
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * this_underreporting,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(this_incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 )
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
under_reporting_est = this_underreporting)
find_underreporting = rbind(find_underreporting,fit_statistic)
}
}
}
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = workshop[workshop$fit_statistic == min(workshop$fit_statistic),]
workshop
min(workshop$fit_statistic)
min(workshop$fit_statistic,na.rm=TRUE)
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = workshop[workshop$fit_statistic == min(workshop$fit_statistic,na.rm=TRUE),]
workshop
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
this_beta_mod
this_shift
find_underreporting
find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = workshop[workshop$fit == min(workshop$fit,na.rm=TRUE),]
workshop
#find range under reporting
find_underreporting = data.frame()
#find range under reporting
find_underreporting = data.frame()
#find range under reporting
find_underreporting = data.frame()
best_this_combo = data.frame()
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(0.9, 0.95, 1, 1.05, 1.1, 1.15)) {
this_incidence_log = workshop_incidence_log_tracker %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
for (this_underreporting in c(55:90)){
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * this_underreporting,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(this_incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 )
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
under_reporting_est = this_underreporting)
find_underreporting = rbind(find_underreporting,fit_statistic)
}
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = workshop[workshop$fit == min(workshop$fit,na.rm=TRUE),]
best_this_combo = rbind(best_this_combo,workshop)
}
}
View(best_this_combo)
options(scipen = 1000)
View(best_this_combo)
#find range under reporting
find_underreporting = data.frame()
best_this_combo = data.frame()
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(0.9, 0.95, 1, 1.05, 1.1, 1.15)) {
this_incidence_log = workshop_incidence_log_tracker %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
for (this_underreporting in c(40:110)){
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * this_underreporting,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(this_incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 )
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
under_reporting_est = this_underreporting)
find_underreporting = rbind(find_underreporting,fit_statistic)
}
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = workshop[workshop$fit == min(workshop$fit,na.rm=TRUE),]
best_this_combo = rbind(best_this_combo,workshop)
}
}
View(best_this_combo)
beta_tracker = plot_tracker %>%
filter(date<= max(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date>= min(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
shift %in% c(7) &
beta_mod %in% c(1.05)
)
under_reporting_est = 79
ggplot() +
geom_line(data=beta_tracker,aes(x=date,y=rolling_average,color=as.factor(beta_mod)),na.rm=TRUE) +
geom_point(data=case_history[case_history$date<=max(beta_tracker$date) & case_history$date>min(beta_tracker$date),],aes(x=date,y=rolling_average*under_reporting_est)) +
plot_standard +
labs(color = 'beta modifier')+
facet_grid(shift ~ .)
plot_tracker = plot_tracker %>% mutate(omicron_truncation = 1)
plot_tracker
for (TOGGLE_omicron_truncation_factor in c(1,0.9)){
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(1,0.95,1.05,0.9,1.1,1.15)) { #6
if(nrow(plot_tracker[plot_tracker$shift == this_shift &
plot_tracker$beta_mod == this_beta_mod &
plot_tracker$omicron_truncation == TOGGLE_omicron_truncation_factor,])>0){
#skip
} else{
strain_inital = strain_now = 'delta'
fitting_beta[2]= this_beta_mod
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(first_wave_fit$par[1])
covid19_waves$date[2] = covid19_waves$date[2] + this_shift
source(paste(getwd(),"/CommandDeck.R",sep=""))
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * under_reporting_est,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 ,
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
incidence_log = incidence_log %>%
mutate(beta_mod = this_beta_mod, shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
plot_tracker = rbind(plot_tracker,workshop)
fit_tracker = rbind(fit_tracker,fit_statistic)
workshop_incidence_log_tracker = rbind(workshop_incidence_log_tracker,incidence_log)
}
}
}
}
TOGGLE_omicron_truncation_factor
this_shift
this_beta_mod
for (TOGGLE_omicron_truncation_factor in c(1,0.9)){
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(1,0.95,1.05,0.9,1.1,1.15)) { #6
if(nrow(plot_tracker[plot_tracker$shift == this_shift &
plot_tracker$beta_mod == this_beta_mod &
plot_tracker$omicron_truncation == TOGGLE_omicron_truncation_factor,])>0){
#skip
} else{
strain_inital = strain_now = 'delta'
fitting_beta[2]= this_beta_mod
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(first_wave_fit$par[1])
covid19_waves$date[2] = covid19_waves$date[2] + this_shift
source(paste(getwd(),"/CommandDeck.R",sep=""))
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * under_reporting_est,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 ,
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
incidence_log = incidence_log %>%
mutate(beta_mod = this_beta_mod, shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
plot_tracker = rbind(plot_tracker,workshop)
fit_tracker = rbind(fit_tracker,fit_statistic)
workshop_incidence_log_tracker = rbind(workshop_incidence_log_tracker,incidence_log)
}
}
}
}
plot_tracker
plot_tracker = rbind(plot_tracker,workshop)
fit_tracker = rbind(fit_tracker,fit_statistic)
fit_tracker = fit_tracker %>% mutate(omicron_truncation = 1)
workshop_incidence_log_tracker = workshop_incidence_log_tracker %>% mutate(omicron_truncation = 1)
fit_tracker = rbind(fit_tracker,fit_statistic)
workshop_incidence_log_tracker = rbind(workshop_incidence_log_tracker,incidence_log)
for (TOGGLE_omicron_truncation_factor in c(1,0.9)){
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(1,0.95,1.05,0.9,1.1,1.15)) { #6
if(nrow(plot_tracker[plot_tracker$shift == this_shift &
plot_tracker$beta_mod == this_beta_mod &
plot_tracker$omicron_truncation == TOGGLE_omicron_truncation_factor,])>0){
#skip
} else{
strain_inital = strain_now = 'delta'
fitting_beta[2]= this_beta_mod
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(first_wave_fit$par[1])
covid19_waves$date[2] = covid19_waves$date[2] + this_shift
source(paste(getwd(),"/CommandDeck.R",sep=""))
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * under_reporting_est,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 ,
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
incidence_log = incidence_log %>%
mutate(beta_mod = this_beta_mod, shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
plot_tracker = rbind(plot_tracker,workshop)
fit_tracker = rbind(fit_tracker,fit_statistic)
workshop_incidence_log_tracker = rbind(workshop_incidence_log_tracker,incidence_log)
}
}
}
}
for (TOGGLE_omicron_truncation_factor in c(1,0.9)){
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(1,0.95,1.05,0.9,1.1,1.15)) { #6
if(nrow(plot_tracker[plot_tracker$shift == this_shift &
plot_tracker$beta_mod == this_beta_mod &
plot_tracker$omicron_truncation == TOGGLE_omicron_truncation_factor,])>0){
#skip
} else{
strain_inital = strain_now = 'delta'
fitting_beta[2]= this_beta_mod
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(first_wave_fit$par[1])
covid19_waves$date[2] = covid19_waves$date[2] + this_shift
source(paste(getwd(),"/CommandDeck.R",sep=""))
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * under_reporting_est,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 ,
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
incidence_log = incidence_log %>%
mutate(beta_mod = this_beta_mod, shift = this_shift,
omicron_truncation = TOGGLE_omicron_truncation_factor)
plot_tracker = rbind(plot_tracker,workshop)
fit_tracker = rbind(fit_tracker,fit_statistic)
workshop_incidence_log_tracker = rbind(workshop_incidence_log_tracker,incidence_log)
}
}
}
}
this_shift
this_beta_mod
beta_fit_tracker = fit_tracker; beta_fit_tracker[beta_fit_tracker$fit == min(beta_fit_tracker$fit),]
beta_tracker = plot_tracker %>%
filter(date<= max(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date>= min(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date > date_start &
shift %in% c(0, 7, -7, 14, -14) &
beta_mod %in% c(0.9, 0.95, 1, 1.05, 1.1, 1.15) %>%
omicron_truncation == 1
)
under_reporting_est = 90
ggplot() +
geom_line(data=beta_tracker,aes(x=date,y=rolling_average,color=as.factor(beta_mod)),na.rm=TRUE) +
geom_point(data=case_history[case_history$date<=max(beta_tracker$date) & case_history$date>min(beta_tracker$date),],aes(x=date,y=rolling_average*under_reporting_est)) +
plot_standard +
labs(color = 'beta modifier')+
facet_grid(shift ~ .)
beta_tracker = plot_tracker %>%
filter(date<= max(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date>= min(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date > date_start &
shift %in% c(0, 7, -7, 14, -14) &
beta_mod %in% c(0.9, 0.95, 1, 1.05, 1.1, 1.15) &
omicron_truncation == 1
)
under_reporting_est = 90
ggplot() +
geom_line(data=beta_tracker,aes(x=date,y=rolling_average,color=as.factor(beta_mod)),na.rm=TRUE) +
geom_point(data=case_history[case_history$date<=max(beta_tracker$date) & case_history$date>min(beta_tracker$date),],aes(x=date,y=rolling_average*under_reporting_est)) +
plot_standard +
labs(color = 'beta modifier')+
facet_grid(shift ~ .)
beta_tracker = plot_tracker %>%
filter(date<= max(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date>= min(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date > date_start &
shift %in% c(0, 7, -7, 14, -14) &
beta_mod %in% c(0.9, 0.95, 1, 1.05, 1.1, 1.15) &
omicron_truncation != 1
)
under_reporting_est = 90
ggplot() +
geom_line(data=beta_tracker,aes(x=date,y=rolling_average,color=as.factor(beta_mod)),na.rm=TRUE) +
geom_point(data=case_history[case_history$date<=max(beta_tracker$date) & case_history$date>min(beta_tracker$date),],aes(x=date,y=rolling_average*under_reporting_est)) +
plot_standard +
labs(color = 'beta modifier')+
facet_grid(shift ~ .)
beta_tracker = plot_tracker %>%
filter(date<= max(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date>= min(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date > date_start &
shift %in% c(0, 7, -7) &
beta_mod %in% c(0.9, 0.95, 1, 1.05, 1.1, 1.15) #&
#omicron_truncation != 1
)
under_reporting_est = 90
ggplot() +
geom_line(data=beta_tracker,aes(x=date,y=rolling_average,color=as.factor(beta_mod),linetype = as.factor(omicron_truncation)),na.rm=TRUE) +
geom_point(data=case_history[case_history$date<=max(beta_tracker$date) & case_history$date>min(beta_tracker$date),],aes(x=date,y=rolling_average*under_reporting_est)) +
plot_standard +
labs(color = 'beta modifier')+
facet_grid(shift ~ .)
#find range under reporting
find_underreporting = data.frame()
best_this_combo = data.frame()
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(0.9, 0.95, 1, 1.05, 1.1, 1.15)) {
this_incidence_log = workshop_incidence_log_tracker %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
for (this_underreporting in c(40:110)){
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * this_underreporting,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(this_incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 )
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
under_reporting_est = this_underreporting)
find_underreporting = rbind(find_underreporting,fit_statistic)
}
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = workshop[workshop$fit == min(workshop$fit,na.rm=TRUE),]
best_this_combo = rbind(best_this_combo,workshop)
}
}
beta_tracker = plot_tracker %>%
filter(date<= max(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
date>= min(plot_tracker$date[is.na(plot_tracker$rolling_average) == FALSE]) &
shift %in% c(7) &
beta_mod %in% c(1.05)
)
under_reporting_est = 79
ggplot() +
geom_line(data=beta_tracker,aes(x=date,y=rolling_average,color=as.factor(beta_mod)),na.rm=TRUE) +
geom_point(data=case_history[case_history$date<=max(beta_tracker$date) & case_history$date>min(beta_tracker$date),],aes(x=date,y=rolling_average*under_reporting_est)) +
plot_standard +
labs(color = 'beta modifier')+
facet_grid(shift ~ .)
View(best_this_combo)
#find range under reporting
find_underreporting = data.frame()
best_this_combo = data.frame()
for (TOGGLE_omicron_truncation_factor in c(1,0.9)){
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(0.9, 0.95, 1, 1.05, 1.1, 1.15)) {
this_incidence_log = workshop_incidence_log_tracker %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
for (this_underreporting in c(40:110)){
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * this_underreporting,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(this_incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 )
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
under_reporting_est = this_underreporting)
find_underreporting = rbind(find_underreporting,fit_statistic)
}
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift)
workshop = workshop[workshop$fit == min(workshop$fit,na.rm=TRUE),]
best_this_combo = rbind(best_this_combo,workshop)
}
}
}
#find range under reporting
find_underreporting = data.frame()
best_this_combo = data.frame()
#find range under reporting
find_underreporting = data.frame()
best_this_combo = data.frame()
for (TOGGLE_omicron_truncation_factor in c(1,0.9)){
for (this_shift in c(0, 7, -7, 14, -14, 21, -21)){ #7
for (this_beta_mod in  c(0.9, 0.95, 1, 1.05, 1.1, 1.15)) {
this_incidence_log = workshop_incidence_log_tracker %>%
filter(beta_mod == this_beta_mod & shift == this_shift & omicron_truncation == TOGGLE_omicron_truncation_factor)
if (nrow(this_incidence_log)>0){
for (this_underreporting in c(40:110)){
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[1] ~ rolling_average * this_underreporting,
date <= fit_cutoff_dates[1] ~ rolling_average * first_wave_fit$par[2])) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(this_incidence_log, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2 )
fit_statistic = data.frame(fit = sum(workshop$fit_statistic, #fit only after first wave
na.rm=TRUE),
beta_mod = this_beta_mod,
shift = this_shift,
under_reporting_est = this_underreporting,
omicron_truncation = TOGGLE_omicron_truncation_factor)
find_underreporting = rbind(find_underreporting,fit_statistic)
}
workshop = find_underreporting %>%
filter(beta_mod == this_beta_mod & shift == this_shift & omicron_truncation == TOGGLE_omicron_truncation_factor)
workshop = workshop[workshop$fit == min(workshop$fit,na.rm=TRUE),]
best_this_combo = rbind(best_this_combo,workshop)
}
}
}
}
View(best_this_combo)
first_wave_fit
workshop = best_this_combo %>% filter(under_reporting_est > 75)
View(workshop)
