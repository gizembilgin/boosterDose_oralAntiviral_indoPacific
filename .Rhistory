plot3<- ggplot() +
geom_line(data=incidence_log,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,40) +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, plot3, layout_matrix = lay)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
incidence_log <- cbind(incidence_log,Reff_tracker)
colnames(Reff_tracker) <- c('Reff')
incidence_log_unedited <- sol_log_unedited[, c(1,(A*4+2):(A*5+1))]
# select weekly end points
incidence_log_unedited <- incidence_log_unedited %>% filter (time %% time_step == 0, rowSums(incidence_log_unedited) != time)
incidence_log_unedited <- distinct(round(incidence_log_unedited,digits=2))
incidence_log_unedited$date <- date_start + incidence_log_unedited$time
incidence_log_unedited$daily_cases  <- rowSums(incidence_log_unedited[,2:(A+1)])
incidence_log <- incidence_log_unedited %>%
select(date,daily_cases) %>%
mutate(rolling_average = (daily_cases + lag(daily_cases) + lag(daily_cases,n=2)+lag(daily_cases,n=3)
+lag(daily_cases,n=4)+lag(daily_cases,n=5)+lag(daily_cases,n=6))/7) %>%
mutate(rolling_average_percentage = round(100*rolling_average/sum(pop),digits=2)) %>%
mutate(cumulative_incidence = cumsum(daily_cases)) %>%
mutate(cumulative_incidence_percentage = 100*cumsum(daily_cases)/sum(pop))
incidence_log <- cbind(incidence_log,Reff_tracker)
lay <- rbind(c(1,2),c(3,3))
plot1 <-
ggplot() +
geom_line(data=incidence_log,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log$date),],
aes(x=date,y=rolling_average*underascertainment_est/sum(pop)),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,40) +
ylab("daily cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=incidence_log,aes(x=date,y=Reff),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylim(0,4) +
ylab("Reff") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot3<- ggplot() +
geom_line(data=incidence_log,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,40) +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, plot3, layout_matrix = lay)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
rho
setting
contact_matrix
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(plots)_incid by age and vax status.R", echo=TRUE)
View(immunity_from_infection)
rho = mean(immunity_from_infection$ve_predict_mean[immunity_from_infection$outcome == "acquisition" &
immunity_from_infection$strain == 'delta' & immunity_from_infection$days == 1])
rho
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
suscept <- read.csv("1_inputs/susceptibility.csv",header=TRUE)
View(suscept)
suscept = suscept$susceptibility
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
diag_matrix = beta*AverageSymptomaticPeriod*(gamma+(1-gamma)*lota)
diag_matrix
diag_matrix = diag(diag_matrix,num_age_groups)
diag_matrix
suscept
suscept*diag_matrix
beta
#(A) setup
if (strain == 'WT'){R0_to_fit = 2.79
} else if (strain == "delta"){R0_to_fit = 5.08}
contact_matrix_adjust = matrix(data = 0, nrow = num_age_groups, ncol = num_age_groups)
for (i in 1:num_age_groups){
for (j in 1:num_age_groups){
contact_matrix_adjust[i,j] = contact_matrix[i,j] * pop[i]/pop[j]
}
}
#(B) ballpark beta
contact_sum = rowSums(contact_matrix[,1:ncol(contact_matrix)])
contact_ave=sum(contact_sum*(pop/sum(pop))) #average daily contact weighted by age structure
beta_ball_park = R0_to_fit/(contact_ave*AverageSymptomaticPeriod)
#(C) fit!
minimise_this <- function(beta) {
diag_matrix = beta*AverageSymptomaticPeriod*(gamma+(1-gamma)*lota)
diag_matrix = diag(diag_matrix,num_age_groups)
diag_matrix = suscept*diag_matrix
NGM <- contact_matrix_adjust %*% diag_matrix
R0_beta <- abs(eigen(NGM)$values[1])
fit = abs(R0_to_fit-R0_beta)
return(fit)
}
#(D) check fit!
beta_optimised = optimize(minimise_this,c(beta_ball_park*1/2,beta_ball_park*2))$minimum
beta_optimised = rep(beta_optimised,num_age_groups)
beta_check = beta_optimised[1]
diag_matrix = beta_check*AverageSymptomaticPeriod*(gamma+(1-gamma)*lota)
diag_matrix = diag(diag_matrix,num_age_groups)
NGM <- contact_matrix_adjust %*% diag_matrix
R0_beta <- abs(eigen(NGM)$values[1])
beta
beta_optimised
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
Reff
#number as % of whole population
lay <- rbind(c(1,2),c(3,3))
plot1 <-
ggplot() +
geom_line(data=incidence_log,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log$date),],
aes(x=date,y=rolling_average*underascertainment_est/sum(pop)),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,40) +
ylab("daily cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=incidence_log,aes(x=date,y=Reff),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylim(0,6) +
ylab("Reff") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot3<- ggplot() +
geom_line(data=incidence_log,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,40) +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, plot3, layout_matrix = lay)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(plots)_incid by age and vax status.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
model_weeks = seroprev_measured_date - outbreak_start_date
### Toggles
outbreak_start_date = as.Date('2020-04-01')
seroprev_measured_date = as.Date('2021-03-01')
seroprev_measured_value = 2.6
mod_factor_type = 'behavioural'
interval =c(0.01,0.4) #search range
### Application of toggles
date_start = outbreak_start_date
model_weeks = seroprev_measured_date - outbreak_start_date
model_weeks
weeks(model_weeks)
difftime(seroprev_measured_date,outbreak_start_date,units = "weeks")
as.numeric(difftime(seroprev_measured_date,outbreak_start_date,units = "weeks"))
if (mod_factor_type == 'behavioural'){ #NPI = NPI*(1+behaviour_mod)
behaviour_mod = mod_value
uniform_mod = 1
} else if (mod_factor_type == 'uniform'){ #beta = beta*behaviour_mod
behaviour_mod = 0
uniform_mod = mod_value
} else {
warning('no mod_factor')
behaviour_mod = 0
uniform_mod = 1
}
mod_value=0.5
if (mod_factor_type == 'behavioural'){ #NPI = NPI*(1+behaviour_mod)
behaviour_mod = mod_value
uniform_mod = 1
} else if (mod_factor_type == 'uniform'){ #beta = beta*behaviour_mod
behaviour_mod = 0
uniform_mod = mod_value
} else {
warning('no mod_factor')
behaviour_mod = 0
uniform_mod = 1
}
source(paste(getwd(),"/(4)_time_step.R",sep=""))
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
### Toggles
outbreak_start_date = as.Date('2020-04-01')
seroprev_measured_date = as.Date('2021-03-01')
seroprev_measured_value = 2.6
mod_factor_type = 'behavioural'
#options: 'uniform', 'behavioural'(proportional to NPI)
interval =c(0.01,1) #search range
### Application of toggles
date_start = outbreak_start_date
model_weeks =  round(as.numeric(difftime(seroprev_measured_date,outbreak_start_date,units = "weeks")))+1
if (mod_factor_type == 'behavioural'){ #NPI = NPI*(1+behaviour_mod)
behaviour_mod = mod_value
uniform_mod = 1
} else if (mod_factor_type == 'uniform'){ #beta = beta*behaviour_mod
behaviour_mod = 0
uniform_mod = mod_value
} else {
warning('no mod_factor')
behaviour_mod = 0
uniform_mod = 1
}
source(paste(getwd(),"/(4)_time_step.R",sep=""))
### Optimize
time.start=proc.time()[[3]] #let's see how long this runs for
source(paste(getwd(),"/(4)_time_step.R",sep=""))
time.end=proc.time()[[3]]
time.end-time.start
#COMEBACK: by age group?
fit = abs(incidence_log$cumulative_incidence_percentage[incidence_log$date == seroprev_date]
- seroprev_value)
#COMEBACK: by age group?
fit = abs(incidence_log$cumulative_incidence_percentage[incidence_log$date == seroprev_measured_date]
- seroprev_measured_value)
fit;incidence_log$cumulative_incidence_percentage[incidence_log$date == seroprev_date]
fit;incidence_log$cumulative_incidence_percentage[incidence_log$date == seroprev_measured_date]
mod_value
behaviour_mod
interval =c(0.01,0.5) #search range
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(function)_extra_fit mod.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
View(vaccination_history_FINAL)
View(vaccination_history)
setting="PNG"
setting_long="Papua New Guinea"
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
vaccine_type
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
setting
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
View(vaccination_history)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
#       (1/4) Setup
####################################################################
#load libraries
library(tidyverse)
library(readr)
library(deSolve)
library(rvest)
library(ggplot2)
library(gridExtra)
setting="SLE"
if (setting == "PNG"){setting_long = "Papua New Guinea"
} else if (setting == "SLE"){setting_long = "Sierra Leone"}
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
View(Ox_tracker_complete)
Ox_tracker_complete[Ox_tracker_complete$CountryName == "Indonesia",]
Ox_tracker_complete <- readr::read_csv("https://raw.githubusercontent.com/OxCGRT/covid-policy-tracker/master/data/OxCGRT_latest.csv")
Ox_tracker_complete[Ox_tracker_complete$CountryName == "Indonesia",]
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_01_X/(1)_simulate_setting.R", echo=TRUE)
workshop_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
workshop_cases = workshop_cases[workshop_cases$'Country/Region' == setting_long,]
workshop_cases <- workshop_cases %>%
pivot_longer(
cols = 5:ncol(workshop_cases) ,
names_to = 'date',
values_to = 'cases'
)
workshop_cases <- workshop_cases %>%
mutate(date =as.Date(workshop_cases$date, "%m/%d/%y"))
workshop_deaths <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
workshop_deaths = workshop_deaths[workshop_deaths$'Country/Region' == setting_long,]
workshop_deaths <- workshop_deaths %>%
pivot_longer(
cols = 5:ncol(workshop_deaths) ,
names_to = 'date',
values_to = 'deaths'
)
workshop_deaths <- workshop_deaths %>%
mutate(date =as.Date(workshop_deaths$date, "%m/%d/%y"))
workshop <- workshop_cases %>%
left_join(workshop_deaths) %>%
select(date, cases,deaths) %>%
mutate(new = cases - lag(cases),
case_fatality_ratio = deaths/cases,
rolling_average = (new + lag(new,default=0) + lag(new,n=2,default=0)+lag(new,n=3,default=0)
+lag(new,n=4,default=0)+lag(new,n=5,default=0)+lag(new,n=6,default=0))/7)
ggplot() +
geom_point(data=workshop,aes(x=date,y=rolling_average),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
ggplot() +
geom_point(data=workshop,aes(x=date,y=case_fatality_ratio),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("case fatality (%)") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
#ASSUMPTION: cases remain active for 14 days
case_history = workshop %>%
mutate(active = cases - lag(cases,n=14,default=0),
recovered = cases - active)
rm(workshop, workshop_cases, workshop_deaths)
#NB: will have to make assumptions about age-distribution of cases
View(Ox_tracker_complete)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/(1)_simulate_setting.R", echo=TRUE)
setting="IDN"
if (setting == "PNG"){setting_long = "Papua New Guinea"
} else if (setting == "SLE"){setting_long = "Sierra Leone"
} else if (setting == "IDN"){setting_long = "Indonesia"}
workshop_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
workshop_cases = workshop_cases[workshop_cases$'Country/Region' == setting_long,]
workshop_cases <- workshop_cases %>%
pivot_longer(
cols = 5:ncol(workshop_cases) ,
names_to = 'date',
values_to = 'cases'
)
workshop_cases <- workshop_cases %>%
mutate(date =as.Date(workshop_cases$date, "%m/%d/%y"))
workshop_deaths <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
workshop_deaths = workshop_deaths[workshop_deaths$'Country/Region' == setting_long,]
workshop_deaths <- workshop_deaths %>%
pivot_longer(
cols = 5:ncol(workshop_deaths) ,
names_to = 'date',
values_to = 'deaths'
)
workshop_deaths <- workshop_deaths %>%
mutate(date =as.Date(workshop_deaths$date, "%m/%d/%y"))
workshop <- workshop_cases %>%
left_join(workshop_deaths) %>%
select(date, cases,deaths) %>%
mutate(new = cases - lag(cases),
case_fatality_ratio = deaths/cases,
rolling_average = (new + lag(new,default=0) + lag(new,n=2,default=0)+lag(new,n=3,default=0)
+lag(new,n=4,default=0)+lag(new,n=5,default=0)+lag(new,n=6,default=0))/7)
ggplot() +
geom_point(data=workshop,aes(x=date,y=rolling_average),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
R0_this_fit
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
incidence_log$cumulative_incidence[incidence_log$date == '2021-03-31']
incidence_log$cumulative_incidence[incidence_log$date == as.Date('2021-03-31')]
View(incidence_log)
incidence_log$cumulative_incidence_percentage[incidence_log$date == as.Date('2021-03-30')]
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
incidence_log$cumulative_incidence_percentage[incidence_log$date == as.Date('2021-03-30')]
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
incidence_log$cumulative_incidence_percentage[incidence_log$date == as.Date('2021-03-30')]
incidence_log$cumulative_incidence_percentage[incidence_log$date == as.Date('2021-03-01')]
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
incidence_log$cumulative_incidence_percentage[incidence_log$date == as.Date('2021-03-01')]
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
contact_matrix
rowSums(contact_matrix)
colSums(contact_matrix)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_09_X/CommandDeck.R", echo=TRUE)
contact_matrix
outcome = 'acquisition'
strain_test = 'delta'
workshop <- VE_together[VE_together$outcome == outcome &
VE_together$strain == strain_test,]
workshop <- workshop %>%
group_by(vaccine_type,dose) %>%
mutate(VE_internal = ve_predict_mean / max(ve_predict_mean),
immunity=paste(vaccine_type,dose))
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
proj_outcome = unique(workshop$outcome)[i]
plot_list[[i]]  <- ggplot() +
geom_line(data=workshop[workshop$outcome == proj_outcome,],aes(x=days,y=VE_internal,color=as.factor(immunity)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against",proj_outcome,"(",strain_test,')'))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
}
plot_list
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
settin
setting
sum(pop)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
sum(pop)
pop
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
pop
initialRecovered
###### (2/3) Seroprevalence
seroprev = read.csv("1_inputs/seroprev.csv",header=TRUE)
seroprev = seroprev[seroprev$setting == setting,]
initialRecovered = pop*seroprev$seroprev/100
initialRecovered
initialRecovered = round(pop*seroprev$seroprev/100)
initialRecovered
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
seroprev
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
rho
initialRecovered
initialRecovered = round(pop*seroprev$seroprev/100)
initialRecovered
#(C/F): age distribution of cases
#COMEBACK: no data, so assuming uniform across age groups
initialRecovered = round(initialRecovered * pop/sum(pop))
initialRecovered
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/v2022_02_14_X/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
seroprev
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
seroprev
initialRecovered
initialInfected
initialExposed
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
initialRecovered
initialInfected
sum(state); sum(pop) #CHECK = confirmed equal
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
rho
NPI_inital
R0_beta; beta_check; beta_optimised; beta
R0_beta; beta_check; beta_optimised; beta
strain
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
R0_to_fit
rho
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
initialRecovered
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
initialRecovered
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("~/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
initalRecovered
initalRecovered
