View(prev_state)
next_state
View(next_state)
next_state_FINAL
# next time_step!
sol <- as.data.frame(ode(y=next_state_FINAL,times=(seq(0,time_step,by=1)),func=covidODE,parms=parameters))
sol
sol[,1]=sol[,1]+time_step*(increments_number-1) #make times correct
increments_number
time_step
if (increments_number>1){ sol_log=head(sol_log,-1) }#remove last entry from sol_log (overlap of runs)
sol_log <- rbind(sol_log,sol)
sol_log_unedited <- rbind(sol_log_unedited,sol)
### INCIDENCE CALCULATIONS
J = num_age_groups
T = num_vax_types
D = num_vax_doses
RISK = num_risk_groups
A = RISK * J * (T * D + 1) # +1 is unvax
incidence_log_unedited <- sol_log_unedited[, c(1,(A*num_disease_classes+2):(A*(num_disease_classes+1)+1))]
incidence_log_unedited <- incidence_log_unedited %>% filter (time %% time_step == 0, rowSums(incidence_log_unedited) != time)
incidence_log_unedited <- distinct(round(incidence_log_unedited,digits=2))
incidence_log_unedited$date <- date_start + incidence_log_unedited$time
incidence_log_unedited$daily_cases  <- rowSums(incidence_log_unedited[,2:(A+1)])
incidence_log <- incidence_log_unedited %>% select(date,daily_cases)
if (! fitting == "on"){incidence_log = rbind(fitted_incidence_log[,c("date","daily_cases")],incidence_log)}
incidence_log = incidence_log %>%
mutate(rolling_average = (daily_cases + lag(daily_cases) + lag(daily_cases,n=2)+lag(daily_cases,n=3)
+lag(daily_cases,n=4)+lag(daily_cases,n=5)+lag(daily_cases,n=6))/7,
rolling_average_percentage = 100*rolling_average/sum(pop),
cumulative_incidence = cumsum(daily_cases),
cumulative_incidence_percentage = 100*cumsum(daily_cases)/sum(pop))
if (fitting_details == "on"){
Reff <- Reff_time_step(parameters, next_state)
Reff_tracker = rbind(Reff_tracker, Reff)
rho_tracker_dataframe = rbind(rho_tracker_dataframe,parameters$rho)
workshop = parameters$VE
workshop = workshop[workshop$VE > 0, ] %>% mutate(immunity = paste(vaccine_type, dose))
if (nrow(workshop) > 0) {
workshop = aggregate(workshop$VE,
by = list(category = workshop$immunity),
FUN = mean)
colnames(workshop) = c('dose', 'VE')
workshop$date = date_now
VE_tracker_dataframe = rbind(VE_tracker_dataframe, workshop)
}
}
date_now
date_start + increments_number*time_step
NPI_this_step
NPI_estimates$NPI[NPI_estimates$date == date_now]
date_now %in% NPI_estimates$date
NPI_estimates$NPI[NPI_estimates$date == date_now]
NPI_estimates = NPI_estimates %>%
mutate(NPI = (NPI + lag(NPI,1) + lag(NPI,2) + lag(NPI,3) + lead(NPI,1) + lead(NPI,2) + lead(NPI,3))/7 ) %>%
filter(is.na(NPI) == FALSE)
NPI_estimates$NPI[NPI_estimates$date == date_now]
date_now %in% NPI_estimates$date
workshop = case_history %>%
select(date, rolling_average) %>%
mutate(rolling_average  = case_when(
date<as.Date('2021-08-01') ~ rolling_average * under_reporting_wave1,
TRUE ~ rolling_average * under_reporting_wave2
)) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date")
to_plot = workshop %>%
filter(date> baseline_covid19_waves$date[1] &
date<max(workshop$date[is.na(workshop$rolling_average)==FALSE],na.rm=TRUE))
#%>% filter(date>date_start & date<=(date_start+model_weeks*7))
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard
to_plot = third_wave_tracker %>%
filter(date> baseline_covid19_waves$date[1] &
date<max(third_wave_tracker$date[is.na(third_wave_tracker$rolling_average)==FALSE],na.rm=TRUE))
#%>% filter(date>date_start & date<=(date_start+model_weeks*7))
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta3)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard +
facet_grid(shift3 ~. )
### Let's include the third wave! ##############################################
third_wave_tracker = data.frame()
for (this_shift3 in seq(15,60,by=15)) {
for (this_beta3 in seq(1,5)) {
if (nrow(third_wave_tracker[third_wave_tracker$shift3 == this_shift3 &
third_wave_tracker$beta3 == this_beta3, ]) > 0) {
#skip
} else{
fitting = "wave_three"
date_start = baseline_covid19_waves$date[3]-1
model_weeks = as.numeric((as.Date('2023-01-01') - date_start)/7)
strain_inital = strain_now = 'delta'
TOGGLE_delta_truncation_factor = rough_fit$optim$bestmem[1]
fitting_beta = c(rough_fit$optim$bestmem[2],
rough_fit$optim$bestmem[3],
this_beta3)
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(rough_fit$optim$bestmem[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(rough_fit$optim$bestmem[5])
covid19_waves$date[3] = covid19_waves$date[3] + this_shift3
source(paste(getwd(), "/CommandDeck.R", sep = "")) #10 minutes
workshop = case_history %>%
select(date, rolling_average) %>%
mutate(rolling_average  = case_when(
date<as.Date('2021-08-01') ~ rolling_average * under_reporting_wave1,
TRUE ~ rolling_average * under_reporting_wave2
)) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(
fit_statistic = abs(rolling_average - adjusted_reported) ^ 2 ,
beta3 = this_beta3,
shift3 = this_shift3
)
third_wave_tracker = rbind(third_wave_tracker, workshop)
}
}
}
to_plot = third_wave_tracker %>%
filter(date> baseline_covid19_waves$date[1] &
date<max(third_wave_tracker$date[is.na(third_wave_tracker$rolling_average)==FALSE],na.rm=TRUE))
#%>% filter(date>date_start & date<=(date_start+model_weeks*7))
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta3)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard +
facet_grid(shift3 ~. )
to_plot = third_wave_tracker %>%
filter(shift3>15
date> baseline_covid19_waves$date[1] &
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta3)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard +
facet_grid(shift3 ~. )
to_plot = third_wave_tracker %>%
filter(shift3>15 &
date> baseline_covid19_waves$date[1] &
date<max(third_wave_tracker$date[is.na(third_wave_tracker$rolling_average)==FALSE],na.rm=TRUE))
to_plot = third_wave_tracker %>%
filter(shift3>15 &
date> baseline_covid19_waves$date[1] &
date<max(third_wave_tracker$date[is.na(third_wave_tracker$rolling_average)==FALSE],na.rm=TRUE))
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta3)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard +
facet_grid(shift3 ~. )
under_reporting_wave2
under_reporting_wave1
rough_fit$optim$bestmem[3]
rough_fit
rough_fit$optim$bestmem
covid19_waves$date[3]
covid19_waves = baseline_covid19_waves
covid19_waves$date[3] + 60
save.image("x_results/TLS.Rdata")
### Let's have another look at beta2! ##############################################
middle_search = data.frame()
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta3)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard +
facet_grid(shift3 ~. ) +
geom_vline(xintercept = as.Date('2022-04-01'))
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta3)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard +
facet_grid(shift3 ~. )
this_beta2 = 6
seq(2,6)
### Let's have another look at beta2! ##############################################
middle_search = data.frame()
nrow(middle_search[middle_search$beta2 == this_beta2, ]) > 0
fitting = "on"
strain_inital = strain_now = 'WT'
TOGGLE_delta_truncation_factor = rough_fit$optim$bestmem[1]
fitting_beta = c(rough_fit$optim$bestmem[2],
this_beta2,
1)
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(rough_fit$optim$bestmem[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(rough_fit$optim$bestmem[5])
covid19_waves$date[3] = covid19_waves$date[3] + 60
date_start = covid19_waves$date[1] - 2
model_weeks = as.numeric((as.Date('2022-04-01') - date_start)/7)
system.time({source(paste(getwd(), "/CommandDeck.R", sep = "")) })
workshop = case_history %>%
select(date, rolling_average) %>%
mutate(rolling_average  = case_when(
date<as.Date('2021-08-01') ~ rolling_average * under_reporting_wave1,
TRUE ~ rolling_average * under_reporting_wave2
)) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(
fit_statistic = abs(rolling_average - adjusted_reported) ^ 2 ,
beta2 = this_beta2
)
middle_search = rbind(middle_search, workshop)
to_plot = middle_search %>%
filter(
date> baseline_covid19_waves$date[1]
)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta2)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard
beep()
<<<<<<< Updated upstream
for (this_beta2 in seq(2,6)) {
if (nrow(middle_search[middle_search$beta2 == this_beta2, ]) > 0) {
#skip
} else{
fitting = "on"
strain_inital = strain_now = 'WT'
TOGGLE_delta_truncation_factor = rough_fit$optim$bestmem[1]
fitting_beta = c(rough_fit$optim$bestmem[2],
this_beta2,
1)
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(rough_fit$optim$bestmem[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(rough_fit$optim$bestmem[5])
covid19_waves$date[3] = covid19_waves$date[3] + 60
date_start = covid19_waves$date[1] - 2
model_weeks = as.numeric((as.Date('2022-04-01') - date_start)/7)
source(paste(getwd(), "/CommandDeck.R", sep = "")) #10 minutes
workshop = case_history %>%
select(date, rolling_average) %>%
mutate(rolling_average  = case_when(
date<as.Date('2021-08-01') ~ rolling_average * under_reporting_wave1,
TRUE ~ rolling_average * under_reporting_wave2
)) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(
fit_statistic = abs(rolling_average - adjusted_reported) ^ 2 ,
beta2 = this_beta2
)
middle_search = rbind(middle_search, workshop)
}
}
to_plot = middle_search %>%
filter(
date> baseline_covid19_waves$date[1]
)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta2)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard
beep()
to_plot = middle_search %>%
filter(
date> baseline_covid19_waves$date[1] &
date<max(third_wave_tracker$date[is.na(third_wave_tracker$rolling_average)==FALSE],na.rm=TRUE))
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta2)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard
to_plot = middle_search %>%
filter(
date> baseline_covid19_waves$date[1] &
date<max(middle_search$date[is.na(middle_search$rolling_average)==FALSE],na.rm=TRUE))
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(beta2)),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
plot_standard
covid19_waves
rough_fit
round(rough_fit$optim$bestmem[5])
middle_search = middle_search %>% mutate(beta3 = 1)
for (this_beta3 in seq(1,6)) {
for (this_beta2 in seq(2,6)) {
if (nrow(middle_search[middle_search$beta2 == this_beta2 &
middle_search$beta3 == this_beta3, ]) > 0) {
#skip
} else{
fitting = "on"
strain_inital = strain_now = 'WT'
TOGGLE_delta_truncation_factor = rough_fit$optim$bestmem[1]
fitting_beta = c(rough_fit$optim$bestmem[2],
this_beta2,
this_beta3)
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(rough_fit$optim$bestmem[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(rough_fit$optim$bestmem[5])
covid19_waves$date[3] = covid19_waves$date[3] + 60
date_start = covid19_waves$date[1] - 2
model_weeks = as.numeric((as.Date('2022-04-01') - date_start)/7)
source(paste(getwd(), "/CommandDeck.R", sep = "")) #10 minutes
workshop = case_history %>%
select(date, rolling_average) %>%
mutate(rolling_average  = case_when(
date<as.Date('2021-08-01') ~ rolling_average * under_reporting_wave1,
TRUE ~ rolling_average * under_reporting_wave2
)) %>%
rename(adjusted_reported = rolling_average) %>%
left_join(incidence_log, by = "date") %>%
mutate(
fit_statistic = abs(rolling_average - adjusted_reported) ^ 2 ,
beta2 = this_beta2,
beta3 = this_beta3
)
middle_search = rbind(middle_search, workshop)
}
}
}
=======
as.Date("2023-04-26") - Sys.Date()
as.Date("2023-04-26") - as.Date('2023-04-05')
>>>>>>> Stashed changes
install.packages(c("Matrix", "ps"))
R.Version()
library(beepr)
beep()
library(readr)
library(deSolve)
library(rvest)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(beepr)
load("x_results/FJI.Rdata")
par = c(3,5,3,-7,7,90)
fitting = "on"
strain_inital = strain_now = 'WT'
fitting_beta = c(par[1],
par[2],
par[3]
)
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(par[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(par[5])
covid19_waves$date[3] = covid19_waves$date[3] + round(par[6])
date_start = as.Date('2021-04-30')
model_weeks = as.numeric((as.Date('2022-12-31') - date_start)/7)
system.time({source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)})
#quick search under reporting
increments_list = c(100,50,10,5,1)
underreporting_tracker = data.frame()
for (repeat_through in 1:length(increments_list)){
increment = increments_list[repeat_through]
if (repeat_through == 1){
search_list1 = search_list2 = search_list3 = seq(50,1000,by=increments_list[repeat_through])
} else{
best_so_far = underreporting_tracker[underreporting_tracker$fit== min(underreporting_tracker$fit, na.rm=TRUE),]
search_list1 = seq(best_so_far$wave1 - increments_list[repeat_through-1],
best_so_far$wave1 + increments_list[repeat_through-1],
by = increments_list[repeat_through])
search_list2 = seq(best_so_far$wave2 - increments_list[repeat_through-1],
best_so_far$wave2 + increments_list[repeat_through-1],
by = increments_list[repeat_through])
search_list3 = seq(best_so_far$wave3 - increments_list[repeat_through-1],
best_so_far$wave3 + increments_list[repeat_through-1],
by = increments_list[repeat_through])
}
for(under_reporting_wave1 in search_list1){
for (under_reporting_wave2 in search_list2){
for (under_reporting_wave3 in search_list3){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(rolling_average = case_when(
date >= min(omicron_shift$date[omicron_shift$wave == 2])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave3*omicron + 1/under_reporting_wave2*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_wave3,
date >= min(omicron_shift$date[omicron_shift$wave == 1])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave2*omicron + 1/under_reporting_wave1*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1])  ~ rolling_average * 1/under_reporting_wave2,
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) #%>%
#filter(date<as.Date('2022-10-01'))
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic,
na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2,
wave3 = under_reporting_wave3)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
}
}
}
}
fit_statistic = min(underreporting_tracker$fit, na.rm=TRUE)
fit_statistic
these_waves = underreporting_tracker[underreporting_tracker$fit == min(underreporting_tracker$fit),]
under_reporting_wave3 = these_waves$wave3
under_reporting_wave2 = these_waves$wave2
under_reporting_wave1 = these_waves$wave1
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(rolling_average = case_when(
date >= min(omicron_shift$date[omicron_shift$wave == 2])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave3*omicron + 1/under_reporting_wave2*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_wave3,
date >= min(omicron_shift$date[omicron_shift$wave == 1])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave2*omicron + 1/under_reporting_wave1*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1])  ~ rolling_average * 1/under_reporting_wave2,
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) #%>%
ggplot() +
geom_line(data=workshop,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=workshop,aes(x=date,y=reported_cases)) +
plot_standard #+
#geom_vline(xintercept=as.Date('2022-10-01'))
ggplot() +
geom_line(data=incidence_log,aes(x=date,y=rolling_average),na.rm=TRUE) +
plot_standard
require(DEoptim)
820.48 /60
baseline_covid19_waves
prev_fitted_covid19_waves
#these were the dates we used when searching for the range of shift dates
baseline_covid19_waves = data.frame(date = c(as.Date('2021-06-06'),as.Date('2021-10-04'),as.Date('2022-02-01')),
strain = c('delta','omicron','omicron'))
baseline_covid19_waves
system.time({  fitting = "on"
strain_inital = strain_now = 'WT'
fitting_beta = c(par[1],
par[2],
par[3]
)
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(par[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(par[5])
covid19_waves$date[3] = covid19_waves$date[3] + round(par[6])
date_start = as.Date('2021-04-30')
model_weeks = as.numeric((as.Date('2022-12-31') - date_start)/7)
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE) #15 minutes
#quick search under reporting
increments_list = c(100,50,10,5,1)
underreporting_tracker = data.frame()
for (repeat_through in 1:length(increments_list)){
increment = increments_list[repeat_through]
if (repeat_through == 1){
search_list1 = search_list2 = search_list3 = seq(50,1000,by=increments_list[repeat_through])
} else{
best_so_far = underreporting_tracker[underreporting_tracker$fit== min(underreporting_tracker$fit, na.rm=TRUE),]
search_list1 = seq(best_so_far$wave1 - increments_list[repeat_through-1],
best_so_far$wave1 + increments_list[repeat_through-1],
by = increments_list[repeat_through])
search_list2 = seq(best_so_far$wave2 - increments_list[repeat_through-1],
best_so_far$wave2 + increments_list[repeat_through-1],
by = increments_list[repeat_through])
search_list3 = seq(best_so_far$wave3 - increments_list[repeat_through-1],
best_so_far$wave3 + increments_list[repeat_through-1],
by = increments_list[repeat_through])
}
for(under_reporting_wave1 in search_list1){
for (under_reporting_wave2 in search_list2){
for (under_reporting_wave3 in search_list3){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(rolling_average = case_when(
date >= min(omicron_shift$date[omicron_shift$wave == 2])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave3*omicron + 1/under_reporting_wave2*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_wave3,
date >= min(omicron_shift$date[omicron_shift$wave == 1])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave2*omicron + 1/under_reporting_wave1*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1])  ~ rolling_average * 1/under_reporting_wave2,
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) #%>%
#filter(date<as.Date('2022-10-01'))
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic,
na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2,
wave3 = under_reporting_wave3)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
}
}
}
}
fit_statistic = min(underreporting_tracker$fit, na.rm=TRUE)})
warnings()
826.89 /60
these_waves
fit_statistic
these_waves = underreporting_tracker[underreporting_tracker$fit == min(underreporting_tracker$fit),]
these_waves
under_reporting_wave3 = these_waves$wave3
under_reporting_wave2 = these_waves$wave2
under_reporting_wave1 = these_waves$wave1
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(rolling_average = case_when(
date >= min(omicron_shift$date[omicron_shift$wave == 2])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave3*omicron + 1/under_reporting_wave2*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_wave3,
date >= min(omicron_shift$date[omicron_shift$wave == 1])  & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_wave2*omicron + 1/under_reporting_wave1*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1])  ~ rolling_average * 1/under_reporting_wave2,
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) #%>%
ggplot() +
geom_line(data=workshop,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=workshop,aes(x=date,y=reported_cases)) +
plot_standard #+
save.image("x_results/FJI.Rdata")
