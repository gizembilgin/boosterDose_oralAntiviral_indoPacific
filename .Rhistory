t
d
!(d == 2 & t == "Johnson & Johnson")
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
workshop_rows
workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE
#Step Three: estimate omicron from delta
for (o in unique(workshop$outcome)){
for (t in unique(workshop$vaccine_type)){
if (!(d == 2 & t == "Johnson & Johnson")){
for (d in c(1,2)){
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
if (workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE){
estimate = workshop_rows$VE[workshop_rows$strain == 'delta'] * delta_omicron_ratio$mean[delta_omicron_ratio$outcome == o]
workshop$VE[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = estimate
workshop$source_extend[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = "omicron estimated from delta"
}
}}
}
}
sum(workshop$source_extend =="omicron estimated from delta",na.rm=TRUE)
workshop[is.na(workshop$VE),]
##### (2/2) Impute missing values based on previous analysis ###################################################################################
#COMEBACK - this is clunky!
workshop = VE_estimates %>%
mutate(source = case_when(
is.na(VE) == FALSE ~ 'literature',
TRUE ~ 'imputed'
))
#Step One: estimate dose one from dose two
for (s in unique(workshop$strain)){
for (t in unique(workshop$vaccine_type)){
if (t != "Johnson & Johnson"){
for (o in unique(workshop$outcome)){
workshop_rows = workshop[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == o, ]
if (workshop_rows$source[workshop_rows$dose == 1] == "imputed" &
workshop_rows$source[workshop_rows$dose == 2] == "literature"){
estimate = workshop_rows$VE[workshop_rows$dose == 2] * dose_ratio$mean[dose_ratio$outcome == o]
workshop$VE[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == o & workshop$dose == 1] = estimate
workshop$source_extend[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == o & workshop$dose == 1] = "dose one estimated from dose two"
}
}}
}
}
sum(workshop$source_extend == "dose one estimated from dose two",na.rm=TRUE)
#n=7
#Step Two: estimate severe_disease <-> death, and acquisition <-> symptomatic
#(A/B) severe_disease <-> death
#close enough to one, thus set equal
for (s in unique(workshop$strain)){
for (t in unique(workshop$vaccine_type)){
for (d in c(1,2)){
if(!(d == 2 & t == "Johnson & Johnson")){
workshop_rows = workshop[workshop$strain == s & workshop$vaccine_type == t & workshop$dose == d & workshop$outcome %in% c('death','severe_disease'), ]
#severe_outcome -> death
if (workshop_rows$source[workshop_rows$outcome == 'death'] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$outcome == 'death']) &
is.na(workshop_rows$VE[workshop_rows$outcome == 'severe_disease']) == FALSE){ #NOTE ASSUMPTION - may be imputing from already imputed value!!!
estimate = workshop_rows$VE[workshop_rows$outcome == 'severe_disease']
workshop$VE[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'death' & workshop$dose == d] = estimate
workshop$source_extend[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'death' & workshop$dose == d] = "death inferred from severe_disease"
}
#death -> severe_outcome
if (workshop_rows$source[workshop_rows$outcome == 'severe_disease'] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$outcome == 'severe_disease']) &
is.na(workshop_rows$VE[workshop_rows$outcome == 'death']) == FALSE){ #NOTE ASSUMPTION - may be imputing from already imputed value!!!
estimate = workshop_rows$VE[workshop_rows$outcome == 'death']
workshop$VE[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'severe_disease' & workshop$dose == d] = estimate
workshop$source_extend[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'severe_disease' & workshop$dose == d] = "severe_disease inferred from death"
}
}
}
}
}
sum(workshop$source_extend == "death inferred from severe_disease",na.rm=TRUE) # n = 11
sum(workshop$source_extend == "severe_disease inferred from death",na.rm=TRUE) # n = 0
#(B/B) acquisition <-> symptomatic
for (s in unique(workshop$strain)){
for (t in unique(workshop$vaccine_type)){
for (d in c(1,2)){
if(!(d == 2 & t == "Johnson & Johnson")){
workshop_rows = workshop[workshop$strain == s & workshop$vaccine_type == t & workshop$dose == d & workshop$outcome %in% c('any_infection','symptomatic_disease'), ]
#any infection -> symptomatic infection
if (workshop_rows$source[workshop_rows$outcome == 'any_infection'] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$outcome == 'any_infection']) &
is.na(workshop_rows$VE[workshop_rows$outcome == 'symptomatic_disease']) == FALSE){ #NOTE ASSUMPTION - may be imputing from already imputed value!!!
estimate = workshop_rows$VE[workshop_rows$outcome == 'symptomatic_disease'] * infection_sympt_ratio$mean[infection_sympt_ratio$strain == s]
workshop$VE[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'any_infection' & workshop$dose == d] = estimate
workshop$source_extend[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'any_infection' & workshop$dose == d] = "any_infection inferred from symptomatic_disease"
}
#symptomatic infection -> any infection
if (workshop_rows$source[workshop_rows$outcome == 'symptomatic_disease'] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$outcome == 'symptomatic_disease']) &
is.na(workshop_rows$VE[workshop_rows$outcome == 'any_infection']) == FALSE){ #NOTE ASSUMPTION - may be imputing from already imputed value!!!
estimate = workshop_rows$VE[workshop_rows$outcome == 'any_infection'] * 1/infection_sympt_ratio$mean[infection_sympt_ratio$strain == s]
workshop$VE[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'symptomatic_disease' & workshop$dose == d] = estimate
workshop$source_extend[workshop$strain == s & workshop$vaccine_type == t & workshop$outcome == 'symptomatic_disease' & workshop$dose == d] = "symptomatic_disease inferred from any_infection"
}
}
}
}
}
sum(workshop$source_extend == "any_infection inferred from symptomatic_disease",na.rm=TRUE) # n = 4
sum(workshop$source_extend == "symptomatic_disease inferred from any_infection",na.rm=TRUE) # n = 5
#Step Three: estimate omicron from delta
for (o in unique(workshop$outcome)){
for (t in unique(workshop$vaccine_type)){
if (!(d == 2 & t == "Johnson & Johnson")){
for (d in c(1,2)){
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
if (workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE){
estimate = workshop_rows$VE[workshop_rows$strain == 'delta'] * delta_omicron_ratio$mean[delta_omicron_ratio$outcome == o]
workshop$VE[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = estimate
workshop$source_extend[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = "omicron estimated from delta"
}
}}
}
}
sum(workshop$source_extend =="omicron estimated from delta",na.rm=TRUE)
#n=
workshop[is.na(workshop$VE),]
#Step Three: estimate omicron from delta
for (o in unique(workshop$outcome)){
for (t in unique(workshop$vaccine_type)){
if (!(d == 2 & t == "Johnson & Johnson")){
for (d in c(1,2)){
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
if (workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE){
estimate = workshop_rows$VE[workshop_rows$strain == 'delta'] * delta_omicron_ratio$mean[delta_omicron_ratio$outcome == o]
workshop$VE[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = estimate
workshop$source_extend[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = "omicron estimated from delta"
}
}}
}
}
sum(workshop$source_extend =="omicron estimated from delta",na.rm=TRUE)
workshop[is.na(workshop$VE),]
unique(workshop$outcome)
unique(workshop$vaccine_type)
d=1
t
t="Johnson & Johnson"
o
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
workshop_rows
workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
if (workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE){
estimate = workshop_rows$VE[workshop_rows$strain == 'delta'] * delta_omicron_ratio$mean[delta_omicron_ratio$outcome == o]
workshop$VE[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = estimate
workshop$source_extend[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = "omicron estimated from delta"
}
workshop[is.na(workshop$VE),]
#Step Three: estimate omicron from delta
for (o in unique(workshop$outcome)){
for (t in unique(workshop$vaccine_type)){
if (!(d == 2 & t == "Johnson & Johnson")){
for (d in c(1,2)){
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
if (workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE){
estimate = workshop_rows$VE[workshop_rows$strain == 'delta'] * delta_omicron_ratio$mean[delta_omicron_ratio$outcome == o]
workshop$VE[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = estimate
workshop$source_extend[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = "omicron estimated from delta"
}
}}
}
}
sum(workshop$source_extend =="omicron estimated from delta",na.rm=TRUE)
workshop[is.na(workshop$VE),]
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/workshop - VE estimate update.R", echo=TRUE)
unique(workshop$outcome)
unique(workshop$vaccine_type)
delta_omicron_ratio
workshop[is.na(workshop$VE),]
#COMEBACK - why does this not fit into the last loop?
t = "Johnson & Johnson"
d = 1
for (o in unique(workshop$outcome)){
workshop_rows = workshop[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o, ]
if (workshop_rows$source[workshop_rows$strain == "omicron"] == "imputed" &
is.na(workshop_rows$source_extend[workshop_rows$strain == 'omicron']) &
is.na(workshop_rows$VE[workshop_rows$strain == 'delta']) == FALSE){
estimate = workshop_rows$VE[workshop_rows$strain == 'delta'] * delta_omicron_ratio$mean[delta_omicron_ratio$outcome == o]
workshop$VE[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = estimate
workshop$source_extend[workshop$dose == d & workshop$vaccine_type == t & workshop$outcome == o & workshop$strain == "omicron"] = "omicron estimated from delta"
}
}
sum(workshop$source_extend =="omicron estimated from delta",na.rm=TRUE)
workshop[is.na(workshop$VE),]
VE_estimates_imputed = workshop
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == 'delta',]
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == 'omicron',]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=strain,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
#gridExtra::grid.arrange(grobs=plot_list)
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == 'delta',]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=strain,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
require(tidyverse); require(readr);require(ggplot2);require(ggpubr)
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
outcome = 'acquisition'
strain_test = 'delta'
workshop <- VE_together[VE_together$outcome == outcome &
VE_together$strain == strain_test,]
workshop <- workshop %>%
group_by(vaccine_type,dose) %>%
mutate(VE_internal = ve_predict_mean / max(ve_predict_mean),
immunity=paste(vaccine_type,dose))
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
proj_outcome = unique(workshop$outcome)[i]
plot_list[[i]]  <- ggplot() +
geom_line(data=workshop[workshop$outcome == proj_outcome,],aes(x=days,y=VE_internal,color=as.factor(immunity)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against",proj_outcome,"(",strain_test,')'))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
}
plot_list
unqiue(VE_together$outcome)
unique(VE_together$outcome)
to_plot = VE_estimates[VE_estimates$strain == 'delta',]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=strain,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom"
)
to_plot = VE_estimates
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=strain,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom"
)
colnames(VE_estimates_imputed)
VE_estimates_imputed = workshop
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == 'delta',]
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == 'omicron',]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
VE_estimates_imputed = workshop
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == 'omicron',]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=strain,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
View(VE_estimates_imputed)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/workshop - VE estimate update.R", echo=TRUE)
warnings()
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
scale_shape_manual(values=c(1,19)) +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == 'omicron'&VE_estimates_imputed$dose !=3,]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
scale_shape_manual(values=c(1,19)) +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
strain = 'delta'
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == strain &VE_estimates_imputed$dose !=3,]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob(paste('VE estimates against',strain))
)
annotate_figure(plot, top = text_grob(paste('VE estimates against',strain), size = 18))
#annotate_figure(plot, top = text_grob(paste('VE estimates against',strain), size = 18))
plot
strain = 'omicron'
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == strain &VE_estimates_imputed$dose !=3,]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
#geom_point(aes(x=VE,y=vaccine_type, color=as.factor(dose),shape=strain)) +
geom_pointrange(aes(x=VE,y=vaccine_type,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
#annotate_figure(plot, top = text_grob(paste('VE estimates against',strain), size = 18))
plot
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/workshop - VE estimate update.R", encoding = 'UTF-8', echo=TRUE)
View(VE_estimates)
unique(VE_estimates_imputed$vaccine_type)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/workshop - VE estimate update.R", echo=TRUE)
strain = 'delta'
to_plot = VE_estimates_imputed[VE_estimates_imputed$strain == strain &VE_estimates_imputed$dose !=3,]
plot_list = list()
for (i in 1:length(unique(to_plot$outcome))){
outcome = unique(to_plot$outcome)[i]
plot_list [[i]] <- ggplot(data=to_plot[to_plot$outcome==outcome,]) +
geom_pointrange(aes(x=VE,y=vaccine_type_long,color=as.factor(dose),shape=source,xmin=lower_est,xmax=upper_est)) +
xlim(0,100) +
xlab("") +
theme_bw() +
scale_shape_manual(values=c(1,19)) +
ylab("") +
labs(title=paste("VE against ",outcome,sep=""))
}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],
common.legend = TRUE,
legend="bottom")
#annotate_figure(plot, top = text_grob(paste('VE estimates against',strain), size = 18))
plot
VE_estimates_imputed
unique(VE_estimates_imputed$outcome)
##### send to Cromer et al.
severe_outcome_estimates_FINAL = VE_estimates_imputed[VE_estimates_imputed$outcome %in% c('death','severe_disease'), ]
##### send to Cromer et al.
VE_severe_outcome_estimates_FINAL = VE_estimates_imputed[VE_estimates_imputed$outcome %in% c('death','severe_disease'), ]
write.csv(VE_severe_outcome_estimates_FINAL, file = 'x_results/VE_severe_outcome.Rdata')
rootpath
results_warehouse[[2]]
knitr::opts_chunk$set(echo = TRUE)
options(scipen=10000); require(ggpubr); require(knitr)
list_poss_Rdata = list.files(path="x_results/",pattern = "complete_model_run_*")
list_poss_Rdata_details = double()
for (i in 1:length(list_poss_Rdata)){
list_poss_Rdata_details = rbind(list_poss_Rdata_details,
file.info(paste('x_results/',list_poss_Rdata[[i]],sep=''))$mtime)
}
latest_file = list_poss_Rdata[[which.max(list_poss_Rdata_details)]]
load(paste('x_results/',latest_file,sep=''))
results_warehouse[[2]][[3]][[1]]
kable(results_warehouse[[2]][[4]][[1]]$absolute, caption = 'Absolute difference in outcomes',digits=0,format.args = list(big.mark = ","))
kable(results_warehouse[[2]][[4]][[1]]$relative, caption = 'Relative difference in outcomes',digits=2)
results_warehouse[[2]][[3]][[2]]
kable(results_warehouse[[2]][[4]][[2]]$absolute, caption = 'Absolute difference in outcomes',digits=0,format.args = list(big.mark = ","))
kable(results_warehouse[[2]][[4]][[2]]$relative, caption = 'Relative difference in outcomes',digits=2)
results_warehouse[[2]][[3]][[2]]
results_warehouse[[2]]
results_warehouse[[2]]
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(run 2)_varying_coverage.R", echo=TRUE)
results_warehouse[[2]][[3]][[2]]
kable(results_warehouse[[2]][[4]][[2]]$absolute, caption = 'Absolute difference in outcomes',digits=0,format.args = list(big.mark = ","))
kable(results_warehouse[[2]][[4]][[2]]$relative, caption = 'Relative difference in outcomes',digits=2)
results_warehouse[[2]][[3]][[3]]
kable(results_warehouse[[2]][[4]][[3]]$absolute, caption = 'Absolute difference in outcomes',digits=0,format.args = list(big.mark = ","))
kable(results_warehouse[[2]][[4]][[3]]$relative, caption = 'Relative difference in outcomes',digits=2)
results_warehouse[[3]][[3]]
kable(results_warehouse[[3]][[4]]$absolute, caption = 'Absolute difference in outcomes',digits=0,format.args = list(big.mark = ","))
kable(results_warehouse[[3]][[4]]$relative, caption = 'Relative difference in outcomes',digits=2)
save.image(file = paste("x_results/complete_model_run_",Sys.Date(),".Rdata",sep=''))
