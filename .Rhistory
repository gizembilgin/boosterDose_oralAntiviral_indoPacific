outcome_VE = c('death','severe_disease'))
workshop = VE_estimates_imputed %>% filter(strain == strain_now) %>%
select(vaccine_type,dose,outcome,VE) %>% mutate(VE=VE/100) %>%
rename(outcome_VE = outcome)
VE_tracker = VE_tracker %>% left_join(workshop, by = c("dose", "vaccine_type", "outcome_VE"))
}
workshop = crossing(risk_group = risk_group_labels,
dose = 0,
vaccine_type = "unvaccinated",
age_group = age_group_labels,
date = unique(incidence_log$date),
outcome_VE = c('death','severe_disease'),
VE = 0)
VE_tracker = rbind(VE_tracker,workshop)
length(unique(VE_tracker$date))
length(unique(VE_tracker$date[VE_tracker$dose>0,]))
length(unique(VE_tracker$date[VE_tracker$dose>0]))
1:length(unique(incidence_log$date))
max(incidence_log$date) - use_date
use_date
severe_outcome_log = workshop_2 %>%
filter(date >= use_date) %>%
group_by(outcome) %>%
mutate(proj_cum = cumsum(proj))
#create row for table comparing vaccine strategies
row = severe_outcome_log %>%
filter(date == max(severe_outcome_log$date)) %>%
select(-c(proj,date)) %>%
pivot_wider(names_from=outcome,
values_from=proj_cum)
row
waning_toggle_severe_outcome = FALSE
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(once)_severe_outcomes_calc.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(function)_severe_outcome_proj.R", echo=TRUE)
row
save = severe_outcome_log
View(Save)
View(save)
View(severe_outcome_this_run)
save2 = severe_outcome_this_run
View(save2)
View(severe_outcome_log)
waning_toggle_severe_outcome = TRUE
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(once)_severe_outcomes_calc.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(function)_severe_outcome_proj.R", echo=TRUE)
row
options(scipen = 1000)
View(severe_outcome_log)
nrow(save2[save2$percentage<0])
nrow(save2[save2$percentage<0,])
nrow(severe_outcome_this_run[severe_outcome_this_run$percentage<0,])
risk_group_toggle
severe_outcome_this_run = severe_outcome_FINAL %>%
left_join(VE_tracker, by = c("age_group", "outcome_VE", "risk_group")) %>%
mutate(percentage = percentage*(1-VE)) %>%
select(date,outcome,outcome_long,age_group,risk_group,vaccine_type,dose,percentage)
nrow(severe_outcome_this_run[severe_outcome_this_run$percentage<0,])
severe_outcome_this_run = severe_outcome_FINAL %>%
left_join(VE_tracker, by = c("age_group", "outcome_VE", "risk_group")) %>%
mutate(percentage = percentage*(1-VE))
strain_now = 'omicron'
date_now = as.Date('2022-08-18')
outcome = 'severe_disease'
#(1) VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == 'delta',]
}
#(2) doses delivered to this date
occupancy = "off"
if (occupancy == "on"){
if (date_now <= max_occupany_run_date){
source(paste(getwd(),"/(function) vaccine occupancy tracker.R",sep=""))
if (nrow(vaccine_occupancy_tracker) == 0){
vaccine_occupancy_tracker = vaccination_history_FINAL %>%
filter(date == min(vaccination_history_FINAL$date)) %>%
mutate(doses_delivered_this_date = 0)
}
}
vax_to_this_date <- vaccine_occupancy_tracker
} else{
vax_to_this_date <- vaccination_history_FINAL[vaccination_history_FINAL$date <= date_now,] %>% mutate(
dose = case_when(
dose == 8 ~ booster_dose_number,
TRUE ~ dose
)
)
}
vax_to_this_date <- vax_to_this_date %>% # rearrange AIR dataset
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- aggregate(vax_to_this_date$doses,
by=list(Category=vax_to_this_date$risk_group, vax_to_this_date$vaccine_type, vax_to_this_date$dose,vax_to_this_date$age_group)
, FUN=sum)
colnames(total_doses_up_to_this_date) <- c('risk_group','vaccine_type','dose','age_group','total_delivered')
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0
),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- aggregate(meddling$prop,
by=list(Category=meddling$risk_group, meddling$vaccine_type, meddling$dose,meddling$age_group)
, FUN=sum)
colnames(meddling)  = c('risk_group','vaccine_type','dose','age_group','prop')
meddling = meddling %>% mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
#(3) Bring VE d'n and AIR history together
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
#(4) Aggregate to estimate population VE for doses
workshop <- aggregate(workshop$VE_weighted,
by=list(Category=workshop$risk_group,workshop$dose,workshop$vaccine_type,workshop$age_group)
, FUN=sum)
colnames(workshop) <- c('risk_group','dose','vaccine_type','age_group','VE')
#<interim> add none covered vaccines
for (i in 1:J){
for (t in 1:num_vax_types){
for (d in 1:D){
for (r in 1:num_risk_groups){
this_vax = vax_type_list[t]
if (!( this_vax %in% unique(workshop$vaccine_type[workshop$risk_group == risk_group_labels[r] & workshop$dose == d & workshop$age_group == age_group_labels[i]]))){
workshop2 = crossing(risk_group = risk_group_labels[r],
dose = d,
vaccine_type = this_vax,
age_group = age_group_labels[i],
VE =0)
workshop = rbind(workshop,workshop2)
}
}
}
}
}
workshop[is.na(workshop)] <-0 #J&J second dose correction
VE_tidy = workshop
if (! VE_at_risk_suppress == 1){
VE_tidy = VE_tidy %>%
mutate(VE = case_when(
risk_group == risk_group_name ~ VE * VE_at_risk_suppress,
TRUE ~ VE
))
}
VE_tidy
VE_distribution
unique(VE_distribution$waning)
#(3) Bring VE d'n and AIR history together
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
View(workshop)
#(4) Aggregate to estimate population VE for doses
workshop <- aggregate(workshop$VE_weighted,
by=list(Category=workshop$risk_group,workshop$dose,workshop$vaccine_type,workshop$age_group)
, FUN=sum)
colnames(workshop) <- c('risk_group','dose','vaccine_type','age_group','VE')
if(nrow(workshop[workshop$VE>1,])){stop('VE > 1~')}
#(3) Bring VE d'n and AIR history together
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
workshop %>% filter(age_group == '18 to 29' & vaccine_type == 'AstraZeneca')
#(1) VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
View(VE_distribution)
waning = together %>% mutate(waning = TRUE)
no_waning = together %>% mutate(waning = FALSE) %>%
group_by(strain,vaccine_type,dose,outcome) %>%
mutate(VE_days = max(VE_days))
VE_waning_distribution_SO = rbind(waning,no_waning) %>% select(strain, vaccine_type, dose, outcome,days,VE_days,waning)
View(VE_waning_distribution_SO)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE waning distriubtion (severe outcomes).R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE point estimate.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE waning distriubtion (severe outcomes).R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE point estimate.R", echo=TRUE)
warnings()
View(VE_estimates_imputed)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE waning distriubtion (severe outcomes).R", echo=TRUE)
View(VE_estimates_imputed)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE point estimate.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE waning distriubtion (severe outcomes).R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE waning distriubtion (severe outcomes).R", echo=TRUE)
debug
fitting = "off"
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
View(VE_waning_distribution)
strain_now
date_now
outcome
View(VE_waning_distribution)
outcome = 'death'
#(1) VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == 'delta',]
}
#(1) VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == 'delta',]
}
#(2) doses delivered to this date
occupancy = "off"
if (occupancy == "on"){
if (date_now <= max_occupany_run_date){
source(paste(getwd(),"/(function) vaccine occupancy tracker.R",sep=""))
if (nrow(vaccine_occupancy_tracker) == 0){
vaccine_occupancy_tracker = vaccination_history_FINAL %>%
filter(date == min(vaccination_history_FINAL$date)) %>%
mutate(doses_delivered_this_date = 0)
}
}
vax_to_this_date <- vaccine_occupancy_tracker
} else{
vax_to_this_date <- vaccination_history_FINAL[vaccination_history_FINAL$date <= date_now,] %>% mutate(
dose = case_when(
dose == 8 ~ booster_dose_number,
TRUE ~ dose
)
)
}
vax_to_this_date <- vax_to_this_date %>% # rearrange AIR dataset
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- aggregate(vax_to_this_date$doses,
by=list(Category=vax_to_this_date$risk_group, vax_to_this_date$vaccine_type, vax_to_this_date$dose,vax_to_this_date$age_group)
, FUN=sum)
colnames(total_doses_up_to_this_date) <- c('risk_group','vaccine_type','dose','age_group','total_delivered')
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0
),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- aggregate(meddling$prop,
by=list(Category=meddling$risk_group, meddling$vaccine_type, meddling$dose,meddling$age_group)
, FUN=sum)
colnames(meddling)  = c('risk_group','vaccine_type','dose','age_group','prop')
meddling = meddling %>% mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
#(3) Bring VE d'n and AIR history together
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
#(4) Aggregate to estimate population VE for doses
workshop <- aggregate(workshop$VE_weighted,
by=list(Category=workshop$risk_group,workshop$dose,workshop$vaccine_type,workshop$age_group)
, FUN=sum)
colnames(workshop) <- c('risk_group','dose','vaccine_type','age_group','VE')
if(nrow(workshop[workshop$VE>1,])){stop('VE > 1!')}
date_now
outcome = 'severe_disease'
#(1) VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == 'delta',]
}
#(2) doses delivered to this date
occupancy = "off"
if (occupancy == "on"){
if (date_now <= max_occupany_run_date){
source(paste(getwd(),"/(function) vaccine occupancy tracker.R",sep=""))
if (nrow(vaccine_occupancy_tracker) == 0){
vaccine_occupancy_tracker = vaccination_history_FINAL %>%
filter(date == min(vaccination_history_FINAL$date)) %>%
mutate(doses_delivered_this_date = 0)
}
}
vax_to_this_date <- vaccine_occupancy_tracker
} else{
vax_to_this_date <- vaccination_history_FINAL[vaccination_history_FINAL$date <= date_now,] %>% mutate(
dose = case_when(
dose == 8 ~ booster_dose_number,
TRUE ~ dose
)
)
}
vax_to_this_date <- vax_to_this_date %>% # rearrange AIR dataset
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- aggregate(vax_to_this_date$doses,
by=list(Category=vax_to_this_date$risk_group, vax_to_this_date$vaccine_type, vax_to_this_date$dose,vax_to_this_date$age_group)
, FUN=sum)
colnames(total_doses_up_to_this_date) <- c('risk_group','vaccine_type','dose','age_group','total_delivered')
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0
),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- aggregate(meddling$prop,
by=list(Category=meddling$risk_group, meddling$vaccine_type, meddling$dose,meddling$age_group)
, FUN=sum)
colnames(meddling)  = c('risk_group','vaccine_type','dose','age_group','prop')
meddling = meddling %>% mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
#(3) Bring VE d'n and AIR history together
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
#(4) Aggregate to estimate population VE for doses
workshop <- aggregate(workshop$VE_weighted,
by=list(Category=workshop$risk_group,workshop$dose,workshop$vaccine_type,workshop$age_group)
, FUN=sum)
colnames(workshop) <- c('risk_group','dose','vaccine_type','age_group','VE')
if(nrow(workshop[workshop$VE>1,])){stop('VE > 1!')}
outcome = 'any_infection'
#(1) VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == 'delta',]
}
#(2) doses delivered to this date
occupancy = "off"
if (occupancy == "on"){
if (date_now <= max_occupany_run_date){
source(paste(getwd(),"/(function) vaccine occupancy tracker.R",sep=""))
if (nrow(vaccine_occupancy_tracker) == 0){
vaccine_occupancy_tracker = vaccination_history_FINAL %>%
filter(date == min(vaccination_history_FINAL$date)) %>%
mutate(doses_delivered_this_date = 0)
}
}
vax_to_this_date <- vaccine_occupancy_tracker
} else{
vax_to_this_date <- vaccination_history_FINAL[vaccination_history_FINAL$date <= date_now,] %>% mutate(
dose = case_when(
dose == 8 ~ booster_dose_number,
TRUE ~ dose
)
)
}
vax_to_this_date <- vax_to_this_date %>% # rearrange AIR dataset
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- aggregate(vax_to_this_date$doses,
by=list(Category=vax_to_this_date$risk_group, vax_to_this_date$vaccine_type, vax_to_this_date$dose,vax_to_this_date$age_group)
, FUN=sum)
colnames(total_doses_up_to_this_date) <- c('risk_group','vaccine_type','dose','age_group','total_delivered')
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0
),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- aggregate(meddling$prop,
by=list(Category=meddling$risk_group, meddling$vaccine_type, meddling$dose,meddling$age_group)
, FUN=sum)
colnames(meddling)  = c('risk_group','vaccine_type','dose','age_group','prop')
meddling = meddling %>% mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
#(3) Bring VE d'n and AIR history together
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
#(4) Aggregate to estimate population VE for doses
workshop <- aggregate(workshop$VE_weighted,
by=list(Category=workshop$risk_group,workshop$dose,workshop$vaccine_type,workshop$age_group)
, FUN=sum)
colnames(workshop) <- c('risk_group','dose','vaccine_type','age_group','VE')
if(nrow(workshop[workshop$VE>1,])){stop('VE > 1!')}
workshop[workshop$VE>1,]
if(nrow(workshop[round(workshop$VE,digits=2)>1,])){stop('VE > 1!')}
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
row
waning_toggle_severe_outcome
waning_toggle_severe_outcome
waning_toggle_severe_outcome = TRUE
load( file = '1_inputs/VE_waning_distribution.Rdata')
VE_waning_distribution = VE_waning_distribution[VE_waning_distribution$waning == waning_toggle_acqusition,] %>%
mutate(outcome = 'any_infection')
load( file = '1_inputs/VE_waning_distribution_SO.Rdata')
VE_waning_distribution_SO = VE_waning_distribution_SO %>% filter(waning == waning_toggle_severe_outcome )
VE_waning_distribution = rbind(VE_waning_distribution,VE_waning_distribution_SO)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(once)_severe_outcomes_calc.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(function)_severe_outcome_proj.R", echo=TRUE)
row
fitting = "on"
fitted_results = list()
#______________________________________________________________________________________________________________
### Default toggles ___________________________________________________________________________________________
setting = "SLE"
date_start = as.Date('2021-03-31')
strain_inital = strain_now = 'WT'
seed_date = c(as.Date('2021-04-25'),c(as.Date('2021-11-01'))) #first is seed date for delta, second is omicron
#model_weeks = as.numeric(ceiling((max('2021-12-01')-date_start)/7))
model_weeks = as.numeric((Sys.Date()+1-date_start)/7)
#model_weeks = model_weeks + 52 #too see expected trajectory
plotting = "on"
outbreak_timing = "off"
vax_strategy_toggle = "off"
vax_risk_strategy_toggle = "off"
waning_toggle_acqusition = TRUE
waning_toggle_severe_outcome = FALSE
waning_toggle_rho_acqusition = TRUE
rho_severe_disease = "on"
#______________________________________________________________________________________________________________
### Fit without risk group
risk_group_toggle = "off"
source(paste(getwd(),"/CommandDeck.R",sep=""))
for (o in 1:length(unique(waning_to_plot$outcome))){
waning_shape_plot_list[[o]] = ggplot() +
geom_line(data=waning_to_plot[waning_to_plot$outcome == unique(waning_to_plot$outcome)[o],],
aes(x=days,y=VE_days,color=as.factor(immunity)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against",paste(unique(waning_to_plot$outcome)[o]),"(",strain_now,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
}
length(unique(waning_to_plot$outcome))
load( file = '1_inputs/VE_waning_distribution.Rdata')
VE_waning_distribution = VE_waning_distribution[VE_waning_distribution$waning == waning_toggle_acqusition,] %>%
mutate(outcome = 'any_infection')
load( file = '1_inputs/VE_waning_distribution_SO.Rdata')
VE_waning_distribution_SO = VE_waning_distribution_SO %>% filter(waning == waning_toggle_severe_outcome )
VE_waning_distribution = rbind(VE_waning_distribution,VE_waning_distribution_SO)
if ((date_start - vaxCovDelay$delay[vaxCovDelay$dose == d])>= min(vaccination_history_POP$date)){
VE = VE_inital = VE_time_step(strain_inital,date_start,'any_infection')
#VE_onwards_inital <- VE_time_step(strain_inital,date_start,'transmission')
}
waning_shape_plot_list = list()
waning_to_plot = VE_waning_distribution %>%
filter(dose < 3 &
vaccine_type %in% vax_type_list &
strain == strain_now) %>%
mutate(immunity = paste(vaccine_type,dose))
for (o in 1:length(unique(waning_to_plot$outcome))){
waning_shape_plot_list[[o]] = ggplot() +
geom_line(data=waning_to_plot[waning_to_plot$outcome == unique(waning_to_plot$outcome)[o],],
aes(x=days,y=VE_days,color=as.factor(immunity)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against",paste(unique(waning_to_plot$outcome)[o]),"(",strain_now,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
}
length(unique(waning_to_plot$outcome))
View(VE_waning_distribution)
vax_type_list
strain_now
fitting = "on"
fitted_results = list()
#______________________________________________________________________________________________________________
### Default toggles ___________________________________________________________________________________________
setting = "SLE"
date_start = as.Date('2021-03-31')
strain_inital = strain_now = 'WT'
seed_date = c(as.Date('2021-04-25'),c(as.Date('2021-11-01'))) #first is seed date for delta, second is omicron
#model_weeks = as.numeric(ceiling((max('2021-12-01')-date_start)/7))
model_weeks = as.numeric((Sys.Date()+1-date_start)/7)
#model_weeks = model_weeks + 52 #too see expected trajectory
plotting = "on"
outbreak_timing = "off"
vax_strategy_toggle = "off"
vax_risk_strategy_toggle = "off"
waning_toggle_acqusition = TRUE
waning_toggle_severe_outcome = FALSE
waning_toggle_rho_acqusition = TRUE
rho_severe_disease = "on"
#______________________________________________________________________________________________________________
### Fit without risk group
risk_group_toggle = "off"
source(paste(getwd(),"/CommandDeck.R",sep=""))
grid.arrange(plot1,plot2,plot3,plot4,plot5, layout_matrix = lay)
fitted_incidence_log_tidy = incidence_log_tidy
fitted_incidence_log = incidence_log %>% select(date,daily_cases)
fitted_results[[1]] = list(parameters, next_state,fitted_incidence_log_tidy,fitted_incidence_log)
fit_wout_risk_group = date_now
