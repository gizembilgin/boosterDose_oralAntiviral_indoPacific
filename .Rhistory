mutate(percentage = percentage*(1-VE)) %>%
select(date,outcome,outcome_long,age_group,risk_group,vaccine_type,dose,percentage)
severe_outcome_this_run = VE_tracker %>%
left_join(severe_outcome_FINAL, by = c("age_group", "outcome_VE")) %>%
mutate(percentage = percentage*(1-VE)) %>%
select(date,outcome,outcome_long,age_group,risk_group,vaccine_type,dose,percentage)
severe_outcome_this_run = severe_outcome_FINAL %>%
left_join(VE_tracker, by = c("age_group", "outcome_VE")) %>%
mutate(percentage = percentage*(1-VE)) %>%
select(date,outcome,outcome_long,age_group,risk_group,vaccine_type,dose,percentage)
VE_tracker %>% filter(risk_group == "adults_with_comorbidities" & age_group == "18 to 29" & outcome_VE == "death")
severe_outcome_this_run = severe_outcome_FINAL %>%
left_join(VE_tracker, by = c("age_group", "outcome_VE"),relationship = "many-to-many") %>%
mutate(percentage = percentage*(1-VE)) %>%
select(date,outcome,outcome_long,age_group,risk_group,vaccine_type,dose,percentage)
severe_outcome_this_run = severe_outcome_FINAL %>%
left_join(VE_tracker, by = c("age_group", "outcome_VE","risk_group"),relationship = "many-to-many") %>%
mutate(percentage = percentage*(1-VE)) %>%
select(date,outcome,outcome_long,age_group,risk_group,vaccine_type,dose,percentage)
View(severe_outcome_this_run)
severe_outcome_this_run %>% filter(is.na(percentage))
ticket
##### setup
if (exists("age_split_results") == FALSE){ age_split_results = "N"}
plot_standard =     theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
if (outbreak_timing != "off"){
use_date = date_start +1
} else{
use_date = min(covid19_waves$date)
}
date_start
##### infection-derived immunity against severe outcomes
rho_SO_est = data.frame()
for (i in 1:length(unique(incidence_log$date))){
this_date = unique(incidence_log$date)[i]
this_rho = data.frame(protection = rho_time_step(this_date, outcome = "severe_disease")) %>%
mutate(date = this_date)
rho_SO_est = rbind(rho_SO_est,this_rho)
}
reinfection_protection = exposed_log %>%
left_join(rho_SO_est,by='date') %>%
mutate(protection = reinfection_ratio * protection) %>%
select(date,age_group,protection)
workshop = severe_outcome_this_run %>%
left_join(incidence_log_tidy, by = c("date", "age_group", "risk_group", "vaccine_type", "dose")) %>%
mutate(proj = incidence*percentage) %>%
left_join(reinfection_protection, by = c("date", "age_group"))
View(workshop)
workshop = workshop %>% filter(is.na(protection))
date_start
##### projection from incidence to severe outcomes
#(A/D) Join incidence_log_tidy with severe outcome incidence by vax status
workshop = severe_outcome_this_run %>%
left_join(incidence_log_tidy, by = c("date", "age_group", "risk_group", "vaccine_type", "dose")) %>%
mutate(proj = incidence*percentage) %>%
left_join(reinfection_protection, by = c("date", "age_group")) %>%
mutate(proj = case_when(
is.na(protection) == FALSE ~ proj*(1-protection),
TRUE ~ proj))
if(!nrow(severe_outcome_this_run[severe_outcome_this_run$date <= max(incidence_log_tidy$date),]) == nrow(workshop)){stop('have lost rows in severe outcome proj')}
severe_outcome_log_tidy = workshop %>%
select(date,risk_group,age_group,dose,vaccine_type,outcome,proj) %>%
filter(date >= date_start+1)
age_split_results
workshop_2 = workshop %>%
group_by(date,outcome) %>%
summarise(proj=sum(proj),.groups = "keep")
#(C/D) Add cases as an outcome
workshop_incid =  incidence_log_unedited %>%
mutate(outcome ='cases',proj = daily_cases) %>%
select(date,outcome,proj)
#rm(incidence_log_unedited)
workshop_2 = rbind(workshop_2,workshop_incid)
#(D/D) Calculate cumulative severe outcomes by outcome type
severe_outcome_log = workshop_2 %>%
filter(date > use_date ) %>%
group_by(outcome) %>%
mutate(proj_cum = cumsum(proj))
severe_outcome_log_plot = workshop_2 %>%
filter(date >= date_start) %>%
group_by(outcome) %>%
mutate(proj = case_when(
is.na(proj) ~ 0,
TRUE ~ proj),
proj_cum = cumsum(proj)) %>%
filter(! outcome == 'cases' & !date %in% covid19_waves$date)
plot1 <-
ggplot() +
geom_line(data=severe_outcome_log_plot[severe_outcome_log_plot$outcome != 'cases',],
aes(x=date,y=proj,color=as.factor(outcome)),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,40) +
labs(color="")+
ylab("incidence") +
plot_standard
plot2 <-
ggplot() +
geom_line(data=severe_outcome_log_plot[severe_outcome_log_plot$outcome != 'cases',],aes(x=date,y=proj_cum,color=as.factor(outcome)),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative incidence") +
plot_standard +
labs(color="")
grid.arrange(plot1, plot2)
#create row for table comparing vaccine strategies
row = severe_outcome_log %>%
filter(date == max(severe_outcome_log$date)) %>%
select(-c(proj,date)) %>%
pivot_wider(names_from=outcome,
values_from=proj_cum)
row
max(severe_outcome_log$date)
View(severe_outcome_log)
use_date
outbreak_timing
min(covid19_waves$date)
severe_outcome_log_tidy
View(severe_outcome_log_tidy)
options(scipen = 1000)
View(severe_outcome_log_tidy)
workshop =  severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023)
View(workshop)
workshop = workshop %>% filter(proj != 0)
workshop %>% filter(is.na(proj))
outcomes_without_antivirals = severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023) %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
outcomes_without_antivirals
View(RECORD_outcomes_without_antivirals)
ticket
commands
severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023 & age_group == "60 to 69") %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
ticket
severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023 & age_group == "0 to 4") %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023 & dose == 0) %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023 & dose == 1) %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023 & dose == 2) %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023 & dose == 3) %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
3+31+102+6667
incidence_log  %>% filter(format(date,format = "%Y") == 2023) %>% summarise(sum = sum(daily_cases))
ticket
incidence_log  %>% filter(format(date,format = "%Y") == 2023) %>% summarise(sum = sum(daily_cases))
19433062 - 19432470
View(severe_outcome_this_run)
View(rho_SO_est)
ggplot(reinfection_protection) + geom_point(aes(x=date,y=protection,color=as.factor(age_group)))
View(severe_outcome_this_run)
severe_outcome_this_run %>% filter(date == as.Date('2022-07-04') & age_group == "60 to 69" & outcome == "death")
severe_outcome_this_run %>% filter(date == as.Date('2022-07-04') & age_group == "60 to 69" & outcome == "death" & dose != 0)
severe_outcome_this_run %>% filter( age_group == "60 to 69" & outcome == "death" & dose != 0)
View(VE_tracker)
VE_tracker %>% filter(date == as.Date('2022-07-04'))
workshop VE_tracker %>% filter(date == as.Date('2022-07-04'))
workshop = VE_tracker %>% filter(date == as.Date('2022-07-04'))
View(workshop)
num_time_steps
date_start
VE_tracker %>% filter(date == as.Date('2023-07-04'))
severe_outcome_this_run %>% filter(date == as.Date('2023-07-04') & age_group == "60 to 69" & outcome == "death" & dose != 0)
severe_outcome_this_run %>% filter(date == as.Date('2023-07-04') & age_group == "60 to 69" & outcome == "death" & dose != 0)
severe_outcome_this_run %>% filter(date == as.Date('2023-07-04') & age_group == "60 to 69" & outcome == "death")
severe_outcome_this_run %>% filter(date == as.Date('2023-07-04') & age_group == "60 to 69" & outcome == "death"&risk_group == "adults_with_comorbidities")
VE_tracker %>% filter(date == as.Date('2023-07-04') & age_group == "60 to 69" & outcome_VE == "death"&risk_group == "adults_with_comorbidities")
VE_time_step("omicron",as.Date('2023-07-04'),'death')
VE_time_step("omicron",as.Date('2023-07-04'),'death') %>% filter(date == as.Date('2023-07-04') & age_group == "60 to 69" & outcome_VE == "death"&risk_group == "adults_with_comorbidities")
VE_time_step("omicron",as.Date('2023-07-04'),'death') %>% filter(age_group == "60 to 69" & risk_group == "adults_with_comorbidities")
sensitivity_analysis_toggles
strain_now
date_now = as.Date("2023-07-04")
VE_waning_LOCAL = VE_waning_distribution
vaccination_history_LOCAL = vaccination_history_FINAL
SA_toggles_local = sensitivity_analysis_toggles
#(1) load VE_distribution
VE_distribution <- VE_waning_LOCAL[VE_waning_LOCAL$outcome == outcome &
VE_waning_LOCAL$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_LOCAL[VE_waning_LOCAL$outcome == outcome &
VE_waning_LOCAL$strain == 'delta',]
}
if ('VE_older_adults' %in% names(SA_toggles_local)){
if ('age_group' %in% colnames(VE_distribution)){
if (length(unique(VE_distribution$age_group)) == 1){
VE_distribution = VE_distribution %>% ungroup() %>% select(-age_group)
}
}
}
#(2) doses delivered to this date
vax_to_this_date <- vaccination_history_LOCAL[vaccination_history_LOCAL$date <= date_now,]
#re code additional booster doses to correct dose number
if (nrow(vaccination_history_LOCAL[vaccination_history_LOCAL$dose == 8,])>0){
booster_type = unique(vaccination_history_LOCAL$vaccine_type[vaccination_history_LOCAL$dose == 8])
if (booster_type == 'Johnson & Johnson'){booster_dose_number = 2
} else{booster_dose_number = 3}
vax_to_this_date = vax_to_this_date %>% mutate(
dose = case_when(
dose == 9 ~ booster_dose_number + 1,
dose == 8 ~ booster_dose_number,
TRUE ~ dose
))
}
vax_to_this_date <- vax_to_this_date %>%
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- vax_to_this_date %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(total_delivered = sum(doses),.groups = "keep")
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- meddling %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(prop = sum(prop),.groups = "keep") %>%
mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
#(3) Bring VE d'n and AIR history together
if ('age_group' %in% colnames(VE_distribution)){
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days",'age_group')) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
} else{
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
}
#(4) Aggregate to estimate population VE for doses
workshop <- workshop %>%
group_by(risk_group,dose,vaccine_type,age_group) %>%
summarise(VE = sum(VE_weighted),.groups = "keep")
if(nrow(workshop[round(workshop$VE,digits=2)>1,])){stop('VE > 1!')}
#<interim> add none covered vaccines
if (exists("vax_type_list") == FALSE){ vax_type_list =unique(vaccination_history_LOCAL$vaccine_type)}
if (exists("age_group_labels") == FALSE){ age_group_labels =unique(vaccination_history_LOCAL$age_group)}
if (exists("num_vax_doses") == FALSE){ num_vax_doses = length(unique(vaccination_history_LOCAL$dose[vaccination_history_LOCAL$dose != 8]))}
if (exists("risk_group_labels") == FALSE){ risk_group_labels =unique(vaccination_history_LOCAL$risk_group)}
for (t in 1:length(vax_type_list)){
for (i in 1:length(age_group_labels)){
for (d in 1:num_vax_doses){
for (r in 1:length(risk_group_labels)){
this_vax = vax_type_list[t]
if (!( this_vax %in% unique(workshop$vaccine_type[workshop$risk_group == risk_group_labels[r] & workshop$dose == d & workshop$age_group == age_group_labels[i]]))){
workshop2 = crossing(risk_group = risk_group_labels[r],
dose = d,
vaccine_type = this_vax,
age_group = age_group_labels[i],
VE =0)
workshop = rbind(workshop,workshop2)
}
}
}
}
}
workshop[is.na(workshop)] <-0
VE_tidy = workshop
VE_tidy %>% filter(risk_group == "adults_with_comorbidities" & age_group == "60 to 69")
outcome
outcome = "death"
#(1) load VE_distribution
VE_distribution <- VE_waning_LOCAL[VE_waning_LOCAL$outcome == outcome &
VE_waning_LOCAL$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_LOCAL[VE_waning_LOCAL$outcome == outcome &
VE_waning_LOCAL$strain == 'delta',]
}
if ('VE_older_adults' %in% names(SA_toggles_local)){
if ('age_group' %in% colnames(VE_distribution)){
if (length(unique(VE_distribution$age_group)) == 1){
VE_distribution = VE_distribution %>% ungroup() %>% select(-age_group)
}
}
}
#(2) doses delivered to this date
vax_to_this_date <- vaccination_history_LOCAL[vaccination_history_LOCAL$date <= date_now,]
#re code additional booster doses to correct dose number
if (nrow(vaccination_history_LOCAL[vaccination_history_LOCAL$dose == 8,])>0){
booster_type = unique(vaccination_history_LOCAL$vaccine_type[vaccination_history_LOCAL$dose == 8])
if (booster_type == 'Johnson & Johnson'){booster_dose_number = 2
} else{booster_dose_number = 3}
vax_to_this_date = vax_to_this_date %>% mutate(
dose = case_when(
dose == 9 ~ booster_dose_number + 1,
dose == 8 ~ booster_dose_number,
TRUE ~ dose
))
}
vax_to_this_date <- vax_to_this_date %>%
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- vax_to_this_date %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(total_delivered = sum(doses),.groups = "keep")
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- meddling %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(prop = sum(prop),.groups = "keep") %>%
mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
#(3) Bring VE d'n and AIR history together
if ('age_group' %in% colnames(VE_distribution)){
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days",'age_group')) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
} else{
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
}
#(4) Aggregate to estimate population VE for doses
workshop <- workshop %>%
group_by(risk_group,dose,vaccine_type,age_group) %>%
summarise(VE = sum(VE_weighted),.groups = "keep")
if(nrow(workshop[round(workshop$VE,digits=2)>1,])){stop('VE > 1!')}
#<interim> add none covered vaccines
if (exists("vax_type_list") == FALSE){ vax_type_list =unique(vaccination_history_LOCAL$vaccine_type)}
if (exists("age_group_labels") == FALSE){ age_group_labels =unique(vaccination_history_LOCAL$age_group)}
if (exists("num_vax_doses") == FALSE){ num_vax_doses = length(unique(vaccination_history_LOCAL$dose[vaccination_history_LOCAL$dose != 8]))}
if (exists("risk_group_labels") == FALSE){ risk_group_labels =unique(vaccination_history_LOCAL$risk_group)}
for (t in 1:length(vax_type_list)){
for (i in 1:length(age_group_labels)){
for (d in 1:num_vax_doses){
for (r in 1:length(risk_group_labels)){
this_vax = vax_type_list[t]
if (!( this_vax %in% unique(workshop$vaccine_type[workshop$risk_group == risk_group_labels[r] & workshop$dose == d & workshop$age_group == age_group_labels[i]]))){
workshop2 = crossing(risk_group = risk_group_labels[r],
dose = d,
vaccine_type = this_vax,
age_group = age_group_labels[i],
VE =0)
workshop = rbind(workshop,workshop2)
}
}
}
}
}
workshop[is.na(workshop)] <-0
VE_tidy = workshop
VE_tidy %>% filter(risk_group == "adults_with_comorbidities" & age_group == "60 to 69")
View(VE_waning_LOCAL)
workshop = VE_waning_LOCAL %>% filter(vaccine_type == "Johnson & Johnson")
workshop = VE_waning_LOCAL %>% filter(vaccine_type == "Johnson & Johnson" & outcome == "death")
View(workshoo)
View(workshop)
ticket
#(1) load VE_distribution
VE_distribution <- VE_waning_LOCAL[VE_waning_LOCAL$outcome == outcome &
VE_waning_LOCAL$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_LOCAL[VE_waning_LOCAL$outcome == outcome &
VE_waning_LOCAL$strain == 'delta',]
}
if ('VE_older_adults' %in% names(SA_toggles_local)){
if ('age_group' %in% colnames(VE_distribution)){
if (length(unique(VE_distribution$age_group)) == 1){
VE_distribution = VE_distribution %>% ungroup() %>% select(-age_group)
}
}
}
#(2) doses delivered to this date
vax_to_this_date <- vaccination_history_LOCAL[vaccination_history_LOCAL$date <= date_now,]
#re code additional booster doses to correct dose number
if (nrow(vaccination_history_LOCAL[vaccination_history_LOCAL$dose == 8,])>0){
booster_type = unique(vaccination_history_LOCAL$vaccine_type[vaccination_history_LOCAL$dose == 8])
if (booster_type == 'Johnson & Johnson'){booster_dose_number = 2
} else{booster_dose_number = 3}
vax_to_this_date = vax_to_this_date %>% mutate(
dose = case_when(
dose == 9 ~ booster_dose_number + 1,
dose == 8 ~ booster_dose_number,
TRUE ~ dose
))
}
vax_to_this_date <- vax_to_this_date %>%
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- vax_to_this_date %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(total_delivered = sum(doses),.groups = "keep")
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- meddling %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(prop = sum(prop),.groups = "keep") %>%
mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
#(3) Bring VE d'n and AIR history together
if ('age_group' %in% colnames(VE_distribution)){
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days",'age_group')) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
} else{
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
}
to_plot = workshop %>% filter(age_group == "60 to 69" & risk_group == "adults_with_comorbidities")
ggplot(to_plot) + geom_point(aes(x=days,y=prop))
View(to_plot)
to_plot = workshop %>% filter(age_group == "60 to 69" & risk_group == "adults_with_comorbidities" & vaccine_type == "Johnson & Johnson" & dose == 3)
ggplot(to_plot) + geom_point(aes(x=days,y=prop))
severe_outcome_log_tidy  %>%
filter(format(date,format = "%Y") == 2023) %>%
group_by(outcome) %>%
summarise(overall = sum(proj))
View(severe_outcome_log_tidy)
load(file = "x_results/comparison.Rdata")
workshop = comparison %>% left_join(severe_outcome_log_tidy)
workshop = workshop %>% filter(proj_v2 != 0)
workshop = workshop %>% mutate(diff = proj_v2 - proj)
workshop_2 = workshop %>% filter(diff>0)
View(workshop_2)
workshop_2 %>% group_by(risk_group,age_group,dose,vaccine_type,outcome) %>% summarise(diff = sum(diff))
workshop_3 = workshop_2 %>% group_by(risk_group,age_group,dose,vaccine_type,outcome) %>% summarise(diff = sum(diff))
View(workshop_3)
ticket
View(severe_outcome_this_run)
View(best_so_far)
View(comparison)
comparison_v2 = comparison %>% group_by(risk_group,age_group,dose,vaccine_type,outcome) %>% summarise(proj_v2 = sum(proj_v2))
View(comparison_v2)
comparison_v2 = comparison %>% group_by(risk_group,age_group,dose,vaccine_type,outcome) %>% summarise(proj_v2 = sum(proj_v2)) %>% filter(proj_v2 != 0)
severe_outcome_log_tidy_v2 = severe_outcome_log_tidy  %>% group_by(risk_group,age_group,dose,vaccine_type,outcome) %>% summarise(proj = sum(proj)) %>% filter(proj != 0)
View(severe_outcome_log_tidy_v2)
incidence_log_tidy %>% summarise(sum = sum(incidence))
incidence_log_tidy %>% filter(age_group == "60 to 69") %>% summarise(sum = sum(incidence))
incidence_log_tidy %>% filter(age_group == "60 to 69") %>% group_by(dose)%>% summarise(sum = sum(incidence))
severe_outcome_log_tidy %>% filter(age_group == "60 to 69") %>% group_by(dose)%>% summarise(sum = sum(proj))
workshop = severe_outcome_this_run %>%
left_join(incidence_log_tidy, by = c("date", "age_group", "risk_group", "vaccine_type", "dose")) %>%
mutate(proj = incidence*percentage) %>%
left_join(reinfection_protection, by = c("date", "age_group"))
View(workshop)
View(workshop)
workshop_2 = workshop %>% filter(is.na(protection) == TRUE)
workshop_2 = workshop %>% filter(is.na(protection) == TRUE & age_group == "60 to 69")
workshop_2 = workshop %>% filter(is.na(protection) == TRUE & age_group == "60 to 69" & proj != 0)
workshop_2 = workshop %>% filter(is.na(protection) == TRUE & age_group == "60 to 69" & proj != 0 & date>date_start)
workshop_2 = workshop %>% filter(is.na(protection) == TRUE & age_group == "60 to 69" & proj != 0 & date>=date_start)
outcome_without_antivirals
outcomes_without_antivirals
View(severe_outcome_this_run)
load(file = "x_results/comparison_percentage.Rdata")
workshop = severe_outcome_this_run %>% left_join(comparison_percentage)
workshop_2 = workshop %>% filter(boosted>percentage)
ggplot(incidence_log[incidence_log$date>as.Date('2023-01-01'),]) + geom_point(aes(x=date,y=daily_cases))
reinfection_protection
workshop = comparison_percentage  %>% left_join(severe_outcome_this_run)
View(workshop)
next_state
next_state %>% group_by(dose) %>% summarise(sum = sum(pop))
View(incidence_log_tidy)
nrow(incidence_log_tidy[incidence_log_tidy$incidence<0,])
vaccination_history_FINAL %>% filter(date>=as.Date('2023-03-01'))
vaccination_history_FINAL %>% filter(date>=as.Date('2023-03-01')) %>% filter(risk_group == risk_group_name)
vaccination_history_FINAL %>% filter(date>=as.Date('2023-03-01')) %>% filter(risk_group == risk_group_name) %>% summarise(sum = sum(doses_delivered_this_date))
vaccination_history_FINAL %>% filter(date>=as.Date('2023-03-01')) %>% ungroup() %>% filter(risk_group == risk_group_name) %>% summarise(sum = sum(doses_delivered_this_date))
