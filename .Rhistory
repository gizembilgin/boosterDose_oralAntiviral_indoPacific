date > fit_cutoff_dates[2] ~ rolling_average * this_setting_best_fit$under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * this_setting_best_fit$under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  this_setting_best_fit$under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[2] ~ rolling_average * this_setting_best_fit$under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * this_setting_best_fit$under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  this_setting_best_fit$under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
under_reporting_est = c(16.9,60,166.5)
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[2] ~ rolling_average * under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
workshop = incidence_log %>%
left_join(workshop, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
fitting_beta
### Check possible range of each fitting_beta ##################################
baseline_fitting_beta = fitting_beta
strain_inital
strain_now
baseline_fitting_beta = fitting_beta
baseline_fitting_beta
fitting_beta = baseline_fitting_beta
fitting_beta
covid19_waves
delta_shift
delta_shift
omicron_shift
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~ rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_est[2]*delta + 1/under_reporting_est[1]*(1-delta)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
case_history
case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date")
case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
left_join(omicron_shift, by = "date")
omicron_shift
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~ rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_est[2]*delta + 1/under_reporting_est[1]*(1-delta)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
under_reporting_est
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
prev_fit = workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
prev_fit = to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
### Check possible range of each fitting_beta ##################################
fitting_beta_range_plot = data.frame()
for (search_this_wave in 1:length(fitting_beta)){
for (search_this_adj in c(0.75,1.25)){
fitting_beta = baseline_fitting_beta
fitting_beta[this_wave] = fitting_beta[this_wave] * adj
strain_inital = strain_now = 'WT'
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) %>%
mutate(wave = search_this_wave,
adj = search_this_adj)
fitting_beta_range_plot = rbind(fitting_beta_range_plot,workshop)
}
}
beep()
### Check possible range of each fitting_beta ##################################
fitting_beta_range_plot = data.frame()
for (search_this_wave in 1:length(fitting_beta)){
for (search_this_adj in c(0.75,1.25)){
fitting_beta = baseline_fitting_beta
fitting_beta[search_this_wave] = fitting_beta[search_this_wave] * search_this_adj
strain_inital = strain_now = 'WT'
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) %>%
mutate(wave = search_this_wave,
adj = search_this_adj)
fitting_beta_range_plot = rbind(fitting_beta_range_plot,workshop)
}
}
beep()
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(adj)),na.rm=TRUE) +
geom_line(data=prev_fit,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("") +
facet_grid(wave ~. )
to_plot = fitting_beta_range_plot %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(adj)),na.rm=TRUE) +
geom_line(data=prev_fit,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("") +
facet_grid(wave ~. )
add_rows = crossing(prev_fit,wave = c(1,2,3))
prev_fit
load("x_results/TLS.Rdata")
#       (1/2) Setup
####################################################################
#load libraries
library(readr)
library(deSolve)
library(rvest)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(beepr)
ggplot() +
geom_line(data=workshop,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=workshop,aes(x=date,y=reported_cases)) +
plot_standard
fit_statistic
#quick search under reporting
search_list = seq(20,120,by=10)
underreporting_tracker = data.frame()
for(under_reporting_wave1 in search_list){
for (under_reporting_wave2 in search_list){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
mutate(
rolling_average = case_when(
date >= min(delta_shift$date)  & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_wave2*delta + 1/under_reporting_wave1*(1-delta)),
date >= min(delta_shift$date)  ~ rolling_average * 1/under_reporting_wave2,
date < min(delta_shift$date) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic, na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
#}
}
}
#detailed search under reporting
best_so_far = underreporting_tracker[underreporting_tracker$fit== min(underreporting_tracker$fit, na.rm=TRUE),]
for(under_reporting_wave1 in seq(best_so_far$wave1 -10,best_so_far$wave1 + 10)){
for(under_reporting_wave2 in seq(best_so_far$wave2 -10,best_so_far$wave2 + 10)){
#for(under_reporting_wave3 in seq(best_so_far$wave3 -10,best_so_far$wave3 + 10)){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
mutate(
rolling_average = case_when(
date >= min(delta_shift$date)  & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_wave2*delta + 1/under_reporting_wave1*(1-delta)),
date >= min(delta_shift$date)  ~ rolling_average * 1/under_reporting_wave2,
date < min(delta_shift$date) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic, na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
#}
}
}
fit_statistic = min(underreporting_tracker$fit, na.rm=TRUE)
fit_statistic
fit_all_waves <- function(par){
fitting = "on"
strain_inital = strain_now = 'WT'
TOGGLE_delta_truncation_factor = par[1]
fitting_beta = c(par[2],
par[3]
)
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(par[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(par[5])
date_start = covid19_waves$date[1] - 2
model_weeks = as.numeric((covid19_waves$date[3]  - date_start)/7)
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)
#quick search under reporting
search_list = seq(20,120,by=10)
underreporting_tracker = data.frame()
for(under_reporting_wave1 in search_list){
for (under_reporting_wave2 in search_list){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
mutate(
rolling_average = case_when(
date >= min(delta_shift$date)  & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_wave2*delta + 1/under_reporting_wave1*(1-delta)),
date >= min(delta_shift$date)  ~ rolling_average * 1/under_reporting_wave2,
date < min(delta_shift$date) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic, na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
#}
}
}
#detailed search under reporting
best_so_far = underreporting_tracker[underreporting_tracker$fit== min(underreporting_tracker$fit, na.rm=TRUE),]
for(under_reporting_wave1 in seq(best_so_far$wave1 -10,best_so_far$wave1 + 10)){
for(under_reporting_wave2 in seq(best_so_far$wave2 -10,best_so_far$wave2 + 10)){
#for(under_reporting_wave3 in seq(best_so_far$wave3 -10,best_so_far$wave3 + 10)){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
mutate(
rolling_average = case_when(
date >= min(delta_shift$date)  & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_wave2*delta + 1/under_reporting_wave1*(1-delta)),
date >= min(delta_shift$date)  ~ rolling_average * 1/under_reporting_wave2,
date < min(delta_shift$date) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic, na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
#}
}
}
fit_statistic = min(underreporting_tracker$fit, na.rm=TRUE)
return(fit_statistic)
}
fitting_beta
covid19_waves$date[3]
fit_all_waves <- function(par){
fitting = "on"
strain_inital = strain_now = 'WT'
TOGGLE_delta_truncation_factor = par[1]
fitting_beta = c(par[2],
par[3])
covid19_waves = baseline_covid19_waves
covid19_waves$date[1] = covid19_waves$date[1] + round(par[4])
covid19_waves$date[2] = covid19_waves$date[2] + round(par[5])
date_start = covid19_waves$date[1] - 2
model_weeks = as.numeric((covid19_waves$date[3]  - date_start)/7)
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)
#quick search under reporting
search_list = seq(20,120,by=10)
underreporting_tracker = data.frame()
for(under_reporting_wave1 in search_list){
for (under_reporting_wave2 in search_list){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
mutate(
rolling_average = case_when(
date >= min(delta_shift$date)  & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_wave2*delta + 1/under_reporting_wave1*(1-delta)),
date >= min(delta_shift$date)  ~ rolling_average * 1/under_reporting_wave2,
date < min(delta_shift$date) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic, na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
}
}
#detailed search under reporting
best_so_far = underreporting_tracker[underreporting_tracker$fit== min(underreporting_tracker$fit, na.rm=TRUE),]
for(under_reporting_wave1 in seq(best_so_far$wave1 -10,best_so_far$wave1 + 10)){
for(under_reporting_wave2 in seq(best_so_far$wave2 -10,best_so_far$wave2 + 10)){
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
mutate(
rolling_average = case_when(
date >= min(delta_shift$date)  & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_wave2*delta + 1/under_reporting_wave1*(1-delta)),
date >= min(delta_shift$date)  ~ rolling_average * 1/under_reporting_wave2,
date < min(delta_shift$date) ~ rolling_average * 1/under_reporting_wave1)) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
fit_statistic = data.frame(
fit = sum(workshop$fit_statistic, na.rm=TRUE),
wave1 = under_reporting_wave1,
wave2 = under_reporting_wave2)
underreporting_tracker = rbind(underreporting_tracker,fit_statistic)
}
}
fit_statistic = min(underreporting_tracker$fit, na.rm=TRUE)
return(fit_statistic)
}
require(DEoptim)
param
par
#Run until next Monday ~ 3 days ~ 150 runs
rough_fit <- DEoptim(fn = fit_all_waves,
lower = c(0.1,
2,2,
-14,60
),
upper = c(0.5,
3,4,
7,90
),
control = list(NP = 15,
itermax = 10,
storepopfrom = 1))
save(rough_fit, file = paste('1_inputs/fit/TLS_rough_fit',Sys.Date(),'.Rdata',sep=''))
beep()
