nrow = 4)
ggsave(paste(rootpath,"x_results/plot_VaxVsAntivirals_molnupiravir_",time,".png",sep=''), width = 9.6, height = 5.7)
options(warn = 0)
#____________________________________________________________________________
### PLOT (2/2) Varying target groups ###########################################
LIST_target_group = list('adults_with_comorbidities',
'unvaccinated_adults',
'unvaccinated_adults_AND_adults_with_comorbidities',
'all_adults')
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations  %>%
filter(antiviral_type == "nirmatrelvir_ritonavir" & intervention == "antiviral 2023-01-01") %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
# pivot_wider(
#   id_cols = c(vax_scenario,vax_scenario_risk_group,antiviral_target_group,outcome,intervention),
#   names_from = result,
#   values_from = value)
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] = ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(antiviral_target_group),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('antiviral doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
ggsave(paste(rootpath,"x_results/plot_targetGroups_",time,".png",sep=''), width = 9.6, height = 5.7)
options(warn = 0)
#____________________________________________________________________________
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] = ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(antiviral_target_group),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('antiviral doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(antiviral_target_group)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
#load libraries
library(readr)
library(deSolve)
library(rvest)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(readr)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(doParallel)
library(parallel)
library(foreach)
#dependencies -> nil!
rm(list=ls())
rootpath = str_replace(getwd(), "GitHub_vaxAllocation","")
### (1/4) Population by age (single years)
workshop <- read.csv("1_inputs/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv", header = TRUE)
View(workshop)
unique(workshop$LocTypeName)
workshop = workshop %>%
filter("Country/Area") #select countries only
workshop = workshop %>%
filter(LocTypeName == "Country/Area") #select countries only
unique(workshop$Time)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time == 2021)
unique(workshop$Variant)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time == 2021) %>%
filter(ISO3_code == "SLE")
### (1/4) Population by age (single years)
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv", header = TRUE)
workshop2 <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_2022-2100.csv", header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time >= 2021 & Time<2025)
unique(workshop$Variant)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrp,PopFemale,PopTotal)
UN_pop_est = workshop
save(UN_pop_est,"1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
UN_pop_est = workshop
save(UN_pop_est,"1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
save(UN_pop_est,file = "1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) UN World Population Prospects 2022.R", echo=TRUE)
View(test)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrp,PopFemale,PopTotal) %>%
mutate(PopFemale = PopFemale * 1000,
PopTotal = PopTotal * 1000)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) UN World Population Prospects 2022.R", echo=TRUE)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022) %>%
summarise(sum = sum(PopTotal))
### (3/3) ASFR
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Fertility_by_Age1.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025)
unique(workshop$Variant)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium")
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium") %>%
select(ISO3_code, Location, Time, AgeGrp, ASFR,PASFR, Births)
### (2/3) Life expectancy
test <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv", header = TRUE)
test = test %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025)
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Fertility_by_Age1.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium") %>%
select(ISO3_code, Location, Time, AgeGrp, ASFR,PASFR, Births) %>%
mutate(ASFR = ASFR / 1000)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021) %>%
summarise(sum = sum(PASFR))
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Fertility_by_Age1.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium") %>%
select(ISO3_code, Location, Time, AgeGrp, ASFR) %>%
mutate(ASFR = ASFR / 1000)
UN_ASFR_est = workshop
save(UN_ASFR_est,file = "1_inputs/UN_world_population_prospects/UN_ASFR_est.Rdata")
### (2/3) Life expectancy
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025)
View(UN_ASFR_est)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022) %>% filter(AgeGrp,ex)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022) %>% select(AgeGrp,ex)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021) %>% select(AgeGrp,ex)
unique(workshop$Sex)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrpStart,ex) %>%
rename(AgeGrp = AgeGrpStart)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
UN_lifeExpect_est = workshop
save(UN_lifeExpect_est,file = "1_inputs/UN_world_population_prospects/UN_lifeExpect_est.Rdata")
### (2/3) Life expectancy
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv", header = TRUE)
workshop2 <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_2022-2100.csv", header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrpStart,ex) %>%
rename(AgeGrp = AgeGrpStart)
UN_lifeExpect_est = workshop
save(UN_lifeExpect_est,file = "1_inputs/UN_world_population_prospects/UN_lifeExpect_est.Rdata")
### SETUP  ################################################################
#load libraries
library(readr)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(doParallel)
library(parallel)
library(foreach)
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
View(pop_orig)
load(file = "1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
View(UN_pop_est)
pop_orig <- UN_pop_est %>%
rename(country = ISO3_code,
population = PopTotal,
age = AgeGrp)
pop_orig <- UN_pop_est %>%
rename(country = ISO3_code,
country_long = Location,
year = Time,
population = PopTotal,
population_female = PopFemale,
age = AgeGrp)
pop_setting_orig <- pop_orig %>%
filter(country == setting &
year == 2022) #CHOICE!
setting = "SLE"
pop_setting_orig <- pop_orig %>%
filter(country == setting &
year == 2022) #CHOICE!
View(pop_setting_orig )
unique(pop_orig$country_long)
unique(pop_setting_orig$country_long)
object.size(pop_orig)
pop_orig <- UN_pop_est %>%
rename(country = ISO3_code,
country_long = Location,
year = Time,
population = PopTotal,
population_female = PopFemale,
age = AgeGrp) %>%
filter(year == 2022)#CHOICE! #reduce object.size
object.size(pop_orig)
object.size(UN_pop_est)
women_pop = read.csv(paste(rootpath,"inputs/pop_estimates_female.csv",sep=''),header=TRUE)
View(women_pop)
### calculate and plot female ratio estimates
#pop_setting_orig - colnames: age, country, population
#women_pop - colnames: age, country, population, population_thousands
women_pop = women_pop %>%
rename(pop_women = population) %>%
select(-population_thousands)
pop_setting_orig
### calculate and plot female ratio estimates
#pop_setting_orig - colnames: age, country, population
#women_pop - colnames: age, country, population, population_thousands
pop_together = pop_setting_orig %>%
mutate(female_prop = population_female/population) %>%
select(-population_female )
ggplot(data=pop_together) +
geom_point(aes(x=female_prop*100,y=age)) +
xlim(0,100) +
ylim(15,49)
str(pop_together)
pop_setting_orig <- pop_orig %>%
filter(country == setting) %>%
mutate(age = as.numeric(age))
unique(pop_orig$age)
pop_setting_orig <- pop_orig %>%
filter(country == setting) %>%
mutate(age = case_when(age == '100+' ~ 100, TRUE ~ age)) %>%
mutate(age = as.numeric(age))
pop_orig %>%
filter(country == setting)
pop_orig %>%
filter(country == setting) %>%
mutate(age = case_when(age == '100+' ~ 100, TRUE ~ age))
rlang::last_error()
- pop_orig %>%
filter(country == setting)
pop_orig %>%
filter(country == setting) %>%
mutate(age = case_when(age == '100+' ~ 100,
TRUE ~ age))
pop_orig %>%
filter(country == setting) %>%
mutate(age = case_when(age == "100+" ~ "100", TRUE ~ age))
pop_setting_orig <- pop_orig %>%
filter(country == setting) %>%
mutate(age = case_when(age == "100+" ~ "100", TRUE ~ age)) %>%
mutate(age = as.numeric(age))
str(pop_orig )
pop_setting_orig <- pop_orig %>%
filter(country == setting) %>%
mutate(age = case_when(age == "100+" ~ "100", TRUE ~ age)) %>%
mutate(age = as.numeric(age))
str(pop_orig )
str(pop_setting_orig)
### calculate and plot female ratio estimates
#pop_setting_orig - colnames: age, country, population
#women_pop - colnames: age, country, population, population_thousands
pop_together = pop_setting_orig %>%
mutate(female_prop = population_female/population) %>%
select(-population_female )
pop_together
### read in data
ASFR = read.csv("1_inputs/DHS_ASFR.csv",header=TRUE)
View(ASFR)
ASFR = read.csv("1_inputs/DHS_ASFR.csv",header=TRUE)
# add 10-14 pregnancy as reported in DHS 2019 with retrospective data
row_10_14 = data.frame(' 10-14 ',4/1000,NA,NA)
colnames(row_10_14) = colnames(ASFR)
ASFR = rbind(row_10_14,ASFR)
ggplot(data=ASFR) +
geom_pointrange(aes(x=ASFR*100,y=AGE,xmin=LCI*100,xmax=UCI*100)) +
# xlim(0,1) +
xlab("Age-specific fertility ratio (%)") +
ylab("") +
labs(title="") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
load(file = "1_inputs/UN_world_population_prospects/UN_ASFR_est.Rdata")
View(UN_ASFR_est)
load(file = "1_inputs/UN_world_population_prospects/UN_ASFR_est.Rdata")
ASFR = UN_ASFR %>%
filter(ISO3_code == setting,
Time == 2022) %>% #CHOICE
rename(AGE = AgeGrp) %>%
select(AGE,ASFR)
load(file = "1_inputs/UN_world_population_prospects/UN_ASFR_est.Rdata")
ASFR = UN_ASFR_est %>%
filter(ISO3_code == setting,
Time == 2022) %>% #CHOICE
rename(AGE = AgeGrp) %>%
select(AGE,ASFR)
ggplot(data=ASFR) +
geom_point(aes(x=ASFR*100,y=AGE)) +
# xlim(0,1) +
xlab("Age-specific fertility ratio (%)") +
ylab("") +
labs(title="") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
object.size(UN_pop_est)
### PART FOUR: YLL _____________________________________________________________
#"The average number of remaining years of life expected by a hypothetical cohort of individuals alive at age x
# who would be subject during the remaining of their lives to the mortality rates of a given period."
# https://population.un.org/wpp/Download/Standard/Mortality/
lifeExpect <- read.csv('1_inputs/UN_life_expectancy_est_v2.csv') #updated 20/10/2022
View(lifeExpect)
### PART FOUR: YLL _____________________________________________________________
#"The average number of remaining years of life expected by a hypothetical cohort of individuals alive at age x
# who would be subject during the remaining of their lives to the mortality rates of a given period."
# https://population.un.org/wpp/Download/Standard/Mortality/
load(file = "1_inputs/UN_world_population_prospects/UN_lifeExpect_est.Rdata")
View(UN_lifeExpect_est)
### (1/3) Population by age (single years)
workshop <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv",sep=''), header = TRUE)
### (1/3) Population by age (single years)
workshop <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv",sep=''), header = TRUE)
rootpath
### (1/3) Population by age (single years)
workshop <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv",sep=''), header = TRUE)
workshop2 <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_2022-2100.csv",sep=''), header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrp,PopFemale,PopTotal) %>%
mutate(PopFemale = PopFemale * 1000,
PopTotal = PopTotal * 1000)
UN_pop_est = workshop %>%
mutate(AgeGrp = case_when(AgeGrp == "100+" ~ "100", TRUE ~ AgeGrp)) %>%
mutate(AgeGrp = as.numeric(AgeGrp))
save(UN_pop_est,file = "1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
### (2/3) Life expectancy
workshop <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv",sep=''), header = TRUE)
workshop2 <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_2022-2100.csv",sep=''), header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrpStart,ex) %>%
rename(AgeGrp = AgeGrpStart)
UN_lifeExpect_est = workshop %>%
mutate(AgeGrp = case_when(AgeGrp == "100+" ~ "100", TRUE ~ AgeGrp)) %>%
mutate(AgeGrp = as.numeric(AgeGrp))
estimates_YEAR = 2022
### (1/3) Population by age (single years)
workshop <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv",sep=''), header = TRUE)
workshop2 <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_2022-2100.csv",sep=''), header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time == estimates_YEAR) %>%
select(ISO3_code,Location,Time,AgeGrp,PopFemale,PopTotal) %>%
mutate(PopFemale = PopFemale * 1000,
PopTotal = PopTotal * 1000)
UN_pop_est = workshop %>%
mutate(AgeGrp = case_when(AgeGrp == "100+" ~ "100", TRUE ~ AgeGrp)) %>%
mutate(AgeGrp = as.numeric(AgeGrp))
save(UN_pop_est,file = "1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
### (2/3) Life expectancy
workshop <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv",sep=''), header = TRUE)
workshop2 <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_2022-2100.csv",sep=''), header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time == estimates_YEAR) %>%
select(ISO3_code,Location,Time,AgeGrpStart,ex) %>%
rename(AgeGrp = AgeGrpStart)
UN_lifeExpect_est = workshop %>%
mutate(AgeGrp = case_when(AgeGrp == "100+" ~ "100", TRUE ~ AgeGrp)) %>%
mutate(AgeGrp = as.numeric(AgeGrp))
unique(UN_lifeExpect_est $AgeGrp)
unique(workshop$AgeGrp)
UN_lifeExpect_est = workshop %>%
mutate(AgeGrp = case_when(AgeGrp == "100+" ~ "100", TRUE ~ AgeGrp)) %>%
mutate(AgeGrp = as.numeric(AgeGrp))
UN_lifeExpect_est
UN_lifeExpect_est = workshop %>%
mutate(AgeGrp = as.numeric(AgeGrp))
save(UN_lifeExpect_est,file = "1_inputs/UN_world_population_prospects/UN_lifeExpect_est.Rdata")
### (3/3) ASFR
workshop <- read.csv(paste(rootpath,"inputs/UN_world_population_prospects/WPP2022_Fertility_by_Age1.csv",sep=''), header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time == estimates_YEAR) %>%
filter(Variant ==  "Medium") %>%
select(ISO3_code, Location, Time, AgeGrp, ASFR) %>%
mutate(ASFR = ASFR / 1000)
UN_ASFR_est = workshop %>%
mutate(AgeGrp = case_when(AgeGrp == "100+" ~ "100", TRUE ~ AgeGrp)) %>%
mutate(AgeGrp = as.numeric(AgeGrp))
unique(UN_ASFR_est$AgeGrp)
UN_ASFR_est = workshop %>%
mutate(AgeGrp = as.numeric(AgeGrp))
save(UN_ASFR_est,file = "1_inputs/UN_world_population_prospects/UN_ASFR_est.Rdata")
### PART FOUR: YLL _____________________________________________________________
#"The average number of remaining years of life expected by a hypothetical cohort of individuals alive at age x
# who would be subject during the remaining of their lives to the mortality rates of a given period."
# https://population.un.org/wpp/Download/Standard/Mortality/
load(file = "1_inputs/UN_world_population_prospects/UN_lifeExpect_est.Rdata")
YLL_FINAL = UN_lifeExpect_est %>%
filter(ISO3_code == setting) %>%
rename(life_expectancy = ex,
age = AgeGrp) %>%
left_join(UN_pop_est, by = 'age') %>%
select(age,life_expectancy,population) %>%
mutate(age_group = cut(age,breaks = age_groups_num, include.lowest = T,labels = age_group_labels)) %>%
group_by(age_group) %>%
mutate(group_percent = population/sum(population),
interim = life_expectancy * group_percent) %>%
summarise(YLL = sum(interim))
UN_lifeExpect_est %>%
filter(ISO3_code == setting) %>%
rename(life_expectancy = ex,
age = AgeGrp)
UN_lifeExpect_est %>%
filter(ISO3_code == setting) %>%
rename(life_expectancy = ex,
age = AgeGrp) %>%
left_join(UN_pop_est, by = 'age')
UN_pop_est
pop_orig <- UN_pop_est %>%
rename(country = ISO3_code,
country_long = Location,
year = Time,
population = PopTotal,
population_female = PopFemale,
age = AgeGrp) %>%
filter(year == 2022)#CHOICE! #reduce object.size
rm(UN_pop_est)
pop_setting_orig <- pop_orig %>%
filter(country == setting)
YLL_FINAL = UN_lifeExpect_est %>%
filter(ISO3_code == setting) %>%
rename(life_expectancy = ex,
age = AgeGrp) %>%
left_join(pop_setting_orig, by = 'age') %>%
select(age,life_expectancy,population) %>%
mutate(age_group = cut(age,breaks = age_groups_num, include.lowest = T,labels = age_group_labels)) %>%
group_by(age_group) %>%
mutate(group_percent = population/sum(population),
interim = life_expectancy * group_percent) %>%
summarise(YLL = sum(interim))
age_groups_num = c(0,4,9,17,29,44,59,69,110)
age_group_labels = c('0 to 4','5 to 9','10 to 17','18 to 29','30 to 44','45 to 59','60 to 69','70 to 100')
YLL_FINAL = UN_lifeExpect_est %>%
filter(ISO3_code == setting) %>%
rename(life_expectancy = ex,
age = AgeGrp) %>%
left_join(pop_setting_orig, by = 'age') %>%
select(age,life_expectancy,population) %>%
mutate(age_group = cut(age,breaks = age_groups_num, include.lowest = T,labels = age_group_labels)) %>%
group_by(age_group) %>%
mutate(group_percent = population/sum(population),
interim = life_expectancy * group_percent) %>%
summarise(YLL = sum(interim))
save(YLL_FINAL, file = '1_inputs/YLL_FINAL.Rdata' )
UN_pop_est
load(file = "1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
UN_pop_est
