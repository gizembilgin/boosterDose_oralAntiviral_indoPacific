2,
priority_age_group,
todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
vax_delivery_outline = data.frame()
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
priority_age_group,
todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
priority_age_group,
todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
vax_strategy_delivery_timeframe = vax_strategy_num_doses/vax_strategy_roll_out_speed #(days)
vax_delivery_outline = data.frame()
priority_group_num = 1
priority_age_group = unique(VA$age_group[VA$priority == priority_group_num])
daily_avaliable_doses = data.frame(day=1:vax_strategy_delivery_timeframe,
todays_avaliable_doses = vax_strategy_roll_out_speed)
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
priority_age_group,
todays_avaliable_doses/vax_dose_strategy))
priority_age_group
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
vax_delivery_outline = data.frame()
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
vax_delivery_outline = data.frame(ncol=4)
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
vax_delivery_outline = data.frame(as.numeric(),as.numeric(),as.charcter(),as.numeric())
vax_delivery_outline = data.frame(as.numeric(),as.numeric(),as.character(),as.numeric())
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
priority_age_group,
todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
priority_age_group,
todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
vax_delivery_outline = data.frame(as.numeric(),as.numeric(),as.character(),as.numeric())
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses
todays_avaliable_doses = daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day]
day
todays_avaliable_doses
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
while(todays_avaliable_doses>0){
if(sum(VA$doses_left[VA$priority == priority_group_num])>0){ #using sum across doses in case dose 2>1
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
< todays_avaliable_doses/vax_dose_strategy){
#if number to deliver < available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] ))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] -
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
todays_avaliable_doses = todays_avaliable_doses - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
} else if(sum(VA$doses_left[VA$priority == priority_group_num])==0){
priority_group_num = priority_group_num+1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
}
}
for (day in 1:7){
todays_avaliable_doses = daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day]
while(todays_avaliable_doses>0){
if(sum(VA$doses_left[VA$priority == priority_group_num])>0){ #using sum across doses in case dose 2>1
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
< todays_avaliable_doses/vax_dose_strategy){
#if number to deliver < available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] ))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] -
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
todays_avaliable_doses = todays_avaliable_doses - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
} else if(sum(VA$doses_left[VA$priority == priority_group_num])==0){
priority_group_num = priority_group_num+1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
}
}
}
vax_strategy_delivery_timeframe = vax_strategy_num_doses/vax_strategy_roll_out_speed #(days)
vax_delivery_outline = data.frame(as.numeric(),as.numeric(),as.character(),as.numeric())
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
priority_group_num = 1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
daily_avaliable_doses = data.frame(day=1:vax_strategy_delivery_timeframe,
todays_avaliable_doses = vax_strategy_roll_out_speed)
#for (day in 1:vax_strategy_delivery_timeframe){
for (day in 1:14){
todays_avaliable_doses = daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day]
while(todays_avaliable_doses>0){
if(sum(VA$doses_left[VA$priority == priority_group_num])>0){ #using sum across doses in case dose 2>1
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
< todays_avaliable_doses/vax_dose_strategy){
#if number to deliver < available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] ))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] -
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
todays_avaliable_doses = todays_avaliable_doses - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
} else if(sum(VA$doses_left[VA$priority == priority_group_num])==0){
priority_group_num = priority_group_num+1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
}
}
}
day
day
todays_avaliable_doses = daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day]
(sum(VA$doses_left[VA$priority == priority_group_num])>0
)
sum(VA$doses_left[VA$priority == priority_group_num])>0
sum(VA$doses_left[VA$priority == priority_group_num])==0
View(VA)
day
#for (day in 1:vax_strategy_delivery_timeframe){
for (day in 1:9){
todays_avaliable_doses = daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day]
while(todays_avaliable_doses>0){
if(sum(VA$doses_left[VA$priority == priority_group_num])>0){
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
< todays_avaliable_doses/vax_dose_strategy){
#if number to deliver < available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] ))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] -
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
todays_avaliable_doses = todays_avaliable_doses - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
} else if(sum(VA$doses_left[VA$priority == priority_group_num])==0){
priority_group_num = priority_group_num+1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
}
}
}
vax_strategy_delivery_timeframe = vax_strategy_num_doses/vax_strategy_roll_out_speed #(days)
vax_delivery_outline = data.frame(as.numeric(),as.numeric(),as.character(),as.numeric())
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
priority_group_num = 1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
daily_avaliable_doses = data.frame(day=1:vax_strategy_delivery_timeframe,
todays_avaliable_doses = vax_strategy_roll_out_speed)
#COMEBACK = need to correct last day so don't overshoot avaliable doses
#for (day in 1:vax_strategy_delivery_timeframe){
for (day in 1:9){
vax_strategy_delivery_timeframe = vax_strategy_num_doses/vax_strategy_roll_out_speed #(days)
vax_delivery_outline = data.frame(as.numeric(),as.numeric(),as.character(),as.numeric())
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
priority_group_num = 1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
daily_avaliable_doses = data.frame(day=1:vax_strategy_delivery_timeframe,
todays_avaliable_doses = vax_strategy_roll_out_speed)
#for (day in 1:vax_strategy_delivery_timeframe){
for (day in 1:9){
todays_avaliable_doses = daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day]
while(todays_avaliable_doses>0){
if(sum(VA$doses_left[VA$priority == priority_group_num])>0){
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
< todays_avaliable_doses/vax_dose_strategy){
#if number to deliver < available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] ))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] -
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
todays_avaliable_doses = todays_avaliable_doses - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
} else if(sum(VA$doses_left[VA$priority == priority_group_num])==0){
priority_group_num = priority_group_num+1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
}
}
}
VA =  eligible_pop %>%
select(age_group,dose,doses_delivered,priority) %>%
mutate(doses_left = doses_delivered)
vax_strategy_delivery_timeframe = vax_strategy_num_doses/vax_strategy_roll_out_speed #(days)
vax_delivery_outline = data.frame(as.numeric(),as.numeric(),as.character(),as.numeric())
colnames(vax_delivery_outline) = c('day','dose','age_group','doses_delivered')
priority_group_num = 1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
daily_avaliable_doses = data.frame(day=1:vax_strategy_delivery_timeframe,
todays_avaliable_doses = vax_strategy_roll_out_speed)
#for (day in 1:vax_strategy_delivery_timeframe){
for (day in 1:9){
todays_avaliable_doses = daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day]
while(todays_avaliable_doses>0){
if(sum(VA$doses_left[VA$priority == priority_group_num])>0){
#i.e., while we still have doses to deliver in this priority group
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] >= todays_avaliable_doses/vax_dose_strategy){
#if number to deliver > available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day,
dose = 1,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] - todays_avaliable_doses/vax_dose_strategy
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day = day + vax_strategy_vaccine_interval,
dose = 2,
age_group = priority_age_group,
doses_delivered = todays_avaliable_doses/vax_dose_strategy))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - todays_avaliable_doses/vax_dose_strategy
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - todays_avaliable_doses/vax_dose_strategy
}
todays_avaliable_doses = 0
}
if(VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
< todays_avaliable_doses/vax_dose_strategy){
#if number to deliver < available doses
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day,
1,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy] ))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 1] -
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
if (vax_dose_strategy == 2){
vax_delivery_outline = rbind(vax_delivery_outline,
cbind(day + vax_strategy_vaccine_interval,
2,
VA$age_group[VA$priority == priority_group_num],
VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
))
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] =
VA$doses_left[VA$priority == priority_group_num & VA$dose == 2] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] =
daily_avaliable_doses$todays_avaliable_doses[daily_avaliable_doses$day == day+vax_strategy_vaccine_interval] - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
todays_avaliable_doses = todays_avaliable_doses - VA$doses_left[VA$priority == priority_group_num & VA$dose == vax_dose_strategy]
}
} else if(sum(VA$doses_left[VA$priority == priority_group_num])==0){
priority_group_num = priority_group_num+1
priority_age_group = as.character(unique(VA$age_group[VA$priority == priority_group_num]))
}
}
}
