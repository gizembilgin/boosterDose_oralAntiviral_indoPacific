geom_line(data=predicted_distribution[predicted_distribution$dose == 3,],aes(x=days,y=VE,color=as.factor(age_group))) +
geom_point(data = raw[raw$dose == 3,], aes(x=days,y=VE,color=as.factor(age_group))) +
ylim(0,1)+
labs(color='age group') +
#ggtitle(paste(unique(raw$dose)[d],round(model_rsquared,2)))
ggtitle('booster dose') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot2,plot3, nrow=2)
#_________________________________________________________________________________________________________________________________________
### Internal VE
apply_distribution <- predicted_distribution %>%
group_by(dose,age_group) %>%
mutate(VE_internal = VE / max(VE)) %>%
ungroup() %>%
select(dose,age_group,days,VE_internal,VE)
plot2 = ggplot() +
geom_line(data = apply_distribution[apply_distribution$dose == 2,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
plot3 = ggplot() +
geom_line(data = apply_distribution[apply_distribution$dose == 3,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1) +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('booster dose') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot2,plot3, nrow=2)
plot2 = ggplot() +
geom_line(data=predicted_distribution[predicted_distribution$dose == 2,],aes(x=days,y=VE,color=as.factor(age_group))) +
geom_point(data = raw[raw$dose == 2,], aes(x=days,y=VE,color=as.factor(age_group))) +
#geom_pointrange(data=workshop_real,aes(x=days,y=VE,ymin=LB,ymax=UB)) +
ylim(0,1)+
labs(color='age group') +
xlab('days since vaccination') +
#ggtitle(paste(unique(raw$dose)[d],round(model_rsquared,2)))
ggtitle('primary schedule') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
plot3 = ggplot() +
geom_line(data=predicted_distribution[predicted_distribution$dose == 3,],aes(x=days,y=VE,color=as.factor(age_group))) +
geom_point(data = raw[raw$dose == 3,], aes(x=days,y=VE,color=as.factor(age_group))) +
ylim(0,1)+
labs(color='age group') +
xlab('days since vaccination') +
#ggtitle(paste(unique(raw$dose)[d],round(model_rsquared,2)))
ggtitle('booster dose') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot2,plot3, nrow=2)
raw %>% filter(age_group == 'overall') %>% rename(VE_overall = VE)
### (2) RATIO ##############################################################################################################################################
workshop_overall = raw %>%
filter(age_group == 'overall') %>%
rename(VE_overall = VE) %>%
select(dose,days,VE_overall)
workshop_age = raw %>%
filter(! age_group == 'overall') %>%
left_join(workshop_overall, by = c('dose,days'))
workshop_age = raw %>%
filter(! age_group == 'overall') %>%
left_join(workshop_overall, by = c('dose','days'))
workshop_age
raw %>%
filter(! age_group == 'overall') %>%
left_join(workshop_overall, by = c('dose','days')) %>%
mutate(VE_overall = VE/VE_overall)
workshop_age %>% filter(days == 22)
workshop_age = raw %>%
filter(! age_group == 'overall') %>%
left_join(workshop_overall, by = c('dose','days')) %>%
mutate(VE_overall = VE/VE_overall)
workshop_age %>% filter(days == 22)
workshop_age %>% group_by(dose,age_group) %>% summarise(VE_overall = mean(VE_overall))
pop_setting
age_group_labels
setting = "SLE"
### COMEBACK - still need importation
if (setting == "SLE"){setting_long = "Sierra Leone"}
### (1/5) Age structure of population
##(A/B) Without risk groups
#NOTE: this program has been configured so that the age_groups can be modified on a whim,
# however, some other programs aren't as flexible
age_groups = c(0,4,9,17,29,44,59,69,110)
age_group_labels = c('0 to 4','5 to 9','10 to 17','18 to 29','30 to 44','45 to 59','60 to 69','70 to 100')
num_age_groups = J = length(age_group_labels)
age_group_order = data.frame(age_group = age_group_labels, age_group_num = seq(1:J))
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
pop_setting_orig <- pop_orig[pop_orig$country == setting,]
#       (2/4) User choice / Model toggles
####################################################################
if (Sys.info()[['user']] == 'u6044061'){ rootpath = 'C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/'
}else if (Sys.info()[['user']] == 'gizem'){ rootpath = 'C:/Users/gizem/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/'}
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
pop_setting_orig <- pop_orig[pop_orig$country == setting,]
pop_setting <- pop_setting_orig %>%
mutate(agegroup = cut(age,breaks = age_groups, include.lowest = T,labels = age_group_labels))
pop_setting <- aggregate(pop_setting$population, by=list(category=pop_setting$agegroup), FUN=sum)
colnames(pop_setting) <-c('age_group','pop')
pop <- pop_setting$pop
pop
pop_setting$pop
pop_setting
age_groups = c(0,4,9,17,29,44,59,79,110)
age_group_labels = c('0 to 4','5 to 9','10 to 17','18 to 29','30 to 44','45 to 59','60 to 79','80 to 100')
num_age_groups = J = length(age_group_labels)
age_group_order = data.frame(age_group = age_group_labels, age_group_num = seq(1:J))
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
pop_setting_orig <- pop_orig[pop_orig$country == setting,]
pop_setting <- pop_setting_orig %>%
mutate(agegroup = cut(age,breaks = age_groups, include.lowest = T,labels = age_group_labels))
pop_setting <- aggregate(pop_setting$population, by=list(category=pop_setting$agegroup), FUN=sum)
colnames(pop_setting) <-c('age_group','pop')
pop <- pop_setting$pop
pop_setting
workshop_age %>% filter(days == 22)
workshop_age %>% group_by(dose,age_group) %>% summarise(VE_overall = mean(VE_overall))
workshop_age
workshop_age %>% filter(days == 22)
apply_ratio = workshop_age %>% filter(days == 22) %>% rename(VE_ratio = VE_overall) %>% select(age_group,VE_ratio)
apply_ratio
apply_ratio = workshop_age %>% filter(days == 22) %>% rename(VE_ratio = VE_overall) %>% select(dose,age_group,VE_ratio)
apply_ratio
age_groups = c(0,4,9,17,29,44,59,69,110)
age_group_labels = c('0 to 4','5 to 9','10 to 17','18 to 29','30 to 44','45 to 59','60 to 69','70 to 100')
# age_groups = c(0,4,9,17,29,44,59,79,110)
# age_group_labels = c('0 to 4','5 to 9','10 to 17','18 to 29','30 to 44','45 to 59','60 to 79','80 to 100')
num_age_groups = J = length(age_group_labels)
age_group_order = data.frame(age_group = age_group_labels, age_group_num = seq(1:J))
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
pop_setting_orig <- pop_orig[pop_orig$country == setting,]
pop_setting <- pop_setting_orig %>%
mutate(agegroup = cut(age,breaks = age_groups, include.lowest = T,labels = age_group_labels))
pop_setting <- aggregate(pop_setting$population, by=list(category=pop_setting$agegroup), FUN=sum)
colnames(pop_setting) <-c('age_group','pop')
pop <- pop_setting$pop
#write.csv(pop_setting,file = 'x_results/pop_scrap.csv')
pop_setting %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(raw$age_group)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels))
pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(raw$age_group)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels))
CS_age_groupings = c(0,59,79,110)
pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(raw$age_group)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels))
CS_age_groupings
unique(raw$age_group)
pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$age_group)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels))
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$age_group)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
pop_RAW
apply_ratio = workshop_age %>% filter(days == 22) %>% rename(VE_ratio = VE_overall,age_group_RAW = age_group) %>% select(dose,age_group_RAW,VE_ratio)
CS_age_groupings = c(0,59,79,110)
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$age_group_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
apply_ratio = workshop_age %>% filter(days == 22) %>% rename(VE_ratio = VE_overall,age_group_RAW = age_group) %>% select(dose,age_group_RAW,VE_ratio)
CS_age_groupings = c(0,59,79,110)
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$age_group_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
apply_ratio
apply_ratio = workshop_age %>% filter(days == 22) %>% rename(VE_ratio = VE_overall,agegroup_RAW = age_group) %>% select(dose,agegroup_RAW,VE_ratio)
CS_age_groupings = c(0,59,79,110)
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$age_group_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
workshop
unique(apply_ratio$age_group_RAW)
CS_age_groupings = c(0,59,79,110)
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$agegroup_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
workshop
aggregate(workshop$interim, by=list(category = workshop$param,workshop$agegroup_MODEL),FUN=sum)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL),FUN=sum)
workshop
colnames(workshop) = c('dose','agegroup','VE_ratio')
workshop %>% arrange(dose)
apply_ratio
apply_ratio_MODEL = workshop %>% arrange(dose)
View(apply_distribution)
###Waning
workshop = apply_distribution %>% rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL),FUN=sum)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL,workshop$days),FUN=sum)
###Waning
workshop = apply_distribution %>% rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL,workshop$days),FUN=sum)
colnames(workshop) = c('dose','agegroup','days','VE_internal')
apply_distribution_MODEL = workshop %>% arrange(dose)
plot2 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$dose == 2,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
plotting_standard
### SETUP
plotting_standard =  theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
plot2 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$dose == 2,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
plotting_standard
plot3 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$dose == 3,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1) +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('booster dose') +
plotting_standard
grid.arrange(plot2,plot3, nrow=2)
apply_ratio_MODEL
###Ratio
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL),FUN=sum)
colnames(workshop) = c('dose','age_group','VE_ratio')
apply_ratio_MODEL = workshop %>% arrange(dose)
###Waning
workshop = apply_distribution %>% rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL,workshop$days),FUN=sum)
colnames(workshop) = c('dose','age_group','days','VE_internal')
apply_distribution_MODEL = workshop %>% arrange(dose)
plot2 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$dose == 2,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
plotting_standard
plot3 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$dose == 3,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1) +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('booster dose') +
plotting_standard
grid.arrange(plot2,plot3, nrow=2)
### APPLY TO POINT ESTIMATES ##################################################################################################################################
load(file = "1_inputs/VE_estimates_imputed.Rdata")
load(file = "1_inputs/VE_booster_estimates.Rdata")
point_estimates = VE_estimates_imputed %>%
filter(outcome_family == 'severe_outcome' & !(vaccine_type == 'Pfizer' & dose == 3)) %>%
select(strain,vaccine_type,dose,outcome,outcome_family,VE) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
dose == 2 & vaccine_type == "Johnson & Johnson" ~ 'booster',
TRUE ~ 'primary'
))
point_estimates_booster = VE_booster_estimates %>%
filter(outcome_family == 'severe_outcome') %>%
select(strain,vaccine_type,primary_if_booster,dose,outcome,outcome_family,VE) %>%
mutate(schedule = 'booster')
point_estimates = bind_rows(point_estimates,point_estimates_booster)
colnames(apply_distribution_MODEL)
colnames(point_estimates)
colnames(apply_ratio_MODEL)
point_estimates %>%
left_join(apply_ratio_MODEL,by='dose')
workshop %>% arrange(dose) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
dose == 2 & vaccine_type == "Johnson & Johnson" ~ 'booster',
TRUE ~ 'primary'
))
apply_ratio_MODEL = workshop %>% arrange(dose) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
))
apply_ratio_MODEL
CS_age_groupings = c(0,59,79,110)
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$agegroup_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
###Ratio
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL),FUN=sum)
colnames(workshop) = c('dose','age_group','VE_ratio')
apply_ratio_MODEL = workshop %>% arrange(dose) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
))
###Waning
workshop = apply_distribution %>% rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL,workshop$days),FUN=sum)
colnames(workshop) = c('dose','age_group','days','VE_internal')
apply_distribution_MODEL = workshop %>% arrange(dose)  %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
))
plot2 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$dose == 2,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
plotting_standard
plot3 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$dose == 3,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1) +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('booster dose') +
plotting_standard
grid.arrange(plot2,plot3, nrow=2)
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule')
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule')
View(together)
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL),FUN=sum)
colnames(workshop) = c('dose','age_group','VE_ratio')
apply_ratio_MODEL = workshop %>% arrange(dose) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
))  %>%
select(-dose)
###Waning
workshop = apply_distribution %>% rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL,workshop$days),FUN=sum)
colnames(workshop) = c('dose','age_group','days','VE_internal')
apply_distribution_MODEL = workshop %>% arrange(dose)  %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
)) %>%
select(-dose)
plot2 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$schedule == 'primary',], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
plotting_standard
plot3 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$schedule == 'booster',], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1) +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('booster dose') +
plotting_standard
grid.arrange(plot2,plot3, nrow=2)
load(file = "1_inputs/VE_estimates_imputed.Rdata")
load(file = "1_inputs/VE_booster_estimates.Rdata")
point_estimates = VE_estimates_imputed %>%
filter(outcome_family == 'severe_outcome' & !(vaccine_type == 'Pfizer' & dose == 3)) %>%
select(strain,vaccine_type,dose,outcome,outcome_family,VE) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
dose == 2 & vaccine_type == "Johnson & Johnson" ~ 'booster',
TRUE ~ 'primary'
))
point_estimates_booster = VE_booster_estimates %>%
filter(outcome_family == 'severe_outcome') %>%
select(strain,vaccine_type,primary_if_booster,dose,outcome,outcome_family,VE) %>%
mutate(schedule = 'booster')
point_estimates = bind_rows(point_estimates,point_estimates_booster)
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('outcome_family','schedule','age_group'))
unique(point_estimates$outcome_family)
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group'))
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100)
### PLOT ##################################################################################################################################
if (exists("vax_type_list") == FALSE){  vax_type_list = c("AstraZeneca","Johnson & Johnson", "Pfizer", "Sinopharm" ) }
waning_to_plot = together %>%
filter(vaccine_type %in% vax_type_list) %>%
mutate(immunity = paste(vaccine_type,dose))
strain_test = 'omicron'
outcome_test = 'severe_disease'
ggplot() +
geom_line(data=waning_to_plot[waning_to_plot$strain == strain_test  & waning_to_plot$outcome == outcome_test,],
aes(x=days,y=VE_days,color=as.factor(immunity)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against","(",strain_test,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
strain_test = 'omicron'
outcome_test = 'severe_disease'
vaccine_type_test = 'Johnson & Johnson'
ggplot() +
geom_point(data=waning_to_plot[waning_to_plot$strain == strain_test  & waning_to_plot$outcome == outcome_test & waning_to_plot$vaccine_type == vaccine_type_test,],
aes(x=days,y=VE_days,color=as.factor(age_group),shape=as.factor(dose)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against","(",strain_test,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
vaccine_type_test = 'Sinopharm'
ggplot() +
geom_point(data=waning_to_plot[waning_to_plot$strain == strain_test  & waning_to_plot$outcome == outcome_test & waning_to_plot$vaccine_type == vaccine_type_test,],
aes(x=days,y=VE_days,color=as.factor(age_group),shape=as.factor(dose)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against","(",strain_test,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
vaccine_type_test = 'Pfizer'
ggplot() +
geom_point(data=waning_to_plot[waning_to_plot$strain == strain_test  & waning_to_plot$outcome == outcome_test & waning_to_plot$vaccine_type == vaccine_type_test,],
aes(x=days,y=VE_days,color=as.factor(age_group),shape=as.factor(dose)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against","(",strain_test,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
colnames(together)
waning = together %>% mutate(waning = TRUE)
no_waning = together %>% mutate(waning = FALSE) %>%
group_by(strain,vaccine_type,primary_if_booster,dose,age_group,outcome) %>%
mutate(VE_days = max(VE_days))
waning = together %>% mutate(waning = TRUE)
no_waning = together %>% mutate(waning = FALSE) %>%
group_by(strain,vaccine_type,primary_if_booster,dose,age_group,outcome) %>%
mutate(VE_days = max(VE_days))
SA_VE_older_muted = rbind(waning,no_waning) %>% select(strain, vaccine_type,primary_if_booster, dose, outcome,days,age_group,VE_days,waning)
SA_VE_older_muted_SO = rbind(waning,no_waning) %>% select(strain, vaccine_type,primary_if_booster, dose, outcome,days,age_group,VE_days,waning)
save(SA_VE_older_muted_SO, file = '1_inputs/SA_VE_older_muted_SO.Rdata')
