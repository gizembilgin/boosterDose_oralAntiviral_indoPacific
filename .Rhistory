mutate(interim = protection * prop_window)
sum(workshop$interim)
date_start
View(workshop)
workshop = incidence_log %>% select(date,daily_cases)
hist_cases_include = hist_cases %>% filter(date<max(incidence_log$date))
workshop = rbind(workshop,hist_cases_include)
#this_rho = rho_dn %>% filter(outcome == this_outcome)
this_strain = strain_now
if (this_strain == 'WT'){this_strain = 'delta'}
this_rho = this_rho %>% filter(strain == this_strain)
if (nrow(incidence_log)>0){
workshop = incidence_log %>% select(date,daily_cases)
hist_cases_include = hist_cases %>% filter(date<max(incidence_log$date))
workshop = rbind(workshop,hist_cases_include)
} else{
workshop = hist_cases
}
workshop = workshop %>%
filter(date <= date_now & date > (date_now - 1/omega)) %>%
mutate(days = as.numeric(date_now - date))
workshop = workshop %>% mutate(prop_window = daily_cases/sum(workshop$daily_cases))
ggplot(workshop) + geom_line(aes(date,prop_window))
if (nrow(workshop) == 0){
return(this_rho$protection[this_rho$days ==0 & this_rho$outcome == this_outcome])
} #COMEBACK - rho for seroprev ==?
if (round(sum(workshop$prop_window),digits=5) != 1){stop('error in rho_time_step')}
workshop = workshop %>% left_join(this_rho,by='days') %>%
mutate(interim = protection * prop_window)
sum(workshop$interim)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
date_now = date_start
date_start
date_now = date_start + 1
#this_rho = rho_dn %>% filter(outcome == this_outcome)
this_strain = strain_now
if (this_strain == 'WT'){this_strain = 'delta'}
this_rho = this_rho %>% filter(strain == this_strain)
if (nrow(incidence_log)>0){
workshop = incidence_log %>% select(date,daily_cases)
hist_cases_include = hist_cases %>% filter(date<max(incidence_log$date))
workshop = rbind(workshop,hist_cases_include)
} else{
workshop = hist_cases
}
workshop = workshop %>%
filter(date <= date_now & date > (date_now - 1/omega)) %>%
mutate(days = as.numeric(date_now - date))
workshop = workshop %>% mutate(prop_window = daily_cases/sum(workshop$daily_cases))
ggplot(workshop) + geom_line(aes(date,prop_window))
if (nrow(workshop) == 0){
return(this_rho$protection[this_rho$days ==0 & this_rho$outcome == this_outcome])
} #COMEBACK - rho for seroprev ==?
if (round(sum(workshop$prop_window),digits=5) != 1){stop('error in rho_time_step')}
workshop = workshop %>% left_join(this_rho,by='days') %>%
mutate(interim = protection * prop_window)
sum(workshop$interim)
date_now
nrow(incidence_log)>0
#this_rho = rho_dn %>% filter(outcome == this_outcome)
this_strain = strain_now
if (this_strain == 'WT'){this_strain = 'delta'}
this_rho = this_rho %>% filter(strain == this_strain)
if (nrow(incidence_log)>0){
workshop = incidence_log %>% select(date,daily_cases)
hist_cases_include = hist_cases %>% filter(date<max(incidence_log$date))
workshop = rbind(workshop,hist_cases_include)
} else{
workshop = hist_cases
}
hist_cases_include
incidence_log
date_now
fitted_max_date
fitted_max_date = fitted_max_date + 1
save(fitted_max_date,file = '1_inputs/last_fit_date.Rdata')
fitted_max_date = date_now  #incidence log always missed in first date
fitted_max_date
load(file = '1_inputs/last_fit_date.Rdata')
fitted_max_date
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
date_now
date_now = as.Date('2022-08-15')
#this_rho = rho_dn %>% filter(outcome == this_outcome)
this_strain = strain_now
if (this_strain == 'WT'){this_strain = 'delta'}
this_rho = this_rho %>% filter(strain == this_strain)
if (nrow(incidence_log)>0){
workshop = incidence_log %>% select(date,daily_cases)
workshop = rbind(workshop,hist_cases)
} else{
workshop = hist_cases
}
workshop = workshop %>%
filter(date <= date_now & date > (date_now - 1/omega)) %>%
mutate(days = as.numeric(date_now - date))
workshop = workshop %>% mutate(prop_window = daily_cases/sum(workshop$daily_cases))
ggplot(workshop) + geom_line(aes(date,prop_window))
if (nrow(workshop) == 0){
return(this_rho$protection[this_rho$days ==0 & this_rho$outcome == this_outcome])
} #COMEBACK - rho for seroprev ==?
if (round(sum(workshop$prop_window),digits=5) != 1){stop('error in rho_time_step')}
workshop = workshop %>% left_join(this_rho,by='days') %>%
mutate(interim = protection * prop_window)
sum(workshop$interim)
date_start
date_now = as.Date('2021-09-01')
#this_rho = rho_dn %>% filter(outcome == this_outcome)
this_strain = strain_now
if (this_strain == 'WT'){this_strain = 'delta'}
this_rho = this_rho %>% filter(strain == this_strain)
if (nrow(incidence_log)>0){
workshop = incidence_log %>% select(date,daily_cases)
workshop = rbind(workshop,hist_cases)
} else{
workshop = hist_cases
}
workshop = workshop %>%
filter(date <= date_now & date > (date_now - 1/omega)) %>%
mutate(days = as.numeric(date_now - date))
workshop = workshop %>% mutate(prop_window = daily_cases/sum(workshop$daily_cases))
ggplot(workshop) + geom_line(aes(date,prop_window))
if (nrow(workshop) == 0){
return(this_rho$protection[this_rho$days ==0 & this_rho$outcome == this_outcome])
} #COMEBACK - rho for seroprev ==?
if (round(sum(workshop$prop_window),digits=5) != 1){stop('error in rho_time_step')}
workshop = workshop %>% left_join(this_rho,by='days') %>%
mutate(interim = protection * prop_window)
sum(workshop$interim)
date_now = as.Date('2022-09-01')
#this_rho = rho_dn %>% filter(outcome == this_outcome)
this_strain = strain_now
if (this_strain == 'WT'){this_strain = 'delta'}
this_rho = this_rho %>% filter(strain == this_strain)
if (nrow(incidence_log)>0){
workshop = incidence_log %>% select(date,daily_cases)
workshop = rbind(workshop,hist_cases)
} else{
workshop = hist_cases
}
workshop = workshop %>%
filter(date <= date_now & date > (date_now - 1/omega)) %>%
mutate(days = as.numeric(date_now - date))
workshop = workshop %>% mutate(prop_window = daily_cases/sum(workshop$daily_cases))
ggplot(workshop) + geom_line(aes(date,prop_window))
if (nrow(workshop) == 0){
return(this_rho$protection[this_rho$days ==0 & this_rho$outcome == this_outcome])
} #COMEBACK - rho for seroprev ==?
if (round(sum(workshop$prop_window),digits=5) != 1){stop('error in rho_time_step')}
workshop = workshop %>% left_join(this_rho,by='days') %>%
mutate(interim = protection * prop_window)
sum(workshop$interim)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
fitted_max_date
fitted_max_date
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(CHECK)_fitting_model.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(CHECK)_fitting_model.R", echo=TRUE)
Sys.Date()
date_now
### Check seroprevalence estimates
#ASSUMPTION - seroprevalence ~ equivalent to having infection-derived immunity
workshop = next_state_FIT #November 2022
workshop = next_state     #steady state in August 2022
workshop = fitted_next_state
sum(workshop$pop[workshop$class == "R"])/sum(workshop$pop)
workshop %>%
filter(class == 'R') %>%
group_by(age_group) %>%
summarise(pop = sum(pop)) %>%
rename(recovered = pop) %>%
left_join(pop_setting,by='age_group') %>%
mutate(seroprev= recovered/pop)
coeff <- 1/2000
ggplot() +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log$date),],
aes(x=date,y=rolling_average/coeff),na.rm=TRUE) +
geom_line(data=incidence_log,aes(x=date,y=rolling_average)) +
scale_y_continuous(
# Features of the first axis
name = "Model projections",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="Reported cases")
)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
#______________________________________________________________________________________________________________
plot1 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date),],
aes(x=date,y=rolling_average*underascertainment_est),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases") +
ylim(0,150000)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, nrow=2)
#number as % of whole population
lay <- rbind(c(1,2),c(3,3))
plot1 <-
ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date),],
aes(x=date,y=rolling_average*5000*underascertainment_est/sum(pop)),na.rm=TRUE) +
xlab("") + #ylim(0,1.0)+
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=Reff_tracker,aes(x=date,y=Reff),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,6) +
ylab("Reff") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot3<- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, plot3, layout_matrix = lay)
plot4 = ggplot(rho_tracker_dataframe) + geom_line(aes(x=date,y=rho))
plot5 = ggplot(VE_tracker_dataframe) + geom_line(aes(x=date,y=VE,color=as.factor(dose)))
lay <- rbind(c(1,2),c(3,3),c(4,5))
grid.arrange(plot1,plot2,plot3,plot4,plot5, layout_matrix = lay)
incidence_log_plot = incidence_log %>% filter(date >= Sys.Date()) %>%
mutate(           cumulative_incidence = cumsum(daily_cases),
cumulative_incidence_percentage = 100*cumsum(daily_cases)/sum(pop))
plot1 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date),],
aes(x=date,y=rolling_average*underascertainment_est),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases") +
ylim(0,150000)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, nrow=2)
#number as % of whole population
plot1 <-
ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date),],
aes(x=date,y=rolling_average*5000*underascertainment_est/sum(pop)),na.rm=TRUE) +
xlab("") + #ylim(0,1.0)+
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=Reff_tracker,aes(x=date,y=Reff),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,6) +
ylab("Reff") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot3<- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot4 = ggplot(rho_tracker_dataframe) + geom_line(aes(x=date,y=rho))
plot5 = ggplot(VE_tracker_dataframe) + geom_line(aes(x=date,y=VE,color=as.factor(dose)))
lay <- rbind(c(1,2),c(3,3),c(4,5))
grid.arrange(plot1,plot2,plot3,plot4,plot5, layout_matrix = lay)
plot1 <-
ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date) &
& case_history$date >=min(incidence_log_plot$date),],
plot1 <-
ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date) &
case_history$date >=min(incidence_log_plot$date),],
aes(x=date,y=rolling_average*5000*underascertainment_est/sum(pop)),na.rm=TRUE) +
xlab("") + #ylim(0,1.0)+
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=Reff_tracker,aes(x=date,y=Reff),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,6) +
ylab("Reff") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot3<- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot4 = ggplot(rho_tracker_dataframe) + geom_line(aes(x=date,y=rho))
plot5 = ggplot(VE_tracker_dataframe) + geom_line(aes(x=date,y=VE,color=as.factor(dose)))
lay <- rbind(c(1,2),c(3,3),c(4,5))
grid.arrange(plot1,plot2,plot3,plot4,plot5, layout_matrix = lay)
plot1 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date) &
case_history$date >=min(incidence_log_plot$date),],
aes(x=date,y=rolling_average*underascertainment_est),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases") +
ylim(0,150000)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, nrow=2)
#number as % of whole population
plot1 <-
ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date) &
case_history$date >=min(incidence_log_plot$date),],
aes(x=date,y=rolling_average*5000*underascertainment_est/sum(pop)),na.rm=TRUE) +
xlab("") + #ylim(0,1.0)+
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=Reff_tracker,aes(x=date,y=Reff),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,6) +
ylab("Reff") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot3<- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot4 = ggplot(rho_tracker_dataframe) + geom_line(aes(x=date,y=rho))
plot5 = ggplot(VE_tracker_dataframe) + geom_line(aes(x=date,y=VE,color=as.factor(dose)))
lay <- rbind(c(1,2),c(3,3),c(4,5))
grid.arrange(plot1,plot2,plot3,plot4,plot5, layout_matrix = lay)
date_limit = Sys.Date()
incidence_log_plot = incidence_log %>% filter(date >= date_limit) %>%
mutate(           cumulative_incidence = cumsum(daily_cases),
cumulative_incidence_percentage = 100*cumsum(daily_cases)/sum(pop))
plot1 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date) &
case_history$date >= date_limit,],
aes(x=date,y=rolling_average*underascertainment_est),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases") +
ylim(0,150000)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
grid.arrange(plot1, plot2, nrow=2)
#number as % of whole population
plot1 <-
ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=rolling_average_percentage),na.rm=TRUE) +
geom_point(data=case_history[case_history$date>date_start & case_history$date <max(incidence_log_plot$date) &
case_history$date >= date_limit,],
aes(x=date,y=rolling_average*5000*underascertainment_est/sum(pop)),na.rm=TRUE) +
xlab("") + #ylim(0,1.0)+
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("daily cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot2 <- ggplot() +
geom_line(data=Reff_tracker[Reff_tracker$date>=date_limit,],aes(x=date,y=Reff),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
#ylim(0,6) +
ylab("Reff") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot3<- ggplot() +
geom_line(data=incidence_log_plot,aes(x=date,y=cumulative_incidence_percentage),na.rm=TRUE) +
xlab("") +
scale_x_date(date_breaks="1 month", date_labels="%b") +
ylab("cumulative cases % whole pop") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
plot4 = ggplot(rho_tracker_dataframe[rho_tracker_dataframe$date>=date_limit,]) + geom_line(aes(x=date,y=rho))
plot5 = ggplot(VE_tracker_dataframe[VE_tracker_dataframe$date>=date_limit,]) + geom_line(aes(x=date,y=VE,color=as.factor(dose)))
lay <- rbind(c(1,2),c(3,3),c(4,5))
grid.arrange(plot1,plot2,plot3,plot4,plot5, layout_matrix = lay)
date_limit
View(rho_tracker_dataframe);View(VE_tracker_dataframe);View(Reff_tracker)
date_now
seq(date_start+1,date_start+nrow(rho_tracker_dataframe)-1,by="days")
unique(rho_tracker_dataframe$date)
date_now
seq(date_start+1,date_start+nrow(rho_tracker_dataframe)+1,by="days")
length(seq(date_start+1,date_start+nrow(rho_tracker_dataframe)+1,by="days"))
length(rho_tracker_dataframe)
nrow(rho_tracker_dataframe)
length(seq(date_start+2,date_start+nrow(rho_tracker_dataframe)+1,by="days"))
seq(date_start+2,date_start+nrow(rho_tracker_dataframe)+1,by="days")
date_now
View(incidence_log)
