values_from = value)
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations  %>%
filter(antiviral_type == "nirmatrelvir_ritonavir" & intervention == "antiviral 2023-01-01") %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(antiviral_target_group),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('antiviral doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations %>%
filter(antiviral_type == "nirmatrelvir_ritonavir" | intervention == 'vaccine') %>%
filter(antiviral_target_group == 'adults_with_comorbidities' | intervention == 'vaccine') %>%
filter( !(intervention == 'vaccine' & evaluation_group == 'high_risk')) %>% #change eval group here to change from high-risk to pop-level plot
#filter(!(intervention == 'vaccine' & vax_scenario == 'all willing adults vaccinated with a primary schedule plus booster dose')) %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
}
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations %>%
filter(antiviral_type == "nirmatrelvir_ritonavir" | intervention == 'vaccine') %>%
filter(antiviral_target_group == 'adults_with_comorbidities' | intervention == 'vaccine') %>%
filter( !(intervention == 'vaccine' & evaluation_group == 'high_risk')) %>% #change eval group here to change from high-risk to pop-level plot
#filter(!(intervention == 'vaccine' & vax_scenario == 'all willing adults vaccinated with a primary schedule plus booster dose')) %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
options(warn = -1)
plot_list = list()
a
this_outcome = LIST_outcomes[[a]]
this_outcome
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
}
ggplot(data = workshop[workshop$outcome == this_outcome,])
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=result,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=result,y=vax_scenario,color=as.factor(intervention)))
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(y=result,x=vax_scenario,color=as.factor(intervention)))
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(y=value,x=vax_scenario,color=as.factor(intervention)))
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations %>%
filter(antiviral_type == "nirmatrelvir_ritonavir" | intervention == 'vaccine') %>%
filter(antiviral_target_group == 'adults_with_comorbidities' | intervention == 'vaccine') %>%
filter( !(intervention == 'vaccine' & evaluation_group == 'high_risk')) %>% #change eval group here to change from high-risk to pop-level plot
#filter(!(intervention == 'vaccine' & vax_scenario == 'all willing adults vaccinated with a primary schedule plus booster dose')) %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
this_outcome
workshop
workshop[workshop$outcome == this_outcome,]
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))
ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
#xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
#xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
### PLOT (1/2) Vax vs. antivirals ##############################################
LIST_outcomes = list('severe_disease',
'hosp',
'death',
'YLL')
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations %>%
filter(antiviral_type == "nirmatrelvir_ritonavir" | intervention == 'vaccine') %>%
filter(antiviral_target_group == 'adults_with_comorbidities' | intervention == 'vaccine') %>%
filter( !(intervention == 'vaccine' & evaluation_group == 'high_risk')) %>% #change eval group here to change from high-risk to pop-level plot
#filter(!(intervention == 'vaccine' & vax_scenario == 'all willing adults vaccinated with a primary schedule plus booster dose')) %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
#pivot_wider(
# id_cols = c(vax_scenario,vax_scenario_risk_group,antiviral_target_group,outcome,intervention),
#names_from = result,
#values_from = value)
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
#xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
ggsave(paste(rootpath,"x_results/plot_VaxVsAntivirals_",time,".png",sep=''), width = 9.6, height = 5.7)
options(warn = 0)
# Additional plot for molnupiravir #############################################
LIST_outcomes = list('severe_disease',
'hosp',
'death',
'YLL')
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations %>%
filter(antiviral_type != "nirmatrelvir_ritonavir" | intervention == 'vaccine') %>%
filter(antiviral_target_group == 'adults_with_comorbidities' | intervention == 'vaccine') %>%
filter( !(intervention == 'vaccine' & evaluation_group == 'high_risk')) %>% #change eval group here to change from high-risk to pop-level plot
#filter(!(intervention == 'vaccine' & vax_scenario == 'all willing adults vaccinated with a primary schedule plus booster dose')) %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
# pivot_wider(
#   id_cols = c(vax_scenario,vax_scenario_risk_group,antiviral_target_group,outcome,intervention),
#   names_from = result,
#   values_from = value)
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(intervention),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
ggsave(paste(rootpath,"x_results/plot_VaxVsAntivirals_molnupiravir_",time,".png",sep=''), width = 9.6, height = 5.7)
options(warn = 0)
#____________________________________________________________________________
### PLOT (2/2) Varying target groups ###########################################
LIST_target_group = list('adults_with_comorbidities',
'unvaccinated_adults',
'unvaccinated_adults_AND_adults_with_comorbidities',
'all_adults')
### Calculate # of antivirals per outcome averted
workshop = RECORD_antiviral_model_simulations  %>%
filter(antiviral_type == "nirmatrelvir_ritonavir" & intervention == "antiviral 2023-01-01") %>%
#filter(result %in% c("average_doses_per_outcome_averted","UCI_doses_per_outcome_averted","LCI_doses_per_outcome_averted")) %>%
filter(result %in% c("doses_per_outcome_averted")) %>%
mutate(intervention = case_when(
# intervention == 'antiviral' ~ paste('antiviral starting',antiviral_start_date),
intervention == 'vaccine' ~ paste('booster dose starting 2023-01-01'),
TRUE ~ intervention
)) #%>%
# pivot_wider(
#   id_cols = c(vax_scenario,vax_scenario_risk_group,antiviral_target_group,outcome,intervention),
#   names_from = result,
#   values_from = value)
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] = ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(antiviral_target_group),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('antiviral doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(intervention)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
ggsave(paste(rootpath,"x_results/plot_targetGroups_",time,".png",sep=''), width = 9.6, height = 5.7)
options(warn = 0)
#____________________________________________________________________________
options(warn = -1)
plot_list = list()
for (a in 1:length(LIST_outcomes)) {
this_outcome = LIST_outcomes[[a]]
# plot_list[[a]] = ggplot(data = workshop[workshop$outcome == this_outcome,]) +
#   geom_pointrange(aes(x=average_doses_per_outcome_averted,y=vax_scenario,color=as.factor(antiviral_target_group),xmin=LCI_doses_per_outcome_averted,xmax=UCI_doses_per_outcome_averted))  +
#   labs(title = paste(this_outcome), color = 'intervention') +
#   ylab('')+
#   xlim(0,max(workshop$UCI_doses_per_outcome_averted[workshop$outcome == this_outcome])) +
#   xlab('antiviral doses to avert an outcome')
plot_list[[a]] =ggplot(data = workshop[workshop$outcome == this_outcome,]) +
geom_boxplot(aes(x=value,y=vax_scenario,color=as.factor(antiviral_target_group)))  +
labs(title = paste(this_outcome), color = 'intervention') +
ylab('')+
xlab('doses to avert an outcome')
}
ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]], plot_list[[4]],
common.legend = TRUE,
legend="bottom",
ncol = 1,
nrow = 4)
#load libraries
library(readr)
library(deSolve)
library(rvest)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(readr)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(doParallel)
library(parallel)
library(foreach)
#dependencies -> nil!
rm(list=ls())
rootpath = str_replace(getwd(), "GitHub_vaxAllocation","")
### (1/4) Population by age (single years)
workshop <- read.csv("1_inputs/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv", header = TRUE)
View(workshop)
unique(workshop$LocTypeName)
workshop = workshop %>%
filter("Country/Area") #select countries only
workshop = workshop %>%
filter(LocTypeName == "Country/Area") #select countries only
unique(workshop$Time)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time == 2021)
unique(workshop$Variant)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time == 2021) %>%
filter(ISO3_code == "SLE")
### (1/4) Population by age (single years)
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_1950-2021.csv", header = TRUE)
workshop2 <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_PopulationBySingleAgeSex_Medium_2022-2100.csv", header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time >= 2021 & Time<2025)
unique(workshop$Variant)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrp,PopFemale,PopTotal)
UN_pop_est = workshop
save(UN_pop_est,"1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
UN_pop_est = workshop
save(UN_pop_est,"1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
save(UN_pop_est,file = "1_inputs/UN_world_population_prospects/UN_pop_est.Rdata")
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) UN World Population Prospects 2022.R", echo=TRUE)
View(test)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>% #select countries only
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrp,PopFemale,PopTotal) %>%
mutate(PopFemale = PopFemale * 1000,
PopTotal = PopTotal * 1000)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) UN World Population Prospects 2022.R", echo=TRUE)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022) %>%
summarise(sum = sum(PopTotal))
### (3/3) ASFR
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Fertility_by_Age1.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025)
unique(workshop$Variant)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium")
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium") %>%
select(ISO3_code, Location, Time, AgeGrp, ASFR,PASFR, Births)
### (2/3) Life expectancy
test <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv", header = TRUE)
test = test %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025)
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Fertility_by_Age1.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium") %>%
select(ISO3_code, Location, Time, AgeGrp, ASFR,PASFR, Births) %>%
mutate(ASFR = ASFR / 1000)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021) %>%
summarise(sum = sum(PASFR))
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Fertility_by_Age1.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
filter(Variant ==  "Medium") %>%
select(ISO3_code, Location, Time, AgeGrp, ASFR) %>%
mutate(ASFR = ASFR / 1000)
UN_ASFR_est = workshop
save(UN_ASFR_est,file = "1_inputs/UN_world_population_prospects/UN_ASFR_est.Rdata")
### (2/3) Life expectancy
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv", header = TRUE)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025)
View(UN_ASFR_est)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022) %>% filter(AgeGrp,ex)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022) %>% select(AgeGrp,ex)
workshop %>% filter(ISO3_code == "SLE" & Time == 2022)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021) %>% select(AgeGrp,ex)
unique(workshop$Sex)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrpStart,ex) %>%
rename(AgeGrp = AgeGrpStart)
workshop %>% filter(ISO3_code == "SLE" & Time == 2021)
UN_lifeExpect_est = workshop
save(UN_lifeExpect_est,file = "1_inputs/UN_world_population_prospects/UN_lifeExpect_est.Rdata")
### (2/3) Life expectancy
workshop <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_1950-2021.csv", header = TRUE)
workshop2 <- read.csv("1_inputs/UN_world_population_prospects/WPP2022_Life_Table_Complete_Medium_Both_2022-2100.csv", header = TRUE)
workshop = rbind(workshop,workshop2); rm(workshop2)
workshop = workshop %>%
filter(LocTypeName == "Country/Area") %>%
filter(Time >= 2021 & Time<2025) %>%
select(ISO3_code,Location,Time,AgeGrpStart,ex) %>%
rename(AgeGrp = AgeGrpStart)
UN_lifeExpect_est = workshop
save(UN_lifeExpect_est,file = "1_inputs/UN_world_population_prospects/UN_lifeExpect_est.Rdata")
