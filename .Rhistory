geom_point(data=reported_cases_plot,aes(x=date,y=rolling_average)) +
plot_standard +
labs(color = 'beta2') +
facet_grid(shift2 ~. )
View(severe_outcome_FINAL)
#(B/C)
load(file = '1_inputs/severe_outcome_FINAL.Rdata')
View(severe_outcome_FINAL)
options(scipen = 1000)
View(severe_outcome_FINAL)
plot_tracker_FINAL
save(plot_tracker, file = paste('1_inputs/fit/TLS_second_wave_search.Rdata',sep=''))
save(first_wave_search, file = paste('1_inputs/fit/TLS_first_wave_search.Rdata',sep=''))
#load libraries
library(readr)
library(deSolve)
library(rvest)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(tidyverse)
library(beepr)
#clear the field!
rm(list=ls())
this_setting = setting = "FJI"
### Setup __________________________________________________________________________________________________
#general toggles
fitting = "on"
plotting = "off"; ticket = 0
outbreak_timing = "off" #i.e., no new outbreak if =="after" than new VOC after last vaccine delivery date, if == 'during" new VOC introduced one week from now
vax_strategy_toggle = "off" #no additional vax, use real vax data only
vax_risk_strategy_toggle = "off"
sensitivity_analysis_toggles = list()
waning_toggle_acqusition = TRUE
waning_toggle_severe_outcome = FALSE #let's save some time, this is not used in the modelling scenarios
waning_toggle_rho_acqusition = TRUE
#initial search range of seed dates
if (this_setting == "FJI"){
date_start = as.Date('2021-04-30')
strain_inital = strain_now = 'WT'
covid19_waves = baseline_covid19_waves = data.frame(date = #c(as.Date('2021-06-06'),as.Date('2021-10-21'),as.Date('2022-01-15')), # initial best guess!
c(as.Date('2021-06-09'),as.Date('2021-10-15'),as.Date('2022-02-01')), # previous best guess
strain = c('delta','omicron','omicron'))
} else if (this_setting == "PNG"){
strain_inital = strain_now = 'WT'
baseline_covid19_waves = covid19_waves = data.frame(date = c(as.Date('2021-01-15'),as.Date('2021-09-01'),as.Date('2021-12-01')),
strain = c('WT','delta','omicron'))
date_start = covid19_waves$date[1] - 2
} else if (this_setting == "TLS") {
strain_inital = strain_now = 'WT'
baseline_covid19_waves = covid19_waves = data.frame(
date = c(as.Date('2021-03-01'),as.Date('2021-05-01'),as.Date('2021-11-01')),
strain = c('WT', 'delta', 'omicron'))
date_start = covid19_waves$date[1] - 2
} else if (this_setting == "IDN") {
strain_inital = strain_now = 'WT'
baseline_covid19_waves = covid19_waves = data.frame(date = c(as.Date('2021-04-01'),as.Date('2021-10-15')),
strain = c('delta','omicron'))
date_start = covid19_waves$date[1] - 2
}
model_weeks = as.numeric((Sys.Date()+1-date_start)/7)
#plot standard
plot_standard = theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#risk group toggles
risk_group_prioritisation_to_date = NA
risk_group_lower_cov_ratio = NA
risk_group_toggle = "on"
risk_group_name = 'adults_with_comorbidities'
RR_estimate = 1.95
### Saving VE for known dates __________________________________________________________________________________
#Load vax history
source(paste(getwd(),"/(function)_VE_time_step.R",sep=""))
source(paste(getwd(),"/(function)_rho_time_step.R",sep=""))
source(paste(getwd(),"/(1)_simulate_setting.R",sep=""))
source(paste(getwd(),"/(3)_disease_characteristics.R",sep=""))
source(paste(getwd(),"/(2)_inital_state.R",sep=""))
list_poss_Rdata = list.files(path="1_inputs/fit/",pattern = paste("VE_real_range_",this_setting,"*",sep=''))
if (length(list_poss_Rdata)>0){
list_poss_Rdata_details = double()
for (i in 1:length(list_poss_Rdata)){
list_poss_Rdata_details = rbind(list_poss_Rdata_details,
file.info(paste("1_inputs/fit/",list_poss_Rdata[[i]],sep=''))$mtime)
}
latest_file = list_poss_Rdata[[which.max(list_poss_Rdata_details)]]
load(file = paste("1_inputs/fit/",latest_file,sep=''))
date_list = seq(max(max(VE_real_range$date)+1), # run only dates not yet filled
Sys.Date()+1,
by="days")
} else{
VE_real_range = data.frame()
date_list = seq(max(date_start,min(vaccination_history_TRUE$date)+ min(vaxCovDelay$delay)),
Sys.Date()+1,
by="days")
}
for (i in 1:length(date_list)) {
#date_now
date_now = date_list[i]
#(1/3) save VE as all WT-delta estimates
VE_delta = VE_time_step(
"delta",
date_now,
'any_infection',
VE_waning_LOCAL = VE_waning_distribution, #loaded from (2)
vaccination_history_LOCAL = vaccination_history_TRUE, #loaded from (1)
SA_toggles_local = sensitivity_analysis_toggles) %>%
mutate(date = date_now,
strain = "delta")
#(2/3) save VE as all omicron estimates
VE_omicron = VE_time_step(
"omicron",
date_now,
'any_infection',
VE_waning_LOCAL = VE_waning_distribution, #loaded from (2)
vaccination_history_LOCAL = vaccination_history_TRUE, #loaded from (1)
SA_toggles_local = sensitivity_analysis_toggles) %>%
mutate(date = date_now,
strain = "omicron")
#(3/3) within time step of each run calculate as mixed WT-delta/omicron estimates within omicron shift
VE_real_range = rbind(VE_real_range, VE_delta,VE_omicron)
}
rm(VE_time_step)
save(VE_real_range, file = paste('1_inputs/fit/VE_real_range_',this_setting,'_',Sys.Date(),'.Rdata',sep=''))
beep()
beep()
ggplot(NPI_estimates) + geom_line(aes(x=date,y=NPI))
NPI_inital
date_start
parameters$NPI
ggplot(NPI_estimates) + geom_line(aes(x=date,y=NPI)) + geom_vline(xintercept = date_start)
date_start
fitting = "on"
strain_inital = strain_now = 'WT'
date_start = as.Date('2021-04-30')
model_weeks = as.numeric(ceiling((as.Date('2022-12-31') - date_start)/7))
covid19_waves = data.frame(date = c(as.Date('2021-06-06'),as.Date('2021-10-04'),as.Date('2022-02-01')),
strain = c('delta','omicron','omicron'))
fitting_beta= c(0.93,1.04,1.22)
NPI_adj = NPI_estimates$NPI[NPI_estimates$date %in% covid19_waves$date]
NPI_adj
NPI_adj = NPI_estimates$NPI[NPI_estimates$date %in% covid19_waves$date]/100
NPI_adj
NPI_adj = (NPI_adj - 1)/NPI_adj
NPI_adj
NPI_adj = NPI_estimates$NPI[NPI_estimates$date %in% covid19_waves$date]/100
(NPI_adj - 1)
(1- NPI_adj)
(1- NPI_adj)/NPI_adj
NPI_adj = NPI_estimates$NPI[NPI_estimates$date %in% covid19_waves$date]/100
NPI_adj
(1- NPI_adj)/NPI_adj
NPI_adj/(1- NPI_adj)
NPI_adj = NPI_estimates$NPI[NPI_estimates$date %in% covid19_waves$date]/100
NPI_adj = NPI_adj/(1- NPI_adj)
itting_beta * NPI_adj
fitting_beta * NPI_adj
0.93*3.97
fitting = "on"
strain_inital = strain_now = 'WT'
date_start = as.Date('2021-04-30')
model_weeks = as.numeric(ceiling((as.Date('2022-12-31') - date_start)/7))
covid19_waves = data.frame(date = c(as.Date('2021-06-06'),as.Date('2021-10-04'),as.Date('2022-02-01')),
strain = c('delta','omicron','omicron'))
fitting_beta= c(0.93,1.04,1.22)
NPI_adj = NPI_estimates$NPI[NPI_estimates$date %in% covid19_waves$date]/100
NPI_adj = NPI_adj/(1- NPI_adj)
fitting_beta = fitting_beta * NPI_adj
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)
beep()
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[2] ~ rolling_average * this_setting_best_fit$under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * this_setting_best_fit$under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  this_setting_best_fit$under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
fit_cutoff_dates
#SETUP________________________________________
require('pracma') #contains findpeaks function
#reported_cases remove NA, and within simulation scope
reported_cases = case_history %>% select(date,rolling_average) %>% filter(date > date_start)
reported_cases <- na.omit(reported_cases)
#reported_peaks - peaks in reported daily cases, NB: currently hard coded to FJI
reported_peaks = findpeaks(reported_cases$rolling_average,minpeakheight = 50 ,minpeakdistance = 90, npeaks = 3 )
reported_peaks = reported_cases$date[c(reported_peaks[,2])]
#add third peak
window = reported_cases %>% filter(date>as.Date('2022-05-01'))
third_peak = median(window$date[window$rolling_average == max(window$rolling_average)])
reported_peaks = c(reported_peaks,third_peak)
#fit cutoff dates
if (this_setting == "FJI"){
fit_cutoff_dates = c(as.Date('2021-10-15'),#earliest likely introduction of Omicron
reported_peaks[2] + as.numeric(reported_peaks[3] - reported_peaks[2])/2)
} else if (this_setting == "PNG"){
fit_cutoff_dates = c(as.Date('2021-07-05')) #first good introduction of Delta in PNG
} else if (this_setting == "IDN"){
fit_cutoff_dates =c((sort(reported_peaks)[2]-sort(reported_peaks)[1])/2+sort(reported_peaks)[1],
sort(reported_peaks)[2]+90) #first good introduction of Delta in PNG
}
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[2] ~ rolling_average * this_setting_best_fit$under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * this_setting_best_fit$under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  this_setting_best_fit$under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
workshop = incidence_log %>%
left_join(workshop, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2)
to_plot = workshop %>% filter(date>date_start)
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[2] ~ rolling_average * this_setting_best_fit$under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * this_setting_best_fit$under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  this_setting_best_fit$under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[2] ~ rolling_average * this_setting_best_fit$under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * this_setting_best_fit$under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  this_setting_best_fit$under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
under_reporting_est = c(16.9,60,166.5)
workshop = case_history %>%
select(date,rolling_average) %>%
mutate(
rolling_average = case_when(
date > fit_cutoff_dates[2] ~ rolling_average * under_reporting_est[3],
date > fit_cutoff_dates[1] ~ rolling_average * under_reporting_est[2],
date <= fit_cutoff_dates[1] ~ rolling_average *  under_reporting_est[1])) %>%
rename(adjusted_reported = rolling_average)
workshop = incidence_log %>%
left_join(workshop, by = "date") %>%
mutate(fit_statistic = abs(rolling_average - adjusted_reported)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
fitting_beta
### Check possible range of each fitting_beta ##################################
baseline_fitting_beta = fitting_beta
strain_inital
strain_now
baseline_fitting_beta = fitting_beta
baseline_fitting_beta
fitting_beta = baseline_fitting_beta
fitting_beta
covid19_waves
delta_shift
delta_shift
omicron_shift
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~ rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_est[2]*delta + 1/under_reporting_est[1]*(1-delta)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
case_history
case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date")
case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(delta_shift, by = "date") %>%
rename(delta = percentage) %>%
left_join(omicron_shift, by = "date")
omicron_shift
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~ rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~ rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(delta) == FALSE ~ rolling_average * (1/under_reporting_est[2]*delta + 1/under_reporting_est[1]*(1-delta)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~ rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=adjusted_reported)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
under_reporting_est
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
prev_fit = workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2)
prev_fit = to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("")
### Check possible range of each fitting_beta ##################################
fitting_beta_range_plot = data.frame()
for (search_this_wave in 1:length(fitting_beta)){
for (search_this_adj in c(0.75,1.25)){
fitting_beta = baseline_fitting_beta
fitting_beta[this_wave] = fitting_beta[this_wave] * adj
strain_inital = strain_now = 'WT'
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) %>%
mutate(wave = search_this_wave,
adj = search_this_adj)
fitting_beta_range_plot = rbind(fitting_beta_range_plot,workshop)
}
}
beep()
### Check possible range of each fitting_beta ##################################
fitting_beta_range_plot = data.frame()
for (search_this_wave in 1:length(fitting_beta)){
for (search_this_adj in c(0.75,1.25)){
fitting_beta = baseline_fitting_beta
fitting_beta[search_this_wave] = fitting_beta[search_this_wave] * search_this_adj
strain_inital = strain_now = 'WT'
source(paste(getwd(),"/CommandDeck.R",sep=""),local=TRUE)
workshop = case_history %>%
select(date,rolling_average) %>%
rename(reported_cases = rolling_average) %>%
right_join(incidence_log, by = "date") %>%
left_join(omicron_shift, by = "date") %>%
rename(omicron = percentage) %>%
mutate(
rolling_average = case_when(
date>= min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[3]*omicron + 1/under_reporting_est[2]*(1-omicron)),
date>= min(omicron_shift$date[omicron_shift$wave == 2]) ~
rolling_average * 1/under_reporting_est[3],
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2]) & is.na(omicron) == FALSE ~
rolling_average * (1/under_reporting_est[2]*omicron + 1/under_reporting_est[1]*(1-omicron)),
date >= min(omicron_shift$date[omicron_shift$wave == 1]) & date < min(omicron_shift$date[omicron_shift$wave == 2])  ~
rolling_average * 1/under_reporting_est[2],
date < min(omicron_shift$date[omicron_shift$wave == 1]) ~ rolling_average * 1/under_reporting_est[1])) %>%
mutate(fit_statistic = abs(rolling_average - reported_cases)^2) %>%
mutate(wave = search_this_wave,
adj = search_this_adj)
fitting_beta_range_plot = rbind(fitting_beta_range_plot,workshop)
}
}
beep()
to_plot = workshop %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(adj)),na.rm=TRUE) +
geom_line(data=prev_fit,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("") +
facet_grid(wave ~. )
to_plot = fitting_beta_range_plot %>% filter(date>date_start)
ggplot() +
geom_line(data=to_plot,aes(x=date,y=rolling_average,color=as.factor(adj)),na.rm=TRUE) +
geom_line(data=prev_fit,aes(x=date,y=rolling_average),na.rm=TRUE) +
geom_point(data=to_plot,aes(x=date,y=reported_cases)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlab("") +
facet_grid(wave ~. )
add_rows = crossing(prev_fit,wave = c(1,2,3))
prev_fit
