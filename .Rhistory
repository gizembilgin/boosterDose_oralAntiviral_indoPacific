seroprev = seroprev[seroprev$setting == setting & seroprev$year ==
as.numeric(format(date_start, format="%Y")),]
seroprev
if (as.numeric(format(date_start, format="%Y")) > 2022){
seroprev = seroprev[seroprev$setting == setting & seroprev$year ==  2022,]
}
seroprev
as.numeric(format(date_start, format="%Y")) > 2022
if (as.numeric(format(date_start, format="%Y")) > 2022){
load(file = "1_inputs/seroprev.Rdata")
seroprev = seroprev[seroprev$setting == setting & seroprev$year ==  2022,]
}
seroprev
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
parameters$VE
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
date_start
vax_strategy_toggles
sum(state); sum(pop) #CHECK = confirmed equal
View(S_tidy$S_inital)
View(S_tidy)
vaccine_coverage
#calc
vaccine_coverage = crossing(dose = c(1:num_vax_doses),
vaccine_type = unique(vaccination_history_FINAL$vaccine_type),
age_group = age_group_labels,
cov = c(0)) # CHECKED:vaccine coverage long like E/I/R structure
for (i in 1:J){ # age
for (t in 1:T){  # vaccine type
for (d in 1:D){ # vaccine dose
C = i + J*(t+(d-1)*T) - J
workshop_type =  unique(vaccination_history_FINAL$vaccine_type)[t]
workshop_age = age_group_labels[i]
if (workshop_type == "Johnson & Johnson" & d == 2){ #avoid J&J dose 2, otherwise NA and stuffs up vax_type order
} else{
if ((date_start - vaccine_coverage_delay[d])<= max(vaccination_history_FINAL$date) &
(date_start - vaccine_coverage_delay[d])>= min(vaccination_history_FINAL$date)){
workshop_value =  vaccination_history_FINAL$coverage_this_date[
vaccination_history_FINAL$date == date_start - vaccine_coverage_delay[d]
& vaccination_history_FINAL$age_group == workshop_age
& vaccination_history_FINAL$dose == d
& vaccination_history_FINAL$vaccine_type == workshop_type] / 100
vaccine_coverage$cov[
vaccine_coverage$dose == d &
vaccine_coverage$vaccine_type == workshop_type &
vaccine_coverage$age_group == workshop_age
] = max(workshop_value,0)
} else if ((date_start - vaccine_coverage_delay[d])> max(vaccination_history_FINAL$date)){
workshop_value =
vaccination_history_FINAL$coverage_this_date[
vaccination_history_FINAL$date == max(vaccination_history_FINAL$date)
& vaccination_history_FINAL$dose == d
& vaccination_history_FINAL$age_group == workshop_age
& vaccination_history_FINAL$vaccine_type == workshop_type]/100
vaccine_coverage$cov[
vaccine_coverage$dose == d &
vaccine_coverage$vaccine_type == workshop_type &
vaccine_coverage$age_group == workshop_age
] =  max(workshop_value,0)
}
}
}
}
}
vaccine_coverage
View(vaccine_coverage)
this_vax = vaccination_history_FINAL[vaccination_history_FINAL$vaccine_type == workshop_type,]
View(this_vax)
t=1
workshop_type =  unique(vaccination_history_FINAL$vaccine_type)[t]
this_vax_max_date = max(vaccination_history_FINAL$date[vaccination_history_FINAL$vaccine_type == workshop_type])
this_vax_max_date
#calc
vaccine_coverage = crossing(dose = c(1:num_vax_doses),
vaccine_type = unique(vaccination_history_FINAL$vaccine_type),
age_group = age_group_labels,
cov = c(0)) # CHECKED:vaccine coverage long like E/I/R structure
for (i in 1:J){ # age
for (t in 1:T){  # vaccine type
for (d in 1:D){ # vaccine dose
workshop_type =  unique(vaccination_history_FINAL$vaccine_type)[t]
workshop_age = age_group_labels[i]
this_vax_max_date = max(vaccination_history_FINAL$date[vaccination_history_FINAL$vaccine_type == workshop_type])
if (workshop_type == "Johnson & Johnson" & d == 2){ #avoid J&J dose 2, otherwise NA and stuffs up vax_type order
} else{
if ((date_start - vaccine_coverage_delay[d])<= this_vax_max_date &
(date_start - vaccine_coverage_delay[d])>= min(vaccination_history_FINAL$date)){
workshop_value =  vaccination_history_FINAL$coverage_this_date[
vaccination_history_FINAL$date == date_start - vaccine_coverage_delay[d]
& vaccination_history_FINAL$age_group == workshop_age
& vaccination_history_FINAL$dose == d
& vaccination_history_FINAL$vaccine_type == workshop_type] / 100
vaccine_coverage$cov[
vaccine_coverage$dose == d &
vaccine_coverage$vaccine_type == workshop_type &
vaccine_coverage$age_group == workshop_age
] = max(workshop_value,0)
} else if ((date_start - vaccine_coverage_delay[d])> this_vax_max_date){
workshop_value =
vaccination_history_FINAL$coverage_this_date[
vaccination_history_FINAL$date == this_vax_max_date
& vaccination_history_FINAL$dose == d
& vaccination_history_FINAL$age_group == workshop_age
& vaccination_history_FINAL$vaccine_type == workshop_type]/100
vaccine_coverage$cov[
vaccine_coverage$dose == d &
vaccine_coverage$vaccine_type == workshop_type &
vaccine_coverage$age_group == workshop_age
] =  max(workshop_value,0)
}
}
}
}
}
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/CommandDeck.R", echo=TRUE)
### flatten to vaccine classes
flat = data.frame(colSums(next_state))
colnames(flat) = c('pop')
flat$temp = seq(1,(num_age_groups*num_vax_classes))
### flatten to vaccine classes
flat = data.frame(colSums(next_state))
View(next_state)
aggregate(next_state$pop, by=list(next_state$age_group), FUN=sum)
pop
aggregate(next_state$pop, by=list(next_state$age_group,next_state$dose), FUN=sum)
aggregate(next_state$pop, by=list(next_state$dose), FUN=sum)
aggregate(next_state$pop, by=list(next_state$vaccine_type), FUN=sum)
vax_strategy_toggles
#vaccine_coverage
aggregate(vaccine_coverage$cov,by=list(vaccine_coverage$dose,vaccine_coverage$age_group),FUN=sum)
aggregate(S_tidy$S_inital,by=list(S_tidy$dose,S_tidy$age_group),FUN=sum)
date_now
aggregate(vaccination_history_POP$doses_delivered_this_date,by=list(vaccination_history_POP$dose),FUN=sum)
aggregate(vaccination_history_TRUE$doses_delivered_this_date,by=list(vaccination_history_TRUE$dose),FUN=sum)
#dose 1 = 1727305
#dose 2 = 1114047
aggregate(vaccination_history_TRUE$doses_delivered_this_date,by=list(vaccination_history_TRUE$dose,vaccination_history_TRUE$age_group),FUN=sum)
aggregate(vaccine_coverage_end_history$cov,by=list(vaccine_coverage_end_history$dose,vaccine_coverage_end_history$age_group),FUN=sum)
### These are added to the vax_delivery_outline
# vaccination_history_MODF = rbind(vaccination_history_TRUE,vax_delivery_outline)
aggregate(vax_delivery_outline$doses_delivered_this_date,by=list(vax_delivery_outline$dose,vax_delivery_outline$age_group),FUN=sum)
aggregate(vaccination_history_MODF$doses_delivered_this_date,by=list(vaccination_history_MODF$dose,vaccination_history_MODF$age_group),FUN=sum)
pop
#vaccine_coverage
aggregate(vaccine_coverage$cov,by=list(vaccine_coverage$dose,vaccine_coverage$age_group),FUN=sum)
aggregate(S_tidy$S_inital,by=list(S_tidy$dose,S_tidy$age_group),FUN=sum)
aggregate(next_state$pop, by=list(next_state$age_group,next_state$dose), FUN=sum)
aggregate(next_state$pop, by=list(next_state$dose), FUN=sum)
aggregate(next_state$pop, by=list(next_state$vaccine_type), FUN=sum)
aggregate(S_tidy$S_inital,by=list(S_tidy$dose,S_tidy$age_group),FUN=sum)
aggregate(next_state$pop,by=list(next_state$dose,next_state$age_group),FUN=sum)
VE
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(run)_vax_strategies.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
date_now
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/workshop - VE estimate update.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/workshop - VE distribution by type.R", echo=TRUE)
strain_test = 'omicron'
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
proj_outcome = unique(workshop$outcome)[i]
plot_list[[i]]  <- ggplot() +
geom_line(data=workshop[workshop$outcome == proj_outcome & workshop$strain == strain_test,],
aes(x=days,y=VE_days,color=as.factor(immunity)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against",proj_outcome,"(",strain_test,')'))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
}
plot_list
#cum
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=date,y=averted_cum,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
list_plot_commands = c("no further vaccine rollout","baseline - current roll-out","baseline - idealised prioritisation strategy")
### (2) Compare as is #######################################################################################################
#(A/B) table
severe_outcome_table
#(B/B) plots
#(i) absolute
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=date,y=proj,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('absolute outcome by scenario', face = 'bold', size = 16))
#(ii) cumulative
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=date,y=proj_cum,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('cumulative outcome by scenario', face = 'bold', size = 16))
max(vaccination_history_FINAL$date)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
View(severe_outcome_projections)
##### Genuine projection from incidence!
#(A/D) Join incidence_log_tidy with severe outcome incidence by vax status
workshop = incidence_log_tidy %>%
left_join(severe_outcome_FINAL) %>%
mutate(proj = incidence*percentage) #calculate incidence -> severe outcome
if(!nrow(severe_outcome_FINAL[severe_outcome_FINAL$date <= max(incidence_log_tidy$date),]) == nrow(workshop)){stop('something has gone amiss')
} else if (!nrow(severe_outcome_FINAL) == nrow(workshop)){warning('more doses left to give in this simulation')}
View(workshop)
#(B/D) Sum across age groups, doses and vaccination status to get overall severe incidence per day
workshop = workshop %>%
group_by(date,outcome) %>%
summarise(proj=sum(proj))
#(C/D) Add cases as an outcome
workshop_incid =  incidence_log_unedited[,c('date','daily_cases')] %>%
mutate(outcome ='cases',proj = daily_cases) %>%
select(date,outcome,proj)
workshop = rbind(workshop,workshop_incid)
#(D/D) Calculate cumulative severe outcomes by outcome type
severe_outcome_projections = workshop %>%
group_by(outcome) %>%
mutate(proj_cum = cumsum(proj))
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(run)_vax_strategies.R", echo=TRUE)
### (1) Overarching toggles #######################################################################################################
options(scipen=10000); require(ggpubr)
list_plot_commands = c("no further vaccine rollout","baseline - current roll-out","baseline - idealised prioritisation strategy")
list_plot_commands = c("no further vaccine rollout","baseline - current roll-out","expand to children!")
list_plot_commands = c("no further vaccine rollout","baseline - current roll-out","double speed","x5 speed" )
### (2) Compare as is #######################################################################################################
#(A/B) table
severe_outcome_table
#(B/B) plots
#(i) absolute
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=date,y=proj,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('absolute outcome by scenario', face = 'bold', size = 16))
#(ii) cumulative
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
View(severe_outcome_tracker)
#(B/B) plots
#(i) absolute
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=date,y=proj,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('absolute outcome by scenario', face = 'bold', size = 16))
#(B/B) plots
#(i) absolute
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=days,y=proj,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('absolute outcome by scenario', face = 'bold', size = 16))
#(B/B) plots
#(i) absolute
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=day,y=proj,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('absolute outcome by scenario', face = 'bold', size = 16))
#(B/B) plots
baseline = severe_outcome_tracker[severe_outcome_tracker$label == 'no further vaccine rollout',c(paste(day_or_date),'outcome','proj','proj_cum')]
paste(day_or_date)
day_or_date = 'day'
paste(day_or_date)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
day_or_date
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
### (1) Overarching toggles #######################################################################################################
options(scipen=10000); require(ggpubr)
list_plot_commands = c("no further vaccine rollout","baseline - current roll-out","baseline - idealised prioritisation strategy")
list_plot_commands = c("no further vaccine rollout","baseline - current roll-out","expand to children!")
list_plot_commands = c("no further vaccine rollout","baseline - current roll-out","double speed","x5 speed" )
day_or_date = "day"
if (day_or_date == "day"){
severe_outcome_tracker = severe_outcome_tracker %>% mutate(time = day)
} else if (day_or_date == 'date'){
severe_outcome_tracker = severe_outcome_tracker %>% mutate(time = date)
}
### (2) Compare as is #######################################################################################################
#(A/B) table
severe_outcome_table
#(B/B) plots
#(i) absolute
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=time,y=proj,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('absolute outcome by scenario', face = 'bold', size = 16))
#(ii) cumulative
workshop = severe_outcome_tracker[severe_outcome_tracker$label %in% list_plot_commands, ]
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=noquote(time),y=proj_cum,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('cumulative outcome by scenario', face = 'bold', size = 16))
### (3) Compare to baseline #######################################################################################################
#(A/B) table
averted_table = severe_outcome_table[severe_outcome_table$scenario != 'no further vaccine rollout',]
averted_table_rel = averted_table
for (i in 1:(length(queue)-1)){
averted_table[i,c(1:length(unique(workshop$outcome)))] =
severe_outcome_table[severe_outcome_table$scenario == 'no further vaccine rollout',c(1:length(unique(workshop$outcome)))] -
averted_table[i,c(1:length(unique(workshop$outcome)))]
averted_table_rel[i,c(1:length(unique(workshop$outcome)))] = 100 * averted_table[i,c(1:length(unique(workshop$outcome)))]/
severe_outcome_table[severe_outcome_table$scenario == 'no further vaccine rollout',c(1:length(unique(workshop$outcome)))]
}
averted_table; averted_table_rel
#(B/B) plots
baseline = severe_outcome_tracker[severe_outcome_tracker$label == 'no further vaccine rollout',c('time','outcome','proj','proj_cum')]
colnames(baseline) = c(time,'outcome','baseline','baseline_cum')
averted_tracker = severe_outcome_tracker[severe_outcome_tracker$label != 'no further vaccine rollout',] %>%
left_join(baseline) %>%
mutate(averted_abs = baseline - proj,
averted_rel = (baseline - proj) /baseline) %>%
ungroup() %>%
group_by(outcome,label) %>%
mutate(averted_cum = cumsum(averted_abs),
averted_rel_cum = cumsum(averted_abs)/cumsum(baseline))
workshop = averted_tracker[averted_tracker$label %in% list_plot_commands, ]
#abs
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=time,y=averted_abs,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('daily outcome averted', face = 'bold', size = 16))
View(workshop)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(run)_vax_strategies.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_vax_strategies.R", echo=TRUE)
#(B/B) plots
baseline = severe_outcome_tracker[severe_outcome_tracker$label == 'no further vaccine rollout',c('time','outcome','proj','proj_cum')]
View(baseline)
colnames(baseline) = c(time,'outcome','baseline','baseline_cum')
averted_tracker = severe_outcome_tracker[severe_outcome_tracker$label != 'no further vaccine rollout',] %>%
left_join(baseline) %>%
mutate(averted_abs = baseline - proj,
averted_rel = (baseline - proj) /baseline) %>%
ungroup() %>%
group_by(outcome,label) %>%
mutate(averted_cum = cumsum(averted_abs),
averted_rel_cum = cumsum(averted_abs)/cumsum(baseline))
View(averted_tracker)
averted_tracker = severe_outcome_tracker[severe_outcome_tracker$label != 'no further vaccine rollout',]
#(B/B) plots
baseline = severe_outcome_tracker[severe_outcome_tracker$label == 'no further vaccine rollout',c('time','outcome','proj','proj_cum')]
colnames(baseline) = c('time','outcome','baseline','baseline_cum')
averted_tracker = severe_outcome_tracker[severe_outcome_tracker$label != 'no further vaccine rollout',] %>%
left_join(baseline) %>%
mutate(averted_abs = baseline - proj,
averted_rel = (baseline - proj) /baseline) %>%
ungroup() %>%
group_by(outcome,label) %>%
mutate(averted_cum = cumsum(averted_abs),
averted_rel_cum = cumsum(averted_abs)/cumsum(baseline))
workshop = averted_tracker[averted_tracker$label %in% list_plot_commands, ]
#abs
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=time,y=averted_abs,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('daily outcome averted', face = 'bold', size = 16))
#cum
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=day_or_date,y=averted_cum,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('cumulative outcome averted', face = 'bold', size = 16))
workshop = averted_tracker[averted_tracker$label %in% list_plot_commands, ]
#abs
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=time,y=averted_abs,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[2]],plot_list[[3]],plot_list[[4]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('daily outcome averted', face = 'bold', size = 16))
#cum
plot_list = list()
for (i in 1:length(unique(workshop$outcome))){
outcome = unique(workshop$outcome)[i]
plot_list [[i]] <- ggplot(data=workshop[workshop$outcome==outcome,]) +
geom_point(aes(x=time,y=averted_cum,color=as.factor(label))) +
labs(title=paste(outcome)) +
theme_bw() +
xlab("") +
ylab("")}
plot = ggarrange(plot_list[[1]],plot_list[[5]],
common.legend = TRUE,
legend="bottom")
annotate_figure(plot, top = text_grob('cumulative outcome averted', face = 'bold', size = 16))
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_incid by age and vax status.R", echo=TRUE)
library(tidyverse)
library(readr)
library(deSolve)
library(rvest)
library(ggplot2)
library(gridExtra)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(plot)_incid by age and vax status.R", echo=TRUE)
