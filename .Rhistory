select(dose,age_group,outcome_family,days,VE_internal)
#(B) Calculate ratio between age groups
workshop_overall = raw %>%
filter(age_group == 'overall') %>%
rename(VE_overall = VE) %>%
select(dose,days,VE_overall)
workshop_age = raw %>%
filter(! age_group == 'overall') %>%
left_join(workshop_overall, by = c('dose','days')) %>%
mutate(VE_overall = VE/VE_overall)
apply_ratio = workshop_age %>% filter(days == 22) %>% rename(VE_ratio = VE_overall,agegroup_RAW = age_group) %>% select(dose,agegroup_RAW,VE_ratio)
#(C) Convert ratio to age groups in model
CS_age_groupings = c(0,59,79,110) #age groupings in VE estimate data
pop_RAW <- pop_estimates %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$agegroup_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups_num, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
apply_ratio_MODEL = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio) %>%
group_by(dose,agegroup_MODEL) %>%
summarise(VE_ratio = sum(interim),.groups = "keep") %>%
rename(age_group = agegroup_MODEL) %>%
arrange(dose) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
))  %>%
ungroup() %>%
select(-dose)
apply_ratio_MODEL = pop_RAW %>%
left_join(apply_ratio, by = "agegroup_RAW") %>%
mutate(interim = model_group_percent * VE_ratio) %>%
group_by(dose,agegroup_MODEL) %>%
summarise(VE_ratio = sum(interim),.groups = "keep") %>%
rename(age_group = agegroup_MODEL) %>%
arrange(dose) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
))  %>%
ungroup() %>%
select(-dose)
workshop = apply_distribution %>%
rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal) %>%
group_by(dose,agegroup_MODEL,days) %>%
summarise(VE_internal = sum(interim),.groups = "keep") %>%
rename(age_group = agegroup_MODEL)
apply_distribution_MODEL = workshop %>% arrange(dose)  %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary' #copy dose 2 for dose 1
)) %>%
ungroup() %>%
select(-dose)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal) %>%
group_by(dose,agegroup_MODEL,days) %>%
summarise(VE_internal = sum(interim),.groups = "keep") %>%
rename(age_group = agegroup_MODEL)
workshop = apply_distribution %>%
rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal) %>%
group_by(dose,agegroup_MODEL,days) %>%
summarise(VE_internal = sum(interim),.groups = "keep") %>%
rename(age_group = agegroup_MODEL)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(antiviral)(function) stochastic_VE.R", echo=TRUE)
#(2) Load stochastic VE distirbution
#VE_waning_distribution_SO - sample UNIFORM from all point estimates, waning distribution, ratios between age groups etc.
VE_waning_distribution = stochastic_VE()
#(3) Calculate VE against severe outcome by day
VE_tracker = data.frame()
num_time_steps
system.time({VE_time_step(strain_now,date_start+day,outcome)})
0.15*2*365
#(1) load VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
#(1) load VE_distribution
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == strain_now,]
if (strain_now == 'WT'){
VE_distribution <- VE_waning_distribution[VE_waning_distribution$outcome == outcome &
VE_waning_distribution$strain == 'delta',]
}
if ('VE_older_adults' %in% names(sensitivity_analysis_toggles)){
if ('age_group' %in% colnames(VE_distribution)){
if (length(unique(VE_distribution$age_group)) == 1){
VE_distribution = VE_distribution %>% ungroup() %>% select(-age_group)
}
}
}
#(2) doses delivered to this date
vax_to_this_date <- vaccination_history_FINAL[vaccination_history_FINAL$date <= date_now,]
if (nrow(vaccination_history_FINAL[vaccination_history_FINAL$dose == 8,])>0){
booster_type = unique(vaccination_history_FINAL$vaccine_type[vaccination_history_FINAL$dose == 8])
vaccination_history_FINAL[vaccination_history_FINAL$dose == 8,]
if (booster_type == 'Johnson & Johnson'){
booster_dose_number = 2
} else{
booster_dose_number = 3
}
vax_to_this_date = vax_to_this_date %>% mutate(
dose = case_when(
dose == 8 ~ booster_dose_number,
TRUE ~ dose
))
}
vax_to_this_date <- vax_to_this_date %>%
select(risk_group,vaccine_type,dose,date,age_group,doses_delivered_this_date) %>%
rename(doses = doses_delivered_this_date)
total_doses_up_to_this_date <- vax_to_this_date %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(total_delivered = sum(doses),.groups = "keep")
vax_to_this_date <- vax_to_this_date %>%
left_join(total_doses_up_to_this_date, by = c("risk_group", "vaccine_type", "dose", "age_group")) %>%
mutate(prop = case_when(
total_delivered >0 ~ doses/total_delivered,
total_delivered == 0 ~ 0
),
days = as.numeric(date_now - date ))
#<interlude> to add together all days >365 to 365
meddling <- vax_to_this_date[vax_to_this_date$days > 364,]
if(length(unique(meddling$days))>1){
meddling <- meddling %>%
group_by(risk_group,vaccine_type,dose,age_group) %>%
summarise(prop = sum(prop),.groups = "keep") %>%
mutate(days=365)
vax_to_this_date <- rbind(vax_to_this_date[vax_to_this_date$days<365,c(colnames(meddling))],
meddling)
}
meddling
#(3) Bring VE d'n and AIR history together
if ('age_group' %in% colnames(VE_distribution) ){
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days",'age_group')) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
} else{
workshop <- vax_to_this_date %>%
left_join(VE_distribution, by = c("vaccine_type", "dose", "days")) %>%
select(risk_group,vaccine_type,dose,days,age_group,VE_days,prop) %>%
mutate(VE_weighted = VE_days*prop)
}
#(4) Aggregate to estimate population VE for doses
workshop <- workshop %>%
group_by(risk_group,dose,vaccine_type,age_group) %>%
summarise(VE = sum(VE_weighted),.groups = "keep")
if(nrow(workshop[round(workshop$VE,digits=2)>1,])){stop('VE > 1!')}
#<interim> add none covered vaccines
if (exists("vax_type_list") == FALSE){ vax_type_list =unique(vaccination_history_FINAL$vaccine_type)}
if (exists("age_group_labels") == FALSE){ age_group_labels =unique(vaccination_history_FINAL$age_group)}
if (exists("num_vax_doses") == FALSE){ num_vax_doses = length(unique(vaccination_history_FINAL$dose[vaccination_history_FINAL$dose != 8]))}
if (exists("risk_group_labels") == FALSE){ risk_group_labels =unique(vaccination_history_FINAL$risk_group)}
for (t in 1:length(vax_type_list)){
for (i in 1:length(age_group_labels)){
for (d in 1:num_vax_doses){
for (r in 1:length(risk_group_labels)){
this_vax = vax_type_list[t]
if (!( this_vax %in% unique(workshop$vaccine_type[workshop$risk_group == risk_group_labels[r] & workshop$dose == d & workshop$age_group == age_group_labels[i]]))){
workshop2 = crossing(risk_group = risk_group_labels[r],
dose = d,
vaccine_type = this_vax,
age_group = age_group_labels[i],
VE =0)
workshop = rbind(workshop,workshop2)
}
}
}
}
}
workshop[is.na(workshop)] <-0
VE_tidy = workshop
system.time({for (outcome in c('death','severe_disease')){
for (day in 0:num_time_steps){
workshop = VE_time_step(strain_now,date_start+day,outcome)
workshop = workshop %>% mutate(date=day,
outcome_VE=outcome)
VE_tracker = rbind(VE_tracker,workshop)
}
}})
226/60
Sys.time()
time = Sys.time()
time = gsub(':','-',time)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(antiviral)(plot) outcomes averted by vax vs antiviral.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(antiviral)(plot) outcomes averted by vax vs antiviral.R", echo=TRUE)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(mech shop) VE waning distriubtion (severe outcomes).R", echo=TRUE)
VE_waning_distribution_SO %>% filter(VE_days>1)
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(sensitivity)(mech shop) VE reduction in older adults.R", echo=TRUE)
require(ggpubr); require(readr); require(gridExtra); require(ggplot2); require(tidyverse);
### SETUP
rm(list=ls())
plotting_standard =  theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
### (1) SPEED OF WANING ##############################################################################################################################################
raw <- read.csv(file = '1_inputs/VE_severe_outcomes.csv',header=TRUE)
predicted_distribution = data.frame()
subplot_list = list()
for (i in 1:length(unique(raw$age_group))){
for (d in 1: length(unique(raw$dose))){
this_age = unique(raw$age_group)[i]
this_dose = unique(raw$dose)[d]
workshop_real = raw[raw$dose == this_dose & raw$age_group == this_age,]
attach(workshop_real)
#model = lm(log(VE)~days)
model = lm(VE~days)
detach(workshop_real)
time <- seq(0, 365)
#workshop_predicted <- exp(predict(model,list(days=time)))
workshop_predicted <- predict(model,list(days=time))
workshop_predicted = data.frame(cbind(days = time, VE = workshop_predicted))
workshop_predicted = workshop_predicted %>%
mutate(dose = unique(raw$dose)[d],
age_group = unique(raw$age_group)[i],
rsquared = model_rsquared )
predicted_distribution = rbind(predicted_distribution,workshop_predicted)
}
}
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(sensitivity)(mech shop) VE reduction in older adults.R", echo=TRUE)
setting
require(ggpubr); require(readr); require(gridExtra); require(ggplot2); require(tidyverse);
### SETUP
rm(list=ls())
plotting_standard =  theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = 'black'))
### (1) SPEED OF WANING ##############################################################################################################################################
raw <- read.csv(file = '1_inputs/VE_severe_outcomes.csv',header=TRUE)
predicted_distribution = data.frame()
subplot_list = list()
for (i in 1:length(unique(raw$age_group))){
for (d in 1: length(unique(raw$dose))){
this_age = unique(raw$age_group)[i]
this_dose = unique(raw$dose)[d]
workshop_real = raw[raw$dose == this_dose & raw$age_group == this_age,]
attach(workshop_real)
#model = lm(log(VE)~days)
model = lm(VE~days)
model_rsquared = summary(model)$adj.r.squared
detach(workshop_real)
time <- seq(0, 365)
#workshop_predicted <- exp(predict(model,list(days=time)))
workshop_predicted <- predict(model,list(days=time))
workshop_predicted = data.frame(cbind(days = time, VE = workshop_predicted))
workshop_predicted = workshop_predicted %>%
mutate(dose = unique(raw$dose)[d],
age_group = unique(raw$age_group)[i],
rsquared = model_rsquared )
predicted_distribution = rbind(predicted_distribution,workshop_predicted)
}
}
plot_dose2 = ggplot() +
geom_line(data=predicted_distribution[predicted_distribution$dose == 2,],aes(x=days,y=VE,color=as.factor(age_group))) +
geom_point(data = raw[raw$dose == 2,], aes(x=days,y=VE,color=as.factor(age_group))) +
ylim(0,1)+
labs(color='age group') +
xlab('days since vaccination') +
ggtitle('primary schedule') +
plotting_standard
plot_dose3 = ggplot() +
geom_line(data=predicted_distribution[predicted_distribution$dose == 3,],aes(x=days,y=VE,color=as.factor(age_group))) +
geom_point(data = raw[raw$dose == 3,], aes(x=days,y=VE,color=as.factor(age_group))) +
ylim(0,1)+
labs(color='age group') +
xlab('days since vaccination') +
ggtitle('booster dose') +
plotting_standard
grid.arrange(plot_dose2,plot_dose3, nrow=2)
### Internal VE
apply_distribution <- predicted_distribution %>%
group_by(dose,age_group) %>%
mutate(VE_internal = VE / max(VE)) %>%
ungroup() %>%
select(dose,age_group,days,VE_internal,VE)
plot_dose2 = ggplot() +
geom_line(data = apply_distribution[apply_distribution$dose == 2,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
plotting_standard
plot_dose3 = ggplot() +
geom_line(data = apply_distribution[apply_distribution$dose == 3,], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1) +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('booster dose') +
plotting_standard
grid.arrange(plot_dose2,plot_dose3, nrow=2)
### (2) RATIO ##############################################################################################################################################
workshop_overall = raw %>%
filter(age_group == 'overall') %>%
rename(VE_overall = VE) %>%
select(dose,days,VE_overall)
workshop_age = raw %>%
filter(! age_group == 'overall') %>%
left_join(workshop_overall, by = c('dose','days')) %>%
mutate(VE_overall = VE/VE_overall)
apply_ratio = workshop_age %>% filter(days == 22) %>% rename(VE_ratio = VE_overall,agegroup_RAW = age_group) %>% select(dose,agegroup_RAW,VE_ratio)
### COVERT TO MODEL AGE GROUP ##################################################################################################################################
CS_age_groupings = c(0,59,79,110) #age groupings in VE estimate data
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$agegroup_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups_num, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
### COVERT TO MODEL AGE GROUP ##################################################################################################################################
setting = "SLE"
age_groups_num = c(0,4,9,17,29,44,59,69,110)
age_group_labels = c('0 to 4','5 to 9','10 to 17','18 to 29','30 to 44','45 to 59','60 to 69','70 to 100')
num_age_groups = J = length(age_group_labels)
age_group_order = data.frame(age_group = age_group_labels, age_group_num = seq(1:J))
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
pop_setting_orig <- pop_orig %>%
filter(country == setting)
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
rootpath = str_replace(getwd(), "GitHub_vaxAllocation","")
pop_orig <- read.csv(paste(rootpath,"inputs/pop_estimates.csv",sep=''), header=TRUE)
pop_setting_orig <- pop_orig %>%
filter(country == setting)
pop_setting <- pop_setting_orig %>%
mutate(age_group = cut(age,breaks = age_groups_num, include.lowest = T,labels = age_group_labels)) %>%
group_by(age_group) %>%
summarise(pop = as.numeric(sum(population)))
CS_age_groupings = c(0,59,79,110) #age groupings in VE estimate data
pop_RAW <- pop_setting_orig %>%
mutate(agegroup_RAW = cut(age,breaks = CS_age_groupings, include.lowest = T, labels = unique(apply_ratio$agegroup_RAW)),
agegroup_MODEL = cut(age,breaks = age_groups_num, include.lowest = T, labels = age_group_labels)) %>%
ungroup() %>%
group_by(agegroup_MODEL) %>%
mutate(model_group_percent = population/sum(population))
#ratio
workshop = pop_RAW %>% left_join(apply_ratio) %>%
mutate(interim = model_group_percent * VE_ratio)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL),FUN=sum)
colnames(workshop) = c('dose','age_group','VE_ratio')
apply_ratio_MODEL = workshop %>% arrange(dose) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
))  %>%
select(-dose)
#waning
workshop = apply_distribution %>% rename(agegroup_RAW = age_group)
workshop = pop_RAW %>% left_join(workshop) %>%
mutate(interim = model_group_percent * VE_internal)
workshop = aggregate(workshop$interim, by=list(category = workshop$dose,workshop$agegroup_MODEL,workshop$days),FUN=sum)
colnames(workshop) = c('dose','age_group','days','VE_internal')
apply_distribution_MODEL = workshop %>% arrange(dose)  %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
TRUE ~ 'primary'
)) %>%
select(-dose)
plot_dose2 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$schedule == 'primary',], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1)  +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('primary schedule') +
plotting_standard
plot_dose3 = ggplot() +
geom_line(data = apply_distribution_MODEL[apply_distribution_MODEL$schedule == 'booster',], aes(x=days,y=VE_internal,color=as.factor(age_group))) +
ylim(0,1) +
ylab('% of max protection') +
xlab('days since vaccination') +
labs(color='age group') +
ggtitle('booster dose') +
plotting_standard
grid.arrange(plot_dose2,plot_dose3, nrow=2)
### APPLY TO POINT ESTIMATES ##################################################################################################################################
load(file = "1_inputs/VE_estimates_imputed.Rdata")
load(file = "1_inputs/VE_booster_estimates.Rdata")
point_estimates = VE_estimates_imputed %>%
filter(outcome_family == 'severe_outcome' & !(vaccine_type == 'Pfizer' & dose == 3)) %>%
select(strain,vaccine_type,dose,outcome,outcome_family,VE) %>%
mutate(schedule = case_when(
dose > 2 ~ 'booster',
dose == 2 & vaccine_type == "Johnson & Johnson" ~ 'booster',
TRUE ~ 'primary'
))
point_estimates_booster = VE_booster_estimates %>%
filter(outcome_family == 'severe_outcome') %>%
select(strain,vaccine_type,primary_if_booster,dose,outcome,outcome_family,VE) %>%
mutate(schedule = 'booster')
point_estimates = bind_rows(point_estimates,point_estimates_booster)
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100)
### PLOT ##################################################################################################################################
if (exists("vax_type_list") == FALSE){  vax_type_list = c("AstraZeneca","Johnson & Johnson", "Pfizer", "Sinopharm" ) }
waning_to_plot = together %>%
filter(vaccine_type %in% vax_type_list) %>%
mutate(immunity = paste(vaccine_type,dose))
together
together %>% filter(VE_days>1)
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100,
VE_days = min(VE_days,1))
together %>% filter(VE_days>1)
### PLOT ##################################################################################################################################
if (exists("vax_type_list") == FALSE){  vax_type_list = c("AstraZeneca","Johnson & Johnson", "Pfizer", "Sinopharm" ) }
waning_to_plot = together %>%
filter(vaccine_type %in% vax_type_list) %>%
mutate(immunity = paste(vaccine_type,dose))
strain_test = 'omicron'
outcome_test = 'severe_disease'
vaccine_type_test = 'Johnson & Johnson'
vaccine_type_test = 'Pfizer'
ggplot() +
geom_point(data=waning_to_plot[waning_to_plot$strain == strain_test  & waning_to_plot$outcome == outcome_test & waning_to_plot$vaccine_type == vaccine_type_test,],
aes(x=days,y=VE_days,color=as.factor(age_group),shape=as.factor(dose)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against","(",strain_test,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
vax_type_list
waning_to_plot
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100) %>%
mutate(VE_days = min(VE_days,1))
together
point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100)
point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100) %>%
mutate(VE_days = min(VE_days,1))
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100)
together$VE_days = min(together$VE_days,1)
together$VE_days
point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100)
point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100)  %>%
mutate(VE_days = case_when(VE_days>1 ~ 1, TRUE ~ VE_days))
together = point_estimates %>%
left_join(apply_ratio_MODEL,by='schedule') %>%
left_join(apply_distribution_MODEL, by = c('schedule','age_group')) %>%
rename(VE_days = VE) %>%
mutate(VE_days = VE_days*VE_internal*VE_ratio/100)  %>%
mutate(VE_days = case_when(VE_days>1 ~ 1, TRUE ~ VE_days))
### PLOT ##################################################################################################################################
if (exists("vax_type_list") == FALSE){  vax_type_list = c("AstraZeneca","Johnson & Johnson", "Pfizer", "Sinopharm" ) }
waning_to_plot = together %>%
filter(vaccine_type %in% vax_type_list) %>%
mutate(immunity = paste(vaccine_type,dose))
strain_test = 'omicron'
outcome_test = 'severe_disease'
vaccine_type_test = 'Johnson & Johnson'
vaccine_type_test = 'Pfizer'
ggplot() +
geom_point(data=waning_to_plot[waning_to_plot$strain == strain_test  & waning_to_plot$outcome == outcome_test & waning_to_plot$vaccine_type == vaccine_type_test,],
aes(x=days,y=VE_days,color=as.factor(age_group),shape=as.factor(dose)),na.rm=TRUE) +
labs(title=(paste("Waning of VE against","(",strain_test,")"))) +
xlab("days since vaccination") +
ylab("% max protection") +
ylim(0,1)+
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
waning = together %>% mutate(waning = TRUE)
no_waning = together %>% mutate(waning = FALSE) %>%
group_by(strain,vaccine_type,primary_if_booster,dose,age_group,outcome) %>%
mutate(VE_days = max(VE_days))
### SAVE ##################################################################################################################################
SA_VE_older_muted_SO = rbind(waning,no_waning) %>% select(strain, vaccine_type,primary_if_booster, dose, outcome,days,age_group,VE_days,waning)
save(SA_VE_older_muted_SO, file = '1_inputs/SA_VE_older_muted_SO.Rdata')
SA_VE_older_muted_SO %>% filter(days = 0)
SA_VE_older_muted_SO %>% filter(days == 0)
SA_VE_older_muted_SO %>% filter(days == 0 & strain == 'omicron' & age_group == '45 to 59')
SA_VE_older_muted_SO %>% filter(days == 0 & strain == 'omicron' & age_group == '45 to 59' & vaccine_type == 'Moderna')
source("C:/Users/u6044061/Documents/PhD/Research/2_scarce_COVID_vaccine_supply/4_code/GitHub_vaxAllocation/(sensitivity)(mech shop) VE reduction in older adults.R", echo=TRUE)
SA_VE_older_muted_SO %>% filter(days == 0 & strain == 'omicron' & age_group == '45 to 59' & vaccine_type == 'Moderna')
VE_estimates_imputed
SA_VE_older_muted_SO %>% filter(days == 0 & strain == 'omicron' & age_group == '45 to 59' & vaccine_type == 'Moderna')
